I"«A<p>Letâ€™s learn the basics of microservices and microservices architectures. We will also start looking at a basic implementation of a microservice with Spring Boot. We will create a couple of microservices and get them to talk to each other using Eureka Naming Server and Ribbon for Client Side Load Balancing.</p>

<p>This is part 5 of this series. In this part, we will focus on enabling Eureka Naming Server and have the microservices communicate with it.</p>

<h2 id="you-will-learn">You will learn</h2>
<ul>
  <li>What is the need for Naming Server?</li>
  <li>What is Eureka?</li>
  <li>How does Naming Server enable location transparancy between microservices?</li>
</ul>

<h2 id="microservices-overview">Microservices Overview</h2>

<p>In Parts 2 &amp; 3, we created two microservices and established communication between them.</p>

<p><img src="/images/Spring-Boot-Microservice-1-CCS-FS.png" alt="Image" title="Spring-Boot-Microservice-1-CCS-FS" /></p>

<p>In Part 4, we used Ribbon to distribute load between the two instances of Forex Service.</p>

<p>However, we are hardcoding the urls of both instances of Forex Service in CCS.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  forex-service.ribbon.listOfServers=localhost:8000,localhost:8001
</code></pre></div></div>

<p>That means every time there is a new instance of FS, we would need to change the configuration of CCS. Thats not cool.</p>

<p>In this part, we will use Eureka Naming Server to fix this problem.</p>

<p><img src="/images/Spring-Boot-Microservice-6-EurekaNamingServer-Deployment.png" alt="Image" title="Spring-Boot-Microservice-6-EurekaNamingServer-Deployment" /></p>

<h2 id="tools-you-will-need">Tools you will need</h2>
<ul>
  <li>Maven 3.0+ is your build tool</li>
  <li>Your favorite IDE. We use Eclipse.</li>
  <li>JDK 1.8+</li>
</ul>

<h2 id="bootstrapping-eureka-naming-server-with-spring-initializr">Bootstrapping Eureka Naming Server with Spring Initializr</h2>

<p>Creating Eureka Naming Server with Spring Initializr is a cake walk.</p>

<p>Spring Initializr <a href="http://start.spring.io/" target="_blank">http://start.spring.io/</a> is great tool to bootstrap your Spring Boot projects.</p>

<p>You can create a wide variety of projects using Spring Initializr.</p>

<p>Following steps have to be done for a Web Services project</p>

<ul>
  <li>Launch Spring Initializr and choose the following
    <ul>
      <li>Choose <code class="language-plaintext highlighter-rouge">com.girishgodage.springboot.microservice.eureka.naming.server</code> as Group</li>
      <li>Choose <code class="language-plaintext highlighter-rouge">spring-boot-microservice-eureka-naming-server</code> as Artifact</li>
      <li>Choose following dependencies
        <ul>
          <li>Eureka</li>
          <li>DevTools</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Click Generate Project.</li>
  <li>Import the project into Eclipse. File -&gt; Import -&gt; Existing Maven Project.</li>
</ul>

<blockquote>
  <p>Do not forget to choose Eureka in the dependencies</p>
</blockquote>

<h2 id="enabling-eureka">Enabling Eureka</h2>

<p>EnableEurekaServer in <code class="language-plaintext highlighter-rouge">SpringBootMicroserviceEurekaNamingServerApplication</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  @SpringBootApplication
  @EnableEurekaServer
  public class SpringBootMicroserviceEurekaNamingServerApplication {
</code></pre></div></div>

<p>Configure the application name and port for the Eureka Server</p>

<p>/spring-boot-microservice-eureka-naming-server/src/main/resources/application.properties</p>

<div class="language-properties highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="py">spring.application.name</span><span class="p">=</span><span class="s">netflix-eureka-naming-server</span>
  <span class="py">server.port</span><span class="p">=</span><span class="s">8761</span>

  <span class="py">eureka.client.register-with-eureka</span><span class="p">=</span><span class="s">false</span>
  <span class="py">eureka.client.fetch-registry</span><span class="p">=</span><span class="s">false</span>
</code></pre></div></div>

<h2 id="launching-eureka-naming-server">Launching Eureka Naming Server</h2>

<p>Launch <code class="language-plaintext highlighter-rouge">SpringBootMicroserviceEurekaNamingServerApplication</code> as a Java application.</p>

<p>You can launch up Eureka at <code class="language-plaintext highlighter-rouge">http://localhost:8761</code></p>

<p>You would see that there are no instances yet connect to Eureka.</p>

<p><img src="/images/Spring-Boot-Microservice-8-LaunchingEurekaServer.png" alt="Image" title="Spring-Boot-Microservice-8-LaunchingEurekaServer" /></p>

<h2 id="connect-fs-and-ccs-microservices-with-eureka">Connect FS and CCS Microservices with Eureka</h2>

<p>Make these changes on both the microservices</p>

<p>Add to pom.xml</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    &lt;dependency&gt;
      &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
      &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;
    &lt;/dependency&gt;

</code></pre></div></div>

<p>Configure Eureka URL in application.properties</p>

<div class="language-properties highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="py">eureka.client.service-url.default-zone</span><span class="p">=</span><span class="s">http://localhost:8761/eureka</span>
</code></pre></div></div>

<p>Restart all the instances of CCS and FS. You would see that the CCS and FS microservices are registered with Eureka Naming Server. Thats Cool!
<img src="/images/Spring-Boot-Microservice-9-ConnectCCSandFSToEureka.png" alt="Image" title="Spring-Boot-Microservice-9-ConnectCCSandFSToEureka" /></p>

<p>Screenshot shows how to launch an additional instance of Forex Service on 8081.
<img src="/images/Spring-Boot-Microservice-91-LauchingFSOn8081.png" alt="Image" title="Spring-Boot-Microservice-91-LauchingFSOn8081" /></p>

<p>You would see that one instance of CCS and two instances of FS microservices are registered with Eureka Naming Server.
<img src="/images/Spring-Boot-Microservice-92-TwoinstancesofFSOnEureka.png" alt="Image" title="Spring-Boot-Microservice-92-TwoinstancesofFSOnEureka" /></p>

<h2 id="routing-ribbon-requests-through-eureka">Routing Ribbon Requests Through Eureka</h2>

<p>All that you would need to do is to remove this configuration</p>

<p>Remove this configuration in application.properties</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  forex-service.ribbon.listOfServers=localhost:8000,localhost:8001
</code></pre></div></div>

<p>Restart the CCS instance.</p>

<h2 id="eureka-in-action">Eureka in Action</h2>

<p>Currently we have the following services up and running</p>
<ul>
  <li>Currency Conversion Micro Service (CCS) on 8100</li>
  <li>Two instances of Forex MicroService on 8000 and 8001</li>
  <li>Eureka Server launched</li>
</ul>

<p>Now you would see that the requests to CCS would get distributed between the two instances of Forex Microservice by Ribbon through Eureka.</p>

<h3 id="request-1">Request 1</h3>
<p>GET to http://localhost:8100/currency-converter-feign/from/EUR/to/INR/quantity/10000</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">  </span><span class="p">{</span><span class="w">
    </span><span class="err">id:</span><span class="w"> </span><span class="mi">10002</span><span class="p">,</span><span class="w">
    </span><span class="err">from:</span><span class="w"> </span><span class="s2">"EUR"</span><span class="p">,</span><span class="w">
    </span><span class="err">to:</span><span class="w"> </span><span class="s2">"INR"</span><span class="p">,</span><span class="w">
    </span><span class="err">conversionMultiple:</span><span class="w"> </span><span class="mi">75</span><span class="p">,</span><span class="w">
    </span><span class="err">quantity:</span><span class="w"> </span><span class="mi">10000</span><span class="p">,</span><span class="w">
    </span><span class="err">totalCalculatedAmount:</span><span class="w"> </span><span class="mi">750000</span><span class="p">,</span><span class="w">
    </span><span class="err">port:</span><span class="w"> </span><span class="mi">8000</span><span class="p">,</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="request-2">Request 2</h3>
<p>GET to http://localhost:8100/currency-converter-feign/from/EUR/to/INR/quantity/10000</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">  </span><span class="p">{</span><span class="w">
    </span><span class="err">id:</span><span class="w"> </span><span class="mi">10002</span><span class="p">,</span><span class="w">
    </span><span class="err">from:</span><span class="w"> </span><span class="s2">"EUR"</span><span class="p">,</span><span class="w">
    </span><span class="err">to:</span><span class="w"> </span><span class="s2">"INR"</span><span class="p">,</span><span class="w">
    </span><span class="err">conversionMultiple:</span><span class="w"> </span><span class="mi">75</span><span class="p">,</span><span class="w">
    </span><span class="err">quantity:</span><span class="w"> </span><span class="mi">10000</span><span class="p">,</span><span class="w">
    </span><span class="err">totalCalculatedAmount:</span><span class="w"> </span><span class="mi">750000</span><span class="p">,</span><span class="w">
    </span><span class="err">port:</span><span class="w"> </span><span class="mi">8001</span><span class="p">,</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>You can see that the port numbers in the two responses are different.</p>

<blockquote>
  <p>Exercise : Launch up another instance of Forex Service on 8002. You would see that load gets automatically routed to it as well</p>
</blockquote>

<p>Cool! Thats awesome. Isnâ€™t it.</p>

<h2 id="summary">Summary</h2>

<p>We have now created two microservices and established communication between them.</p>

<p><img src="/images/Spring-Boot-Microservice-1-CCS-FS.png" alt="Image" title="Spring-Boot-Microservice-1-CCS-FS" /></p>

<p>We are using Ribbon to distribute load between the two instances of Forex Service and Eureka as the naming server.</p>

<p>When we launch new instances of Forex Service, you would see that load is automatically distribute to them.</p>

<p>The idea behind these series of 5 articles was to give a flavor of Spring Boot and Spring Cloud with Microservices.</p>

<p>There is a lot more ground to conver with Microservices. Until next time, Cheers!</p>

<h2 id="complete-code-example">Complete Code Example</h2>

<h6 id="spring-boot-microservice-currency-conversion-servicepomxml">/spring-boot-microservice-currency-conversion-service/pom.xml</h6>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
  <span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">"http://maven.apache.org/POM/4.0.0"</span> <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>

    <span class="nt">&lt;groupId&gt;</span>com.girishgodage.springboot.microservice.example.currency-conversion<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>spring-boot-microservice-currency-conversion<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;version&gt;</span>0.0.1-SNAPSHOT<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;packaging&gt;</span>jar<span class="nt">&lt;/packaging&gt;</span>

    <span class="nt">&lt;name&gt;</span>spring-boot-microservice-currency-conversion<span class="nt">&lt;/name&gt;</span>
    <span class="nt">&lt;description&gt;</span>Microservices with Spring Boot and Spring Cloud - Currency Conversion Service<span class="nt">&lt;/description&gt;</span>

    <span class="nt">&lt;parent&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-parent<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>2.0.0.RELEASE<span class="nt">&lt;/version&gt;</span>
      <span class="nt">&lt;relativePath</span> <span class="nt">/&gt;</span> <span class="c">&lt;!-- lookup parent from repository --&gt;</span>
    <span class="nt">&lt;/parent&gt;</span>

    <span class="nt">&lt;properties&gt;</span>
      <span class="nt">&lt;project.build.sourceEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.build.sourceEncoding&gt;</span>
      <span class="nt">&lt;project.reporting.outputEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.reporting.outputEncoding&gt;</span>
      <span class="nt">&lt;java.version&gt;</span>1.8<span class="nt">&lt;/java.version&gt;</span>
      <span class="nt">&lt;spring-cloud.version&gt;</span>Finchley.M8<span class="nt">&lt;/spring-cloud.version&gt;</span>
    <span class="nt">&lt;/properties&gt;</span>

    <span class="nt">&lt;dependencies&gt;</span>
      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.cloud<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>
      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-web<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>

      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.cloud<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-cloud-starter-openfeign<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>

      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.cloud<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-cloud-starter-netflix-ribbon<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>

      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-boot-devtools<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;scope&gt;</span>runtime<span class="nt">&lt;/scope&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>
      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-test<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;scope&gt;</span>test<span class="nt">&lt;/scope&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;/dependencies&gt;</span>

    <span class="nt">&lt;dependencyManagement&gt;</span>
      <span class="nt">&lt;dependencies&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
          <span class="nt">&lt;groupId&gt;</span>org.springframework.cloud<span class="nt">&lt;/groupId&gt;</span>
          <span class="nt">&lt;artifactId&gt;</span>spring-cloud-dependencies<span class="nt">&lt;/artifactId&gt;</span>
          <span class="nt">&lt;version&gt;</span>${spring-cloud.version}<span class="nt">&lt;/version&gt;</span>
          <span class="nt">&lt;type&gt;</span>pom<span class="nt">&lt;/type&gt;</span>
          <span class="nt">&lt;scope&gt;</span>import<span class="nt">&lt;/scope&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
      <span class="nt">&lt;/dependencies&gt;</span>
    <span class="nt">&lt;/dependencyManagement&gt;</span>

    <span class="nt">&lt;build&gt;</span>
      <span class="nt">&lt;plugins&gt;</span>
        <span class="nt">&lt;plugin&gt;</span>
          <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
          <span class="nt">&lt;artifactId&gt;</span>spring-boot-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;/plugin&gt;</span>
      <span class="nt">&lt;/plugins&gt;</span>
    <span class="nt">&lt;/build&gt;</span>

    <span class="nt">&lt;repositories&gt;</span>
      <span class="nt">&lt;repository&gt;</span>
        <span class="nt">&lt;id&gt;</span>spring-snapshots<span class="nt">&lt;/id&gt;</span>
        <span class="nt">&lt;name&gt;</span>Spring Snapshots<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://repo.spring.io/snapshot<span class="nt">&lt;/url&gt;</span>
        <span class="nt">&lt;snapshots&gt;</span>
          <span class="nt">&lt;enabled&gt;</span>true<span class="nt">&lt;/enabled&gt;</span>
        <span class="nt">&lt;/snapshots&gt;</span>
      <span class="nt">&lt;/repository&gt;</span>
      <span class="nt">&lt;repository&gt;</span>
        <span class="nt">&lt;id&gt;</span>spring-milestones<span class="nt">&lt;/id&gt;</span>
        <span class="nt">&lt;name&gt;</span>Spring Milestones<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://repo.spring.io/milestone<span class="nt">&lt;/url&gt;</span>
        <span class="nt">&lt;snapshots&gt;</span>
          <span class="nt">&lt;enabled&gt;</span>false<span class="nt">&lt;/enabled&gt;</span>
        <span class="nt">&lt;/snapshots&gt;</span>
      <span class="nt">&lt;/repository&gt;</span>
    <span class="nt">&lt;/repositories&gt;</span>

    <span class="nt">&lt;pluginRepositories&gt;</span>
      <span class="nt">&lt;pluginRepository&gt;</span>
        <span class="nt">&lt;id&gt;</span>spring-snapshots<span class="nt">&lt;/id&gt;</span>
        <span class="nt">&lt;name&gt;</span>Spring Snapshots<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://repo.spring.io/snapshot<span class="nt">&lt;/url&gt;</span>
        <span class="nt">&lt;snapshots&gt;</span>
          <span class="nt">&lt;enabled&gt;</span>true<span class="nt">&lt;/enabled&gt;</span>
        <span class="nt">&lt;/snapshots&gt;</span>
      <span class="nt">&lt;/pluginRepository&gt;</span>
      <span class="nt">&lt;pluginRepository&gt;</span>
        <span class="nt">&lt;id&gt;</span>spring-milestones<span class="nt">&lt;/id&gt;</span>
        <span class="nt">&lt;name&gt;</span>Spring Milestones<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://repo.spring.io/milestone<span class="nt">&lt;/url&gt;</span>
        <span class="nt">&lt;snapshots&gt;</span>
          <span class="nt">&lt;enabled&gt;</span>false<span class="nt">&lt;/enabled&gt;</span>
        <span class="nt">&lt;/snapshots&gt;</span>
      <span class="nt">&lt;/pluginRepository&gt;</span>
    <span class="nt">&lt;/pluginRepositories&gt;</span>


  <span class="nt">&lt;/project&gt;</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-currency-conversion-servicesrcmainjavacomgirishgodagespringbootmicroserviceexamplecurrencyconversioncurrencyconversionbeanjava">/spring-boot-microservice-currency-conversion-service/src/main/java/com/girishgodage/springboot/microservice/example/currencyconversion/CurrencyConversionBean.java</h6>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">package</span> <span class="nn">com.girishgodage.springboot.microservice.example.currencyconversion</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>

  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">CurrencyConversionBean</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">Long</span> <span class="n">id</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">from</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">to</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">BigDecimal</span> <span class="n">conversionMultiple</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">BigDecimal</span> <span class="n">quantity</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">BigDecimal</span> <span class="n">totalCalculatedAmount</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">port</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">CurrencyConversionBean</span><span class="o">()</span> <span class="o">{</span>

    <span class="o">}</span>

    <span class="kd">public</span> <span class="nf">CurrencyConversionBean</span><span class="o">(</span><span class="nc">Long</span> <span class="n">id</span><span class="o">,</span> <span class="nc">String</span> <span class="n">from</span><span class="o">,</span> <span class="nc">String</span> <span class="n">to</span><span class="o">,</span> <span class="nc">BigDecimal</span> <span class="n">conversionMultiple</span><span class="o">,</span> <span class="nc">BigDecimal</span> <span class="n">quantity</span><span class="o">,</span>
        <span class="nc">BigDecimal</span> <span class="n">totalCalculatedAmount</span><span class="o">,</span> <span class="kt">int</span> <span class="n">port</span><span class="o">)</span> <span class="o">{</span>
      <span class="kd">super</span><span class="o">();</span>
      <span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
      <span class="k">this</span><span class="o">.</span><span class="na">from</span> <span class="o">=</span> <span class="n">from</span><span class="o">;</span>
      <span class="k">this</span><span class="o">.</span><span class="na">to</span> <span class="o">=</span> <span class="n">to</span><span class="o">;</span>
      <span class="k">this</span><span class="o">.</span><span class="na">conversionMultiple</span> <span class="o">=</span> <span class="n">conversionMultiple</span><span class="o">;</span>
      <span class="k">this</span><span class="o">.</span><span class="na">quantity</span> <span class="o">=</span> <span class="n">quantity</span><span class="o">;</span>
      <span class="k">this</span><span class="o">.</span><span class="na">totalCalculatedAmount</span> <span class="o">=</span> <span class="n">totalCalculatedAmount</span><span class="o">;</span>
      <span class="k">this</span><span class="o">.</span><span class="na">port</span> <span class="o">=</span> <span class="n">port</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">Long</span> <span class="nf">getId</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">id</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setId</span><span class="o">(</span><span class="nc">Long</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getFrom</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">from</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setFrom</span><span class="o">(</span><span class="nc">String</span> <span class="n">from</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">from</span> <span class="o">=</span> <span class="n">from</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getTo</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">to</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTo</span><span class="o">(</span><span class="nc">String</span> <span class="n">to</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">to</span> <span class="o">=</span> <span class="n">to</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">BigDecimal</span> <span class="nf">getConversionMultiple</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">conversionMultiple</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setConversionMultiple</span><span class="o">(</span><span class="nc">BigDecimal</span> <span class="n">conversionMultiple</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">conversionMultiple</span> <span class="o">=</span> <span class="n">conversionMultiple</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">BigDecimal</span> <span class="nf">getQuantity</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">quantity</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setQuantity</span><span class="o">(</span><span class="nc">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">quantity</span> <span class="o">=</span> <span class="n">quantity</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">BigDecimal</span> <span class="nf">getTotalCalculatedAmount</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">totalCalculatedAmount</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTotalCalculatedAmount</span><span class="o">(</span><span class="nc">BigDecimal</span> <span class="n">totalCalculatedAmount</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">totalCalculatedAmount</span> <span class="o">=</span> <span class="n">totalCalculatedAmount</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPort</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">port</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPort</span><span class="o">(</span><span class="kt">int</span> <span class="n">port</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">port</span> <span class="o">=</span> <span class="n">port</span><span class="o">;</span>
    <span class="o">}</span>

  <span class="o">}</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-currency-conversion-servicesrcmainjavacomgirishgodagespringbootmicroserviceexamplecurrencyconversioncurrencyconversioncontrollerjava">/spring-boot-microservice-currency-conversion-service/src/main/java/com/girishgodage/springboot/microservice/example/currencyconversion/CurrencyConversionController.java</h6>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">package</span> <span class="nn">com.girishgodage.springboot.microservice.example.currencyconversion</span><span class="o">;</span>

  <span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>

  <span class="kn">import</span> <span class="nn">org.slf4j.Logger</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.slf4j.LoggerFactory</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.http.ResponseEntity</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.GetMapping</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.PathVariable</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RestController</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.web.client.RestTemplate</span><span class="o">;</span>

  <span class="nd">@RestController</span>
  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">CurrencyConversionController</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="nc">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getClass</span><span class="o">());</span>

    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">CurrencyExchangeServiceProxy</span> <span class="n">proxy</span><span class="o">;</span>

    <span class="nd">@GetMapping</span><span class="o">(</span><span class="s">"/currency-converter/from/{from}/to/{to}/quantity/{quantity}"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">CurrencyConversionBean</span> <span class="nf">convertCurrency</span><span class="o">(</span><span class="nd">@PathVariable</span> <span class="nc">String</span> <span class="n">from</span><span class="o">,</span> <span class="nd">@PathVariable</span> <span class="nc">String</span> <span class="n">to</span><span class="o">,</span>
        <span class="nd">@PathVariable</span> <span class="nc">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>

      <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="n">uriVariables</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
      <span class="n">uriVariables</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"from"</span><span class="o">,</span> <span class="n">from</span><span class="o">);</span>
      <span class="n">uriVariables</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"to"</span><span class="o">,</span> <span class="n">to</span><span class="o">);</span>

      <span class="nc">ResponseEntity</span><span class="o">&lt;</span><span class="nc">CurrencyConversionBean</span><span class="o">&gt;</span> <span class="n">responseEntity</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">RestTemplate</span><span class="o">().</span><span class="na">getForEntity</span><span class="o">(</span>
          <span class="s">"http://localhost:8000/currency-exchange/from/{from}/to/{to}"</span><span class="o">,</span> <span class="nc">CurrencyConversionBean</span><span class="o">.</span><span class="na">class</span><span class="o">,</span>
          <span class="n">uriVariables</span><span class="o">);</span>

      <span class="nc">CurrencyConversionBean</span> <span class="n">response</span> <span class="o">=</span> <span class="n">responseEntity</span><span class="o">.</span><span class="na">getBody</span><span class="o">();</span>

      <span class="k">return</span> <span class="k">new</span> <span class="nf">CurrencyConversionBean</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getId</span><span class="o">(),</span> <span class="n">from</span><span class="o">,</span> <span class="n">to</span><span class="o">,</span> <span class="n">response</span><span class="o">.</span><span class="na">getConversionMultiple</span><span class="o">(),</span> <span class="n">quantity</span><span class="o">,</span>
          <span class="n">quantity</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getConversionMultiple</span><span class="o">()),</span> <span class="n">response</span><span class="o">.</span><span class="na">getPort</span><span class="o">());</span>
    <span class="o">}</span>

    <span class="nd">@GetMapping</span><span class="o">(</span><span class="s">"/currency-converter-feign/from/{from}/to/{to}/quantity/{quantity}"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">CurrencyConversionBean</span> <span class="nf">convertCurrencyFeign</span><span class="o">(</span><span class="nd">@PathVariable</span> <span class="nc">String</span> <span class="n">from</span><span class="o">,</span> <span class="nd">@PathVariable</span> <span class="nc">String</span> <span class="n">to</span><span class="o">,</span>
        <span class="nd">@PathVariable</span> <span class="nc">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>

      <span class="nc">CurrencyConversionBean</span> <span class="n">response</span> <span class="o">=</span> <span class="n">proxy</span><span class="o">.</span><span class="na">retrieveExchangeValue</span><span class="o">(</span><span class="n">from</span><span class="o">,</span> <span class="n">to</span><span class="o">);</span>

      <span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"{}"</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>

      <span class="k">return</span> <span class="k">new</span> <span class="nf">CurrencyConversionBean</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getId</span><span class="o">(),</span> <span class="n">from</span><span class="o">,</span> <span class="n">to</span><span class="o">,</span> <span class="n">response</span><span class="o">.</span><span class="na">getConversionMultiple</span><span class="o">(),</span> <span class="n">quantity</span><span class="o">,</span>
          <span class="n">quantity</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getConversionMultiple</span><span class="o">()),</span> <span class="n">response</span><span class="o">.</span><span class="na">getPort</span><span class="o">());</span>
    <span class="o">}</span>

  <span class="o">}</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-currency-conversion-servicesrcmainjavacomgirishgodagespringbootmicroserviceexamplecurrencyconversioncurrencyexchangeserviceproxyjava">/spring-boot-microservice-currency-conversion-service/src/main/java/com/girishgodage/springboot/microservice/example/currencyconversion/CurrencyExchangeServiceProxy.java</h6>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">package</span> <span class="nn">com.girishgodage.springboot.microservice.example.currencyconversion</span><span class="o">;</span>

  <span class="kn">import</span> <span class="nn">org.springframework.cloud.openfeign.FeignClient</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.cloud.netflix.ribbon.RibbonClient</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.GetMapping</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.PathVariable</span><span class="o">;</span>

  <span class="nd">@FeignClient</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"forex-service"</span><span class="o">)</span>
  <span class="nd">@RibbonClient</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"forex-service"</span><span class="o">)</span>
  <span class="kd">public</span> <span class="kd">interface</span> <span class="nc">CurrencyExchangeServiceProxy</span> <span class="o">{</span>
    <span class="nd">@GetMapping</span><span class="o">(</span><span class="s">"/currency-exchange/from/{from}/to/{to}"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">CurrencyConversionBean</span> <span class="nf">retrieveExchangeValue</span>
      <span class="o">(</span><span class="nd">@PathVariable</span><span class="o">(</span><span class="s">"from"</span><span class="o">)</span> <span class="nc">String</span> <span class="n">from</span><span class="o">,</span> <span class="nd">@PathVariable</span><span class="o">(</span><span class="s">"to"</span><span class="o">)</span> <span class="nc">String</span> <span class="n">to</span><span class="o">);</span>
  <span class="o">}</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-currency-conversion-servicesrcmainjavacomgirishgodagespringbootmicroserviceexamplecurrencyconversionspringbootmicroservicecurrencyconversionapplicationjava">/spring-boot-microservice-currency-conversion-service/src/main/java/com/girishgodage/springboot/microservice/example/currencyconversion/SpringBootMicroserviceCurrencyConversionApplication.java</h6>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">package</span> <span class="nn">com.girishgodage.springboot.microservice.example.currencyconversion</span><span class="o">;</span>

  <span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.cloud.client.discovery.EnableDiscoveryClient</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.cloud.netflix.feign.EnableFeignClients</span><span class="o">;</span>

  <span class="nd">@SpringBootApplication</span>
  <span class="nd">@EnableFeignClients</span><span class="o">(</span><span class="s">"com.girishgodage.springboot.microservice.example.currencyconversion"</span><span class="o">)</span>
  <span class="nd">@EnableDiscoveryClient</span>
  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">SpringBootMicroserviceCurrencyConversionApplication</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
      <span class="nc">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="nc">SpringBootMicroserviceCurrencyConversionApplication</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
    <span class="o">}</span>
  <span class="o">}</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-currency-conversion-servicesrcmainresourcesapplicationproperties">/spring-boot-microservice-currency-conversion-service/src/main/resources/application.properties</h6>

<div class="language-properties highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="py">spring.application.name</span><span class="p">=</span><span class="s">currency-conversion-service</span>
  <span class="py">server.port</span><span class="p">=</span><span class="s">8100</span>
  <span class="py">eureka.client.service-url.default-zone</span><span class="p">=</span><span class="s">http://localhost:8761/eureka</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-currency-conversion-servicesrctestjavacomgirishgodagespringbootmicroserviceexamplecurrencyconversionspringbootmicroservicecurrencyconversionapplicationtestsjava">/spring-boot-microservice-currency-conversion-service/src/test/java/com/girishgodage/springboot/microservice/example/currencyconversion/SpringBootMicroserviceCurrencyConversionApplicationTests.java</h6>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">package</span> <span class="nn">com.girishgodage.springboot.microservice.example.currencyconversion</span><span class="o">;</span>

  <span class="kn">import</span> <span class="nn">org.junit.Test</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.junit.runner.RunWith</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.boot.test.context.SpringBootTest</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.test.context.junit4.SpringRunner</span><span class="o">;</span>

  <span class="nd">@RunWith</span><span class="o">(</span><span class="nc">SpringRunner</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
  <span class="nd">@SpringBootTest</span>
  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">SpringBootMicroserviceCurrencyConversionApplicationTests</span> <span class="o">{</span>

    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">contextLoads</span><span class="o">()</span> <span class="o">{</span>
    <span class="o">}</span>

  <span class="o">}</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-eureka-naming-serverpomxml">/spring-boot-microservice-eureka-naming-server/pom.xml</h6>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
  <span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">"http://maven.apache.org/POM/4.0.0"</span> <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>

    <span class="nt">&lt;groupId&gt;</span>com.girishgodage.springboot.microservice.eureka.naming.server<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>spring-boot-microservice-eureka-naming-server<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;version&gt;</span>0.0.1-SNAPSHOT<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;packaging&gt;</span>jar<span class="nt">&lt;/packaging&gt;</span>

    <span class="nt">&lt;name&gt;</span>spring-boot-microservice-eureka-naming-server<span class="nt">&lt;/name&gt;</span>
    <span class="nt">&lt;description&gt;</span>Microservices with Spring Boot and Spring Cloud - Eureka Naming Server<span class="nt">&lt;/description&gt;</span>

    <span class="nt">&lt;parent&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-parent<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>2.0.0.RELEASE<span class="nt">&lt;/version&gt;</span>
      <span class="nt">&lt;relativePath/&gt;</span> <span class="c">&lt;!-- lookup parent from repository --&gt;</span>
    <span class="nt">&lt;/parent&gt;</span>

    <span class="nt">&lt;properties&gt;</span>
      <span class="nt">&lt;project.build.sourceEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.build.sourceEncoding&gt;</span>
      <span class="nt">&lt;project.reporting.outputEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.reporting.outputEncoding&gt;</span>
      <span class="nt">&lt;java.version&gt;</span>1.8<span class="nt">&lt;/java.version&gt;</span>
      <span class="nt">&lt;spring-cloud.version&gt;</span>Finchley.M8<span class="nt">&lt;/spring-cloud.version&gt;</span>
    <span class="nt">&lt;/properties&gt;</span>

    <span class="nt">&lt;dependencies&gt;</span>
      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.cloud<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>

      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-test<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;scope&gt;</span>test<span class="nt">&lt;/scope&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;/dependencies&gt;</span>

    <span class="nt">&lt;dependencyManagement&gt;</span>
      <span class="nt">&lt;dependencies&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
          <span class="nt">&lt;groupId&gt;</span>org.springframework.cloud<span class="nt">&lt;/groupId&gt;</span>
          <span class="nt">&lt;artifactId&gt;</span>spring-cloud-dependencies<span class="nt">&lt;/artifactId&gt;</span>
          <span class="nt">&lt;version&gt;</span>${spring-cloud.version}<span class="nt">&lt;/version&gt;</span>
          <span class="nt">&lt;type&gt;</span>pom<span class="nt">&lt;/type&gt;</span>
          <span class="nt">&lt;scope&gt;</span>import<span class="nt">&lt;/scope&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
      <span class="nt">&lt;/dependencies&gt;</span>
    <span class="nt">&lt;/dependencyManagement&gt;</span>

    <span class="nt">&lt;build&gt;</span>
      <span class="nt">&lt;plugins&gt;</span>
        <span class="nt">&lt;plugin&gt;</span>
          <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
          <span class="nt">&lt;artifactId&gt;</span>spring-boot-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;/plugin&gt;</span>
      <span class="nt">&lt;/plugins&gt;</span>
    <span class="nt">&lt;/build&gt;</span>

    <span class="nt">&lt;repositories&gt;</span>
      <span class="nt">&lt;repository&gt;</span>
        <span class="nt">&lt;id&gt;</span>spring-snapshots<span class="nt">&lt;/id&gt;</span>
        <span class="nt">&lt;name&gt;</span>Spring Snapshots<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://repo.spring.io/snapshot<span class="nt">&lt;/url&gt;</span>
        <span class="nt">&lt;snapshots&gt;</span>
          <span class="nt">&lt;enabled&gt;</span>true<span class="nt">&lt;/enabled&gt;</span>
        <span class="nt">&lt;/snapshots&gt;</span>
      <span class="nt">&lt;/repository&gt;</span>
      <span class="nt">&lt;repository&gt;</span>
        <span class="nt">&lt;id&gt;</span>spring-milestones<span class="nt">&lt;/id&gt;</span>
        <span class="nt">&lt;name&gt;</span>Spring Milestones<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://repo.spring.io/milestone<span class="nt">&lt;/url&gt;</span>
        <span class="nt">&lt;snapshots&gt;</span>
          <span class="nt">&lt;enabled&gt;</span>false<span class="nt">&lt;/enabled&gt;</span>
        <span class="nt">&lt;/snapshots&gt;</span>
      <span class="nt">&lt;/repository&gt;</span>
    <span class="nt">&lt;/repositories&gt;</span>

    <span class="nt">&lt;pluginRepositories&gt;</span>
      <span class="nt">&lt;pluginRepository&gt;</span>
        <span class="nt">&lt;id&gt;</span>spring-snapshots<span class="nt">&lt;/id&gt;</span>
        <span class="nt">&lt;name&gt;</span>Spring Snapshots<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://repo.spring.io/snapshot<span class="nt">&lt;/url&gt;</span>
        <span class="nt">&lt;snapshots&gt;</span>
          <span class="nt">&lt;enabled&gt;</span>true<span class="nt">&lt;/enabled&gt;</span>
        <span class="nt">&lt;/snapshots&gt;</span>
      <span class="nt">&lt;/pluginRepository&gt;</span>
      <span class="nt">&lt;pluginRepository&gt;</span>
        <span class="nt">&lt;id&gt;</span>spring-milestones<span class="nt">&lt;/id&gt;</span>
        <span class="nt">&lt;name&gt;</span>Spring Milestones<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://repo.spring.io/milestone<span class="nt">&lt;/url&gt;</span>
        <span class="nt">&lt;snapshots&gt;</span>
          <span class="nt">&lt;enabled&gt;</span>false<span class="nt">&lt;/enabled&gt;</span>
        <span class="nt">&lt;/snapshots&gt;</span>
      <span class="nt">&lt;/pluginRepository&gt;</span>
    <span class="nt">&lt;/pluginRepositories&gt;</span>


  <span class="nt">&lt;/project&gt;</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-eureka-naming-serversrcmainjavacomgirishgodagespringbootmicroserviceeurekanamingserverspringbootmicroserviceeurekanamingserverapplicationjava">/spring-boot-microservice-eureka-naming-server/src/main/java/com/girishgodage/springboot/microservice/eureka/naming/server/SpringBootMicroserviceEurekaNamingServerApplication.java</h6>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">package</span> <span class="nn">com.girishgodage.springboot.microservice.eureka.naming.server</span><span class="o">;</span>

  <span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.cloud.netflix.eureka.server.EnableEurekaServer</span><span class="o">;</span>

  <span class="nd">@SpringBootApplication</span>
  <span class="nd">@EnableEurekaServer</span>
  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">SpringBootMicroserviceEurekaNamingServerApplication</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
      <span class="nc">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="nc">SpringBootMicroserviceEurekaNamingServerApplication</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
    <span class="o">}</span>
  <span class="o">}</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-eureka-naming-serversrcmainresourcesapplicationproperties">/spring-boot-microservice-eureka-naming-server/src/main/resources/application.properties</h6>

<div class="language-properties highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="py">spring.application.name</span><span class="p">=</span><span class="s">netflix-eureka-naming-server</span>
  <span class="py">server.port</span><span class="p">=</span><span class="s">8761</span>

  <span class="py">eureka.client.register-with-eureka</span><span class="p">=</span><span class="s">false</span>
  <span class="py">eureka.client.fetch-registry</span><span class="p">=</span><span class="s">false</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-eureka-naming-serversrctestjavacomgirishgodagespringbootmicroserviceeurekanamingserverspringbootmicroserviceeurekanamingserverapplicationtestsjava">/spring-boot-microservice-eureka-naming-server/src/test/java/com/girishgodage/springboot/microservice/eureka/naming/server/SpringBootMicroserviceEurekaNamingServerApplicationTests.java</h6>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">package</span> <span class="nn">com.girishgodage.springboot.microservice.eureka.naming.server</span><span class="o">;</span>

  <span class="kn">import</span> <span class="nn">org.junit.Test</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.junit.runner.RunWith</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.boot.test.context.SpringBootTest</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.test.context.junit4.SpringRunner</span><span class="o">;</span>

  <span class="nd">@RunWith</span><span class="o">(</span><span class="nc">SpringRunner</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
  <span class="nd">@SpringBootTest</span>
  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">SpringBootMicroserviceEurekaNamingServerApplicationTests</span> <span class="o">{</span>

    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">contextLoads</span><span class="o">()</span> <span class="o">{</span>
    <span class="o">}</span>

  <span class="o">}</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-forex-servicepomxml">/spring-boot-microservice-forex-service/pom.xml</h6>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
  <span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">"http://maven.apache.org/POM/4.0.0"</span> <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
    <span class="na">xsi:schemaLocation=</span><span class="s">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>

    <span class="nt">&lt;groupId&gt;</span>com.girishgodage.springboot.microservice.example.forex<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>spring-boot-microservice-forex-service<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;version&gt;</span>0.0.1-SNAPSHOT<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;packaging&gt;</span>jar<span class="nt">&lt;/packaging&gt;</span>

    <span class="nt">&lt;name&gt;</span>spring-boot-microservice-forex-service<span class="nt">&lt;/name&gt;</span>
    <span class="nt">&lt;description&gt;</span>Microservices with Spring Boot and Spring Cloud - Forex Service<span class="nt">&lt;/description&gt;</span>

    <span class="nt">&lt;parent&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-parent<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>2.0.0.RELEASE<span class="nt">&lt;/version&gt;</span>
      <span class="nt">&lt;relativePath/&gt;</span> <span class="c">&lt;!-- lookup parent from repository --&gt;</span>
    <span class="nt">&lt;/parent&gt;</span>

    <span class="nt">&lt;properties&gt;</span>
      <span class="nt">&lt;project.build.sourceEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.build.sourceEncoding&gt;</span>
      <span class="nt">&lt;project.reporting.outputEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.reporting.outputEncoding&gt;</span>
      <span class="nt">&lt;java.version&gt;</span>1.8<span class="nt">&lt;/java.version&gt;</span>
      <span class="nt">&lt;spring-cloud.version&gt;</span>Finchley.M8<span class="nt">&lt;/spring-cloud.version&gt;</span>
    <span class="nt">&lt;/properties&gt;</span>

    <span class="nt">&lt;dependencies&gt;</span>
      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.cloud<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>
      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-data-jpa<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>
      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-web<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>

      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-boot-devtools<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;scope&gt;</span>runtime<span class="nt">&lt;/scope&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>
      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>com.h2database<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>h2<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;scope&gt;</span>runtime<span class="nt">&lt;/scope&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>
      <span class="nt">&lt;dependency&gt;</span>
        <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
        <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-test<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;scope&gt;</span>test<span class="nt">&lt;/scope&gt;</span>
      <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;/dependencies&gt;</span>

    <span class="nt">&lt;dependencyManagement&gt;</span>
      <span class="nt">&lt;dependencies&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
          <span class="nt">&lt;groupId&gt;</span>org.springframework.cloud<span class="nt">&lt;/groupId&gt;</span>
          <span class="nt">&lt;artifactId&gt;</span>spring-cloud-dependencies<span class="nt">&lt;/artifactId&gt;</span>
          <span class="nt">&lt;version&gt;</span>${spring-cloud.version}<span class="nt">&lt;/version&gt;</span>
          <span class="nt">&lt;type&gt;</span>pom<span class="nt">&lt;/type&gt;</span>
          <span class="nt">&lt;scope&gt;</span>import<span class="nt">&lt;/scope&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
      <span class="nt">&lt;/dependencies&gt;</span>
    <span class="nt">&lt;/dependencyManagement&gt;</span>

    <span class="nt">&lt;build&gt;</span>
      <span class="nt">&lt;plugins&gt;</span>
        <span class="nt">&lt;plugin&gt;</span>
          <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
          <span class="nt">&lt;artifactId&gt;</span>spring-boot-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;/plugin&gt;</span>
      <span class="nt">&lt;/plugins&gt;</span>
    <span class="nt">&lt;/build&gt;</span>

    <span class="nt">&lt;repositories&gt;</span>
      <span class="nt">&lt;repository&gt;</span>
        <span class="nt">&lt;id&gt;</span>spring-snapshots<span class="nt">&lt;/id&gt;</span>
        <span class="nt">&lt;name&gt;</span>Spring Snapshots<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://repo.spring.io/snapshot<span class="nt">&lt;/url&gt;</span>
        <span class="nt">&lt;snapshots&gt;</span>
          <span class="nt">&lt;enabled&gt;</span>true<span class="nt">&lt;/enabled&gt;</span>
        <span class="nt">&lt;/snapshots&gt;</span>
      <span class="nt">&lt;/repository&gt;</span>
      <span class="nt">&lt;repository&gt;</span>
        <span class="nt">&lt;id&gt;</span>spring-milestones<span class="nt">&lt;/id&gt;</span>
        <span class="nt">&lt;name&gt;</span>Spring Milestones<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://repo.spring.io/milestone<span class="nt">&lt;/url&gt;</span>
        <span class="nt">&lt;snapshots&gt;</span>
          <span class="nt">&lt;enabled&gt;</span>false<span class="nt">&lt;/enabled&gt;</span>
        <span class="nt">&lt;/snapshots&gt;</span>
      <span class="nt">&lt;/repository&gt;</span>
    <span class="nt">&lt;/repositories&gt;</span>

    <span class="nt">&lt;pluginRepositories&gt;</span>
      <span class="nt">&lt;pluginRepository&gt;</span>
        <span class="nt">&lt;id&gt;</span>spring-snapshots<span class="nt">&lt;/id&gt;</span>
        <span class="nt">&lt;name&gt;</span>Spring Snapshots<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://repo.spring.io/snapshot<span class="nt">&lt;/url&gt;</span>
        <span class="nt">&lt;snapshots&gt;</span>
          <span class="nt">&lt;enabled&gt;</span>true<span class="nt">&lt;/enabled&gt;</span>
        <span class="nt">&lt;/snapshots&gt;</span>
      <span class="nt">&lt;/pluginRepository&gt;</span>
      <span class="nt">&lt;pluginRepository&gt;</span>
        <span class="nt">&lt;id&gt;</span>spring-milestones<span class="nt">&lt;/id&gt;</span>
        <span class="nt">&lt;name&gt;</span>Spring Milestones<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://repo.spring.io/milestone<span class="nt">&lt;/url&gt;</span>
        <span class="nt">&lt;snapshots&gt;</span>
          <span class="nt">&lt;enabled&gt;</span>false<span class="nt">&lt;/enabled&gt;</span>
        <span class="nt">&lt;/snapshots&gt;</span>
      <span class="nt">&lt;/pluginRepository&gt;</span>
    <span class="nt">&lt;/pluginRepositories&gt;</span>


  <span class="nt">&lt;/project&gt;</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-forex-servicesrcmainjavacomgirishgodagespringbootmicroserviceexampleforexexchangevaluejava">/spring-boot-microservice-forex-service/src/main/java/com/girishgodage/springboot/microservice/example/forex/ExchangeValue.java</h6>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">package</span> <span class="nn">com.girishgodage.springboot.microservice.example.forex</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>

  <span class="kn">import</span> <span class="nn">javax.persistence.Column</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">javax.persistence.Entity</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">javax.persistence.Id</span><span class="o">;</span>

  <span class="nd">@Entity</span>
  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">ExchangeValue</span> <span class="o">{</span>
    
    <span class="nd">@Id</span>
    <span class="kd">private</span> <span class="nc">Long</span> <span class="n">id</span><span class="o">;</span>
    
    <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"currency_from"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">from</span><span class="o">;</span>
    
    <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"currency_to"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">to</span><span class="o">;</span>
    
    <span class="kd">private</span> <span class="nc">BigDecimal</span> <span class="n">conversionMultiple</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">port</span><span class="o">;</span>
    
    <span class="kd">public</span> <span class="nf">ExchangeValue</span><span class="o">()</span> <span class="o">{</span>
      
    <span class="o">}</span>
    

    <span class="kd">public</span> <span class="nf">ExchangeValue</span><span class="o">(</span><span class="nc">Long</span> <span class="n">id</span><span class="o">,</span> <span class="nc">String</span> <span class="n">from</span><span class="o">,</span> <span class="nc">String</span> <span class="n">to</span><span class="o">,</span> <span class="nc">BigDecimal</span> <span class="n">conversionMultiple</span><span class="o">)</span> <span class="o">{</span>
      <span class="kd">super</span><span class="o">();</span>
      <span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
      <span class="k">this</span><span class="o">.</span><span class="na">from</span> <span class="o">=</span> <span class="n">from</span><span class="o">;</span>
      <span class="k">this</span><span class="o">.</span><span class="na">to</span> <span class="o">=</span> <span class="n">to</span><span class="o">;</span>
      <span class="k">this</span><span class="o">.</span><span class="na">conversionMultiple</span> <span class="o">=</span> <span class="n">conversionMultiple</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">Long</span> <span class="nf">getId</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">id</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getFrom</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">from</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getTo</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">to</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">BigDecimal</span> <span class="nf">getConversionMultiple</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">conversionMultiple</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPort</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">port</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPort</span><span class="o">(</span><span class="kt">int</span> <span class="n">port</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">port</span> <span class="o">=</span> <span class="n">port</span><span class="o">;</span>
    <span class="o">}</span>

  <span class="o">}</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-forex-servicesrcmainjavacomgirishgodagespringbootmicroserviceexampleforexexchangevaluerepositoryjava">/spring-boot-microservice-forex-service/src/main/java/com/girishgodage/springboot/microservice/example/forex/ExchangeValueRepository.java</h6>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">package</span> <span class="nn">com.girishgodage.springboot.microservice.example.forex</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.JpaRepository</span><span class="o">;</span>

  <span class="kd">public</span> <span class="kd">interface</span> <span class="nc">ExchangeValueRepository</span> <span class="kd">extends</span> 
      <span class="nc">JpaRepository</span><span class="o">&lt;</span><span class="nc">ExchangeValue</span><span class="o">,</span> <span class="nc">Long</span><span class="o">&gt;{</span>
    <span class="nc">ExchangeValue</span> <span class="nf">findByFromAndTo</span><span class="o">(</span><span class="nc">String</span> <span class="n">from</span><span class="o">,</span> <span class="nc">String</span> <span class="n">to</span><span class="o">);</span>
  <span class="o">}</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-forex-servicesrcmainjavacomgirishgodagespringbootmicroserviceexampleforexforexcontrollerjava">/spring-boot-microservice-forex-service/src/main/java/com/girishgodage/springboot/microservice/example/forex/ForexController.java</h6>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">package</span> <span class="nn">com.girishgodage.springboot.microservice.example.forex</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>

  <span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.core.env.Environment</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.GetMapping</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.PathVariable</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RestController</span><span class="o">;</span>

  <span class="nd">@RestController</span>
  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">ForexController</span> <span class="o">{</span>
    
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">Environment</span> <span class="n">environment</span><span class="o">;</span>
    
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">ExchangeValueRepository</span> <span class="n">repository</span><span class="o">;</span>
    
    <span class="nd">@GetMapping</span><span class="o">(</span><span class="s">"/currency-exchange/from/{from}/to/{to}"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">ExchangeValue</span> <span class="nf">retrieveExchangeValue</span>
      <span class="o">(</span><span class="nd">@PathVariable</span> <span class="nc">String</span> <span class="n">from</span><span class="o">,</span> <span class="nd">@PathVariable</span> <span class="nc">String</span> <span class="n">to</span><span class="o">){</span>
      
      <span class="nc">ExchangeValue</span> <span class="n">exchangeValue</span> <span class="o">=</span> 
          <span class="n">repository</span><span class="o">.</span><span class="na">findByFromAndTo</span><span class="o">(</span><span class="n">from</span><span class="o">,</span> <span class="n">to</span><span class="o">);</span>
      
      <span class="n">exchangeValue</span><span class="o">.</span><span class="na">setPort</span><span class="o">(</span>
          <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">environment</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">"local.server.port"</span><span class="o">)));</span>
      
      <span class="k">return</span> <span class="n">exchangeValue</span><span class="o">;</span>
    <span class="o">}</span>
  <span class="o">}</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-forex-servicesrcmainjavacomgirishgodagespringbootmicroserviceexampleforexspringbootmicroserviceforexserviceapplicationjava">/spring-boot-microservice-forex-service/src/main/java/com/girishgodage/springboot/microservice/example/forex/SpringBootMicroserviceForexServiceApplication.java</h6>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">package</span> <span class="nn">com.girishgodage.springboot.microservice.example.forex</span><span class="o">;</span>

  <span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.cloud.client.discovery.EnableDiscoveryClient</span><span class="o">;</span>

  <span class="nd">@SpringBootApplication</span>
  <span class="nd">@EnableDiscoveryClient</span>
  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">SpringBootMicroserviceForexServiceApplication</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
      <span class="nc">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="nc">SpringBootMicroserviceForexServiceApplication</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
    <span class="o">}</span>
  <span class="o">}</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-forex-servicesrcmainresourcesapplicationproperties">/spring-boot-microservice-forex-service/src/main/resources/application.properties</h6>

<div class="language-properties highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="py">spring.application.name</span><span class="p">=</span><span class="s">forex-service</span>
  <span class="py">server.port</span><span class="p">=</span><span class="s">8000</span>

  <span class="py">spring.jpa.show-sql</span><span class="p">=</span><span class="s">true</span>
  <span class="py">spring.h2.console.enabled</span><span class="p">=</span><span class="s">true</span>

  <span class="py">eureka.client.service-url.default-zone</span><span class="p">=</span><span class="s">http://localhost:8761/eureka</span>
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-forex-servicesrcmainresourcesdatasql">/spring-boot-microservice-forex-service/src/main/resources/data.sql</h6>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  insert into exchange_value(id,currency_from,currency_to,conversion_multiple,port)
  values(10001,'USD','INR',65,0);
  insert into exchange_value(id,currency_from,currency_to,conversion_multiple,port)
  values(10002,'EUR','INR',75,0);
  insert into exchange_value(id,currency_from,currency_to,conversion_multiple,port)
  values(10003,'AUD','INR',25,0);
</code></pre></div></div>
<hr />

<h6 id="spring-boot-microservice-forex-servicesrctestjavacomgirishgodagespringbootmicroserviceexampleforexspringbootmicroserviceforexserviceapplicationtestsjava">/spring-boot-microservice-forex-service/src/test/java/com/girishgodage/springboot/microservice/example/forex/SpringBootMicroserviceForexServiceApplicationTests.java</h6>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">package</span> <span class="nn">com.girishgodage.springboot.microservice.example.forex</span><span class="o">;</span>

  <span class="kn">import</span> <span class="nn">org.junit.Test</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.junit.runner.RunWith</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.boot.test.context.SpringBootTest</span><span class="o">;</span>
  <span class="kn">import</span> <span class="nn">org.springframework.test.context.junit4.SpringRunner</span><span class="o">;</span>

  <span class="nd">@RunWith</span><span class="o">(</span><span class="nc">SpringRunner</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
  <span class="nd">@SpringBootTest</span>
  <span class="kd">public</span> <span class="kd">class</span> <span class="nc">SpringBootMicroserviceForexServiceApplicationTests</span> <span class="o">{</span>

    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">contextLoads</span><span class="o">()</span> <span class="o">{</span>
    <span class="o">}</span>

  <span class="o">}</span>
</code></pre></div></div>

<hr />
<h3 id="springboot-microservice">SpringBoot Microservice</h3>

<p>This is a 5 Part Article Series</p>

<p>Microservices with Spring Boot</p>
<ul>
  <li>Part 1 - <a href="/blog/creating-microservices-with-spring-boot-part-1-getting-started" target="_blank">Getting Started with Microservices Architecture</a></li>
  <li>Part 2 - <a href="/blog/creating-microservices-with-spring-boot-part-2-forex-microservice" target="_blank">Creating Forex Microservice</a></li>
  <li>Part 3 - <a href="/blog/creating-microservices-with-spring-boot-part-3-currency-conversion-microservice" target="_blank">Creating Currency Conversion Microservice</a></li>
  <li>Part 4 - <a href="/blog/microservices-with-spring-boot-part-4-ribbon-for-load-balancing" target="_blank">Using Ribbon for Load Balancing</a></li>
  <li>Part 5 - <a href="/blog/microservices-with-spring-boot-part-5-eureka-naming-server" target="_blank">Using Eureka Naming Server</a></li>
</ul>

<!--Section: Lesson UI-->
<section class="text-center">
    <hr />
   
    <div class="row">
        <div class="col-lg-4 col-md-6 col-sm-6">
            <a target="_blank" href="/blog/microservices-with-spring-boot-part-4-ribbon-for-load-balancing" class="btn  btn-sm" id="round-button">
                <i class="fas fa-arrow-left mr-2"></i>Previous Lesson
            </a>
        </div>
     
        <div class="col-lg-4 col-md-6 col-sm-6">
            <a target="_blank" href="/blog/microservices-with-spring-boot-part-5-eureka-naming-server" class="btn btn-sm" id="round-button">Next Lesson
                <i class="fas fa-arrow-right ml-2"></i>
            </a>
        </div>       
    </div>

</section>

:ET