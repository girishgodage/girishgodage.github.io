<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-03-27T06:18:21+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Girish Godage</title><subtitle>I am a passionate Leader, who has a good command in technology &amp; Mangement. Also, I am a creative designer and an innovatie techie.</subtitle><author><name>Girish Godage</name></author><entry><title type="html">The service desk with bots using Amazon Lex and Amazon Connect (Part 1)</title><link href="http://localhost:4000/blog/create-service-desk-with-bots-using-amazon-lex-and-amazon-connect-part-1" rel="alternate" type="text/html" title="The service desk with bots using Amazon Lex and Amazon Connect (Part 1)" /><published>2020-02-02T11:41:00+00:00</published><updated>2020-02-02T11:41:00+00:00</updated><id>http://localhost:4000/blog/create-service-desk-with-bots-using-amazon-lex-and-amazon-connect-part-1</id><content type="html" xml:base="http://localhost:4000/blog/create-service-desk-with-bots-using-amazon-lex-and-amazon-connect-part-1">&lt;h2 id=&quot;the-service-desk-with-bots-using-amazon-lex-and-amazon-connect-part-1&quot;&gt;The service desk with bots using Amazon Lex and Amazon Connect (Part 1)&lt;/h2&gt;

&lt;p&gt;What! Is this guy for real? Does he really think he can replace the front line of IT with pre-canned conversations?” I must admit, it’s a bold statement. The IT Service Desk has been around for years and has been the foot in the door for most of us in the IT industry. It’s the face of IT operations and plays an important role in ensuring an organisation’s staff can perform to the best of their abilities. But what if we could take some of the repetitive tasks the service desk performs and automate them? Not only would we be saving on head count costs, we would be able to ensure correct policies and procedures are followed to uphold security and compliance. The aim of this blog is to provide a working example of the automation of one service desk scenario to show how easy and accessible the technology is, and how it can be applied to various use cases.&lt;/p&gt;

&lt;p&gt;To make it easier to follow along, I’ve broken this blog up into a number of parts. Part 1 will focus on the high-level architecture for the scenario and begin creating the Lex chatbot.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/selfservicedora.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;scenario&quot;&gt;Scenario&lt;/h2&gt;
&lt;p&gt;Arguably, the most common service desk request is the password reset. While this is a pretty simple issue for the service desk to resolve, many service desk staff seem to skip over, or not realise the importance of user verification. Both the simple resolution and the strict verification requirement make this a prime scenario to automate.&lt;/p&gt;

&lt;h2 id=&quot;architecture&quot;&gt;Architecture&lt;/h2&gt;
&lt;p&gt;So what does the architecture look like? The diagram below dictates the expected process flow. Let’s step through each item in the diagram.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/amazon-connect-page-1-1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;amazon-connect&quot;&gt;Amazon Connect&lt;/h3&gt;
&lt;p&gt;The process begins when the user calls the service desk and requests to have their password reset. In our architecture, the service desk uses Amazon Connect which is a cloud based customer contact centre service, allowing you to create contact flows, manage agents, and track performance metrics. We’re also able to plug in an Amazon Lex chatbot to handle user requests and offload the call to a human if the chatbot is unable to understand the user’s intent.&lt;/p&gt;

&lt;h3 id=&quot;amazon-lex&quot;&gt;Amazon Lex&lt;/h3&gt;
&lt;p&gt;After the user has stated their request to change their password, we need to begin the user verification process. Their intent is recognised by our Amazon Lex chatbot, which initiates the dialog for the user verification process to ensure they are who they really say they are.&lt;/p&gt;

&lt;h3 id=&quot;aws-lambda&quot;&gt;AWS Lambda&lt;/h3&gt;
&lt;p&gt;After the user has provided verification information, AWS Lambda, which is a compute on demand service, is used to validate the user’s input and verify it against internal records. To do this, Lambda interrogates Active Directory to validate the user.&lt;/p&gt;

&lt;h3 id=&quot;amazon-sns&quot;&gt;Amazon SNS&lt;/h3&gt;
&lt;p&gt;Once the user has been validated, their password is reset to a random string in Active Directory and the password is messaged to the user’s phone using Amazon’s Simple Notification Service. This completes the interaction.&lt;/p&gt;

&lt;h2 id=&quot;building-our-chatbot&quot;&gt;Building our Chatbot&lt;/h2&gt;
&lt;p&gt;Before we get into the details, it’s worth mentioning that the aim of this blog is to convey the technology capability. There’s many ways of enhancing the solution or improving validation of user input that I’ve skipped over, so while this isn’t a finished production ready product, it’s certainly a good foundation to begin building an automated call centre.&lt;/p&gt;

&lt;p&gt;To begin, let’s start with building our Chatbot in &lt;strong&gt;Amazon Lex&lt;/strong&gt;. In the Amazon Console, navigate to Amazon Lex. You’ll notice it’s only available in Ireland and US East. As Amazon Connect and my Active Directory environment is also in US East, that’s the region I’ve chosen.&lt;/p&gt;

&lt;p&gt;Go ahead and select &lt;strong&gt;Create Bot&lt;/strong&gt;, then choose to create your own &lt;strong&gt;Custom Bot&lt;/strong&gt;. I’ve named mine “&lt;strong&gt;UserAdministration&lt;/strong&gt;”. Choose an Output voice and set the session timeout to 5 minutes. An IAM Role will automatically be created on your behalf to allow your bot to use Amazon Polly for speech. For COPPA, select &lt;strong&gt;No&lt;/strong&gt;, then select &lt;strong&gt;Create&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/custombot.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the bot has been created, we need to identify the user action expected to be performed, which is known as an intent. A bot can have multiple intents, but for our scenario, we’re only creating one, which is the password reset intent. Go ahead and select &lt;strong&gt;Create Intent&lt;/strong&gt;, then in the Add Intent window, select &lt;strong&gt;Create new intent&lt;/strong&gt;. My intent name is &lt;strong&gt;“ResetPW”&lt;/strong&gt;. Select &lt;strong&gt;Add&lt;/strong&gt;, which should add the intent to your bot. We now need to specify some expected sample utterances, which are phrases the user can use to trigger the Reset Password intent. There’s quite a few that could be listed here, but I’m going to limit mine to the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;I forgot my password&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;I need to reset my password&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Can you please reset my password&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/utterances.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next section is the configuration for the Lambda validation function. Let’s skip past this for the time being and move onto the slots. Slots are used to collect information from the user. In our case, we need to collect verification information to ensure the user is who they say they are. The verification information collected is going to vary between environments. I’m looking to collect the following to verify against Active Directory:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;User ID&lt;/strong&gt; – In my case, this is a 6-digit employee number that is also the sAMAccountName in Active Directory&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;User’s birthday&lt;/strong&gt; – This is a custom attribute in my Active Directory&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Month started&lt;/strong&gt; – This is a custom attribute in my Active Directory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to this, it’s also worth collecting and verifying the user’s mobile number. This can be done by passing the caller ID information from Amazon Connect, however we’ll skip this, as the bulk of our testing will be text chat and we need to ensure we have a consistent experience.&lt;/p&gt;

&lt;p&gt;To define a slot, we need to specify three items:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Name of the slot&lt;/strong&gt; – Think of this as the variable name.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Slot type&lt;/strong&gt; – The data type expected. This is used to train the machine learning model to recognise the value for the slot.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Prompt&lt;/strong&gt; – How the user is prompted to provide the value sought.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Many slot types are provided by Amazon, two of which has been used in this scenario. For “MonthStarted”, I’ve decided to create my own custom slot type, as the in-built “AMAZON.Month” slot type wasn’t strictly enforcing recognisable months. To create your own slot type, press the &lt;strong&gt;plus&lt;/strong&gt; symbol on the left-hand side of the page next to &lt;strong&gt;Slot Types&lt;/strong&gt;, then provide a name and description for your slot type. Select to &lt;strong&gt;Restrict to Slot values and Synonyms&lt;/strong&gt;, then enter each month and its abbreviation. Once completed, click Add slot to intent.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/monthsofyear.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the custom slot type has been configured, it’s time to set up the slots for the intent. The screenshot below shows the slots that have been configured and the expected order to prompt the user.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/slots.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Last step (for this blog post), is to have the bot verify the information collected is correct. Tick the Confirmation Prompt box and in the Confirm text box provided, enter the following:&lt;/p&gt;

&lt;p&gt;Just to confirm, your user ID is {UserID}, your Date of Birth is {DOB} and the month you started is {MonthStarted}. Is this correct?&lt;/p&gt;

&lt;p&gt;For the Cancel text box, enter the following:
Sorry about that. Please call back and try again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/confirmation.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Be sure to leave the &lt;strong&gt;fulfillment&lt;/strong&gt; to &lt;strong&gt;Return parameters to client&lt;/strong&gt; and hit &lt;strong&gt;Save Intent&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Great! We’ve built the bare basics of our bot. It doesn’t really do much yet, but let’s take it for a spin anyway and get a feel for what to expect. In the top right-hand corner, there’s a &lt;strong&gt;build&lt;/strong&gt; button. Go ahead and click the button.&lt;/p&gt;

&lt;p&gt;This takes some time, as building a bot triggers machine learning and creates the models for your bot. Once completed, the bot should be available to text or voice chat on the right side of the page. As you move through the prompts, you can see at the bottom the slots getting populated with the expected format. i.e. 14th April 1983 is converted to 1983-04-14.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/chatlog.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So at the moment, our bot doesn’t do much but collect the information we need. Admittedly, the conversation is a bit robotic as well. In the next few blogs, we’ll give the bot a bit more of a personality, we’ll do some input validation, and we’ll begin to integrate with Active Directory. Once we’ve got our bot working as expected, we’ll bolt on Amazon Connect to allow users to dial in and converse with our new bot.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-lambda-initialisation-and-validation-function&quot;&gt;Creating the Lambda initialisation and validation function&lt;/h2&gt;

&lt;p&gt;As data validation requires compute, we’ll need to start by creating an AWS Lambda function. Head over to the AWS console, then navigate to the AWS Lambda page. Once you’re there, select Create Function and choose to Author from Scratch then specify the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;: ResetPWCheck&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Runtime&lt;/strong&gt;: Python 2.7 (it’s really a matter of preference)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Role&lt;/strong&gt;: I use an existing Out of the Box role, “Lambda_basic_execution”, as I only need access to CloudWatch logs for debugging.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/createfunction.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you’ve populated all the fields, go ahead and select Create Function. The script we’ll be using is provided (further down) in this blog, however before we go through the script in detail, there are two items worth mentioning.&lt;/p&gt;

&lt;h3 id=&quot;input-events-and-response-formats&quot;&gt;Input Events and Response Formats&lt;/h3&gt;
&lt;p&gt;It’s well worth familiarising yourself with the page on Lambda Function Input Event and Response Formats in the Lex Developer guide. Every time input is provided to Lex, it invokes the Lambda initalisation and validation function.
&lt;em&gt;&lt;strong&gt;For example&lt;/strong&gt;, when I tell my chatbot “I need to reset my password”, the lambda function is invoked and the following event is passed:&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;currentIntent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;slots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;DOB&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;MonthStarted&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;confirmationStatus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ResetPW&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;slotDetails&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;DOB&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;originalValue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;resolutions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;MonthStarted&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;originalValue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;resolutions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;originalValue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;resolutions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;userId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;sd0xe8xzbgf1kyvtbnzsuymxky2a5bnq&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;bot&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;alias&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$LATEST&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$LATEST&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UserAdministration&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;inputTranscript&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;I need to reset my password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;requestAttributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;invocationSource&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;DialogCodeHook&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;outputDialogMode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;messageVersion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;sessionAttributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Amazon Lex expects a response from the Lambda function in JSON format that provides it with the next dialog action.&lt;/p&gt;

&lt;h3 id=&quot;persisting-variables-with-session-attributes&quot;&gt;Persisting Variables with Session Attributes&lt;/h3&gt;

&lt;p&gt;There are many ways to determine within your Lambda function where you’re up to in your chat dialog, however my preferred method is to pass state information within the SessionAttributes object of the input event and response as a key/value pair. The SessionAttributes can persist between invocations of the Lambda function (every time input is provided to the chatbot), however you must remember to collect and pass the attributes between input and responses to ensure it persists.&lt;/p&gt;

&lt;h3 id=&quot;input-validation-code&quot;&gt;Input Validation Code&lt;/h3&gt;
&lt;p&gt;With that out of the way, let’s begin looking at the code. The below script is what I’ve used which you can simply copy and paste, assuming you’re using the same slot and intent names in your Lex bot that were used.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;elicit_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;messageType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slotToElicit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;sessionAttributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;Completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;completed&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ElicitSlot&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;contentType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messageType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;intentName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ResetPW&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;slots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;slotToElicit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slotToElicit&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;delegate_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;sessionAttributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;Completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;completed&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Delegate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;slots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chkUserId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'UserID'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;That format seems incorrect. Let's try again. What is your user id?&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elicit_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PlainText&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delegate_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;userid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chkDob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DOB&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;That format seems incorrect. Let's try again. What is your Date of Birth?&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elicit_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PlainText&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;DOB&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;userid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delegate_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dob&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chkMonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;confirmation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outputDialogMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MonthStarted&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;That month seems incorrect. Let's try again. What month did you start?&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elicit_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PlainText&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;MonthStarted&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dob&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;confirmIntent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;confirmation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outputDialogMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;confirmIntent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;confirmation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outputDialogMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;confirmation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ConfirmIntent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;intentName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ResetPW&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;slots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outputDialogMode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Voice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;contentType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;SSML&quot;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;speak&amp;gt;Just to confirm, your user id is &amp;lt;say-as interpret-as=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;digits&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
                &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;/say-as&amp;gt;, your date of birth is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
                &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DOB&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; and the month of your start date is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
                &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MonthStarted&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;. Is that correct?&amp;lt;/speak&amp;gt;&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;contentType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;PlainText&quot;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Just to confirm, your user id is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
                &lt;span class=&quot;s&quot;&gt;&quot;, your date of birth is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
                &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DOB&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; and the month of your start date is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
                &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MonthStarted&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;. Is that correct?&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;confirmation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Denied&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Close&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;fulfillmentState&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Failed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&quot;contentType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;PlainText&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Please call back and try again.&quot;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delegate_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;confirmed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;lambda_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'currentIntent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'slots'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sessionAttributes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;confirmation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'currentIntent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;confirmationStatus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;outputDialogMode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;outputDialogMode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Completed&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Sure, i can help with that! But first, i need to verify your identity. What is your user id?&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elicit_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PlainText&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chkUserId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;userid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chkDob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dob&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chkMonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;confirmation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outputDialogMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s break it down.&lt;/p&gt;

&lt;p&gt;When the lambda function is first invoked, we check to see if any state is set in the sessionAttributes. If not, we can assume this is the first time the lambda function is invoked and as a result, provide a welcoming response while requesting the User’s ID. To ensure the user isn’t welcomed again, we set a session state so the Lambda function knows to move to User ID validation when next invoked. This is done by setting the “Completed” : “None” key/value pair in the response SessionAttributes.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Completed&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Sure, i can help with that! But first, i need to verify your identity. What is your user id?&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elicit_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PlainText&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, we check the User ID. You’ll notice the chkUserId function checks for two things; That the slot is populated, and if it is, the length of the field. Because the slot type is AMAZON.Number, any non-numeric characters that are entered will be rejected by the slot. If this occurs, the slot will be left empty, hence this is something we’re looking out for. We also want to ensure the User ID is 6 digits, otherwise it is considered invalid. If the input is correct, we set the session state key/value pair to indicate User ID validation is complete then allow the dialog to continue, otherwise we request the user to re-enter their User ID.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chkUserId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'UserID'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;That format seems incorrect. Let's try again. What is your user id?&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elicit_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PlainText&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delegate_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;userid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, we check the Date of Birth. Because the slot type is strict regarding input, we don’t do much validation here. An utterance for this slot type generally maps to a complete date: YYYY-MM-DD. For validation purpose, we’re just looking for an empty slot. Like the User ID check, we set the session state and allow the dialog to continue if all looks good.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chkDob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DOB&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;That format seems incorrect. Let's try again. What is your Date of Birth?&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elicit_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PlainText&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messageContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;DOB&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;userid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delegate_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dob&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, we check the last slot which is the Month Started. Assuming the input for the month started is correct, we then confirm the intent by reading all the slot values back to the user and asking if it’s correct. You’ll notice here that there’s a bit of logic to determine if the user is using voice or text to interact with Lex. If voice is used, we use Speech Synthesis Markup Language (SSML) to ensure the UserID value is read as digits, rather than as the full number.
If the user is happy with the slot values, the validation completes and Lex then moves to the next Lambda function to fulfil the intent (next blog). If the user isn’t happy with the slot values, the lambda function exits telling the user to call back and try again.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;confirmIntent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;confirmation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outputDialogMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;confirmation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;None&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ConfirmIntent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;intentName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ResetPW&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;slots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outputDialogMode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Voice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;contentType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;SSML&quot;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;speak&amp;gt;Just to confirm, your user id is &amp;lt;say-as interpret-as=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;digits&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
                &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;/say-as&amp;gt;, your date of birth is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
                &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DOB&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; and the month of your start date is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
                &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MonthStarted&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;. Is that correct?&amp;lt;/speak&amp;gt;&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;contentType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;PlainText&quot;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Just to confirm, your user id is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UserID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
                &lt;span class=&quot;s&quot;&gt;&quot;, your date of birth is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
                &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DOB&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; and the month of your start date is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
                &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MonthStarted&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;. Is that correct?&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;confirmation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Denied&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;dialogAction&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Close&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;fulfillmentState&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Failed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&quot;contentType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;PlainText&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Please call back and try again.&quot;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delegate_slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;confirmed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endData&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Okay, now that our Lambda function is finished, we need to enable it as a code hook for initialisation and validation. Head over to your Lex bot, select the “ResetPW” intent, then tick the box under &lt;strong&gt;Lambda initialisation and validation&lt;/strong&gt; and select your Lambda function. A prompt will be given to provide permissions to allow your Lex bot to invoke the lambda function. Select &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/lambdaval.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s hit Build on the chatbot, and test it out.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/chatlog2.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So, we’ve managed to make the conversation a bit more human like and we can now detect invalid input. If you use the microphone to chat with your bot, you’ll notice the User ID value is read as digits. That’s it for this blog. Next blog, we’ll integrate Active Directory and actually get a password reset and sent via SNS to a mobile phone.&lt;/p&gt;

&lt;!--Section: Lesson UI--&gt;
&lt;section class=&quot;text-center&quot;&gt;
    &lt;hr /&gt;
   
    &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;col-lg-4 col-md-6 col-sm-6&quot;&gt;
            &lt;a target=&quot;_blank&quot; href=&quot;/blog/create-service-desk-with-bots-using-amazon-lex-and-amazon-connect-part-1&quot; class=&quot;btn  btn-sm&quot; id=&quot;round-button&quot;&gt;
                &lt;i class=&quot;fas fa-arrow-left mr-2&quot;&gt;&lt;/i&gt;Previous Lesson
            &lt;/a&gt;
        &lt;/div&gt;
     
        &lt;div class=&quot;col-lg-4 col-md-6 col-sm-6&quot;&gt;
            &lt;a target=&quot;_blank&quot; href=&quot;/blog/create-service-desk-with-bots-using-amazon-lex-and-amazon-connect-part-2&quot; class=&quot;btn btn-sm&quot; id=&quot;round-button&quot;&gt;Next Lesson
                &lt;i class=&quot;fas fa-arrow-right ml-2&quot;&gt;&lt;/i&gt;
            &lt;/a&gt;
        &lt;/div&gt;       
    &lt;/div&gt;

&lt;/section&gt;</content><author><name>Girish Godage</name></author><category term="learning" /><summary type="html">The service desk with bots using Amazon Lex and Amazon Connect (Part 1)</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/img/aws_cloud.png" /></entry><entry><title type="html">Amazon pinpoint - Customer Engagement</title><link href="http://localhost:4000/blog/customer-engagement-with-Amazon-pinpoint" rel="alternate" type="text/html" title="Amazon pinpoint - Customer Engagement" /><published>2020-02-02T11:41:00+00:00</published><updated>2020-02-02T11:41:00+00:00</updated><id>http://localhost:4000/blog/customer-engagement-with-Amazon-pinpoint</id><content type="html" xml:base="http://localhost:4000/blog/customer-engagement-with-Amazon-pinpoint">&lt;h2 id=&quot;what-is-customer-engagement&quot;&gt;What is Customer Engagement?&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Customer engagement&lt;/em&gt; refers to the practices that organizations employ to keep users coming back to their applications. Maximizing customer engagement is vital in today’s digital marketplace, where an ever-increasing number of brands are competing for a finite amount of customer attention. In this article, we discuss the factors that impact customer engagement, and provide information about specific steps you can take to improve customer engagement.&lt;/p&gt;

&lt;h3 id=&quot;why-customer-engagement-matters&quot;&gt;Why customer engagement matters&lt;/h3&gt;

&lt;p&gt;In 2012, the average adult in the United States spent one hour per day using his or her mobile device; by 2017, that figure had increased to 5.6 hours per day. Over half of that time is spent using third-party apps, but the majority of app users access 20 or fewer apps each month. Of those 20 apps, most users spent the vast majority of their time in their top 10 applications.&lt;/p&gt;

&lt;p&gt;At the same time, first impressions are everything in today’s digital marketplace. Almost a quarter of users have downloaded an app, ran it once, and never opened it again. Additional research suggests that as many as 80% of all app users stop using a given app within 90 days.&lt;/p&gt;

&lt;p&gt;These statistics paint a very clear picture: in order to succeed in this highly competitive environment, organizations must deliver digital content that delights and engages their customers.&lt;/p&gt;

&lt;h3 id=&quot;customer-engagement-in-action&quot;&gt;Customer engagement in action&lt;/h3&gt;
&lt;p&gt;Let’s assume your organization produces a mobile app for sports fans called All Things Sports. In your app, users can get the latest sports news, purchase memorabilia and event tickets, and play exciting mini-games. Your organization has devoted a large amount of time, effort, and money into creating a best-in-class app and acquiring new users. For this reason, it’s essential that your users keep coming back to your application so that your business can grow.&lt;/p&gt;

&lt;p&gt;For all applications, user interactions fall into three categories: activation, retention, and conversion. All Things Sports requires users to confirm their email address and select their favorite sports teams; the percentage of users who complete this process is the activation rate. Next, you need to offer content that is compelling enough to keep your users coming back. All Things Sports offers fun mini-games and special offers that encourage users to return to the app often. The likelihood that your customers will return to your application repeatedly is referred to as your retention rate. Finally, your organization needs to make money in order to grow. The main revenue generating activity in All Things Sports is the sale of event tickets and merchandise. The percentage of users who purchase these products through your app is your conversion rate. As the application developer, you have to continuously improve all three of these metrics in order to grow your business.&lt;/p&gt;

&lt;p&gt;The first step toward improving these metrics is to gather customer analytics data. Customer analytics data is the data you collect and analyze to better understand the ways in which customers use your application. A thorough analysis of this data can help you better serve your users, thereby increasing their engagement with your application. Making optimizations to your application based on this data can lead to positive reviews, better app store rankings, and increased word of mouth. These factors can increase your activation rate, which can in turn increase your retention and conversion rates. You can start gathering this information by integrating the AWS Mobile SDK into your application. For more information about customer analytics, see our companion article, What are Customer Analytics?&lt;/p&gt;

&lt;p&gt;The next step toward improving customer engagement is to create targeted segments of customers based on their characteristics. By targeting specific customers based on their demographics, preferences, behaviors, and interests, you can ensure that you’re using the right channels to send the right messages to the right customers. &lt;strong&gt;Amazon Pinpoint&lt;/strong&gt; can import app usage data obtained from the AWS Mobile SDK and use it to create customer segments. To learn more about the ways in which you can create customer segments, see our companion article, What is Customer Segmentation?&lt;/p&gt;

&lt;p&gt;The final step toward improving customer engagement is to deploy personalized, multi-channel messaging to your customers. You can use these messages to proactively update engaged customers on exciting new features and improvements in your application, or to incentivize less-engaged customers to sign back in to your application. You can also use this messaging to convey vital transactional content—such as password reset emails or purchase confirmations—to all customers. You can also use &lt;strong&gt;Amazon Pinpoint&lt;/strong&gt; to meet this need. For more information about multi-channel messaging, see the companion article titled What is Multi-Channel Messaging?&lt;/p&gt;

&lt;h2 id=&quot;what-is-amazon-pinpoint&quot;&gt;What Is Amazon Pinpoint?&lt;/h2&gt;

&lt;p&gt;Amazon Pinpoint is an AWS service that you can use to engage with your customers across multiple messaging channels. You can use &lt;strong&gt;Amazon Pinpoint to send push notifications, emails, SMS text messages, and voice messages&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;amazon-pinpoint-features&quot;&gt;Amazon Pinpoint Features&lt;/h2&gt;
&lt;p&gt;This section describes the major features of Amazon Pinpoint and the tasks that you can perform by using them.&lt;/p&gt;

&lt;h3 id=&quot;define-audience-segments&quot;&gt;Define Audience Segments&lt;/h3&gt;
&lt;p&gt;Reach the right audience for your messages by defining audience segments. A segment designates which users receive the messages that are sent from a campaign or journey. You can define dynamic segments based on data that’s reported by your application, such as operating system or mobile device type. You can also import static segments that you define outside of Amazon Pinpoint.&lt;/p&gt;

&lt;h3 id=&quot;engage-your-audience-with-messaging-campaigns&quot;&gt;Engage Your Audience with Messaging Campaigns&lt;/h3&gt;
&lt;p&gt;Engage your audience by creating a messaging campaign. A campaign sends tailored messages on a schedule that you define. You can create campaigns that send push notifications, email, SMS text messages, and voice messages.&lt;/p&gt;

&lt;p&gt;To experiment with alternative campaign strategies, set up your campaign as an A/B test, and analyze the results with Amazon Pinpoint analytics.&lt;/p&gt;

&lt;h3 id=&quot;create-user-journeys&quot;&gt;Create User Journeys&lt;/h3&gt;
&lt;p&gt;Create custom, multi-step experiences for your customers by designing and building journeys. With journeys, you can send messages to your customers based on their attributes, behaviors, and activities. When you build a journey, you design an automated workflow of activities that perform a variety of different actions—for example, sending an email message to participants, waiting for a certain period of time, or splitting participants based on actions that they take, such as clicking a link in a message.&lt;/p&gt;

&lt;h3 id=&quot;provide-consistent-messaging-with-templates&quot;&gt;Provide Consistent Messaging with Templates&lt;/h3&gt;
&lt;p&gt;Design consistent messages and reuse content more effectively by creating and using message templates. A message template contains content and settings that you want to reuse in messages that you send for any of your Amazon Pinpoint projects. You can use message templates in email messages, push notifications, SMS messages, and voice messages.&lt;/p&gt;

&lt;h3 id=&quot;deliver-personalized-content&quot;&gt;Deliver Personalized Content&lt;/h3&gt;
&lt;p&gt;Send content that’s customized for each recipient of a message. Using message variables and attributes, you can deliver dynamic, personalized content in messages that you send from campaigns and journeys.&lt;/p&gt;

&lt;p&gt;To streamline development, you can also use message variables and attributes to add personalized content to message templates. With message templates, this content can come from attributes that you create directly in Amazon Pinpoint or a machine learning model that you create in Amazon Personalize. By connecting message templates to models in Amazon Personalize, you can use machine learning to send relevant promotions or recommendations to each recipient of a message.&lt;/p&gt;

&lt;h3 id=&quot;analyze-user-behavior&quot;&gt;Analyze User Behavior&lt;/h3&gt;
&lt;p&gt;Gain insight into your audience and the effectiveness of your campaigns and messaging activities by using the analytics that Amazon Pinpoint provides. You can view trends in your users’ level of engagement, purchase activity, demographics, and more. You can also monitor your message traffic by viewing metrics such as the total number of messages that you sent for a campaign or project. Through the Amazon Pinpoint API, your application can also report custom data, which Amazon Pinpoint makes available for analysis.&lt;/p&gt;

&lt;p&gt;To analyze or store analytics data outside Amazon Pinpoint, configure Amazon Pinpoint to stream the data to Amazon Kinesis.&lt;/p&gt;

&lt;h3 id=&quot;send-test-messages&quot;&gt;Send Test Messages&lt;/h3&gt;
&lt;p&gt;Test the design and deliverability of your messages by sending test messages before you send messages to your customers.&lt;/p&gt;

&lt;h2 id=&quot;get-started&quot;&gt;Get Started&lt;/h2&gt;
&lt;p&gt;Get started with Amazon Pinpoint by &lt;strong&gt;creating a new project&lt;/strong&gt; or &lt;strong&gt;completing a tutorial&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;getting-started-with-amazon-pinpoint&quot;&gt;Getting Started with Amazon Pinpoint&lt;/h2&gt;

&lt;p&gt;To start sending targeted messages in Amazon Pinpoint, you have to complete a few steps. &lt;em&gt;For example, you have to add customer contact information into Amazon Pinpoint, and then create segments that target certain customers. Next, you have to create your messages and schedule your campaigns. Finally, after you send your campaigns, you can use the analytics dashboards that are built into Amazon Pinpoint to see how well the campaigns performed.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;intended-audience&quot;&gt;Intended Audience&lt;/h3&gt;

&lt;p&gt;This tutorial is designed for &lt;strong&gt;marketing and business users&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;features-used&quot;&gt;Features Used&lt;/h3&gt;

&lt;p&gt;This tutorial shows you how to complete all of the following steps by using the Amazon Pinpoint console:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Importing customer data from a file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Creating a segment that targets specific users based on their attributes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Creating an email campaign and scheduling it to be sent at a specific time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Viewing email delivery and response data by using the analytics dashboards that are built into Amazon Pinpoint.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;step-1-create-and-configure-a-project&quot;&gt;Step 1: Create and Configure a Project&lt;/h3&gt;

&lt;p&gt;To create a project and verify an email address&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Open the Amazon Pinpoint console at https://console.aws.amazon.com/pinpoint/.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the &lt;strong&gt;All projects page&lt;/strong&gt;, choose &lt;strong&gt;Create a project&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the &lt;strong&gt;Create a project&lt;/strong&gt; window, for &lt;strong&gt;Project name&lt;/strong&gt;, enter a name for your project, and then &lt;strong&gt;choose Create&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;
&lt;em&gt;The project name can contain up to 64 characters.&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;On the &lt;strong&gt;Configure features&lt;/strong&gt; page, next to &lt;strong&gt;Email&lt;/strong&gt;, choose &lt;strong&gt;Configure&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For Email address, type an email address that you want to use to send email. For example, you can use your personal email address, or your work email address. Choose &lt;strong&gt;Verify&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Wait for 1–2 minutes, and then check the inbox for the email address that you specified in step 4. You should see an email from Amazon Web Services (no-reply-aws@amazon.com) with the subject line “Amazon Web Services – Email Address Verification Request in region &lt;strong&gt;RegionName&lt;/strong&gt;”, where &lt;strong&gt;RegionName&lt;/strong&gt; is the name of the AWS Region that you’re configuring Amazon Pinpoint in.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open the email, and then click the link in the body of the email.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Return to the Amazon Pinpoint console in your browser. On the Set up email page, choose Save.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Your account is now ready to send email from the email address that you verified. You can add additional email addresses later.&lt;/p&gt;

&lt;p&gt;You can also verify entire domains. When you verify a domain, you can send email from any address on that domain. For more information, see Verifying a Domain.&lt;/p&gt;

&lt;h3 id=&quot;step-2-import-customer-data-and-create-a-segment&quot;&gt;Step 2: Import Customer Data and Create a Segment&lt;/h3&gt;

&lt;p&gt;A segment is a group of your customers that share certain attributes. &lt;em&gt;For example, a segment might contain all of your customers who use version 2.0 of your app on an Android device, or all customers who live in the city of Los Angeles.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When you create a campaign, you have to choose a segment to send the campaign to. You can send multiple campaigns to a single segment, and you can send a single campaign to multiple segments.&lt;/p&gt;

&lt;p&gt;There are two types of segments that you can create in Amazon Pinpoint:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Dynamic segments&lt;/strong&gt; – Segments that are based on attributes that you define. Dynamic segments can change over time. For example, if you add new endpoints to Amazon Pinpoint, or if you modify or delete existing endpoints, the number of endpoints in that segment may increase or decrease.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Imported segments&lt;/strong&gt; – Segments that are created outside of Amazon Pinpoint and saved in CSV or JSON format. Imported segments are static—that is, they never change. When you create a new segment, you can use an imported segment as a base segment, and then refine it by adding filters.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this tutorial, you create an imported segment by uploading a file from your computer. Next, you create a dynamic segment that is based upon the imported segment.&lt;/p&gt;

&lt;h4 id=&quot;step-21-download-and-modify-the-sample-file&quot;&gt;Step 2.1: Download and Modify the Sample File&lt;/h4&gt;

&lt;p&gt;In this section, you download a file that contains fictitious customer data. You also modify the data to include your own contact information. Later in this tutorial, you use this data to create a segment.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In a web browser, download the sample file from https://raw.githubusercontent.com/awsdocs/amazon-pinpoint-user-guide/master/examples/Pinpoint_Sample_Import.csv. Save the file to your computer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Tip&lt;/strong&gt;
    You can quickly save this file to your computer by right-clicking the link, and then choosing Save Link As.&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Open the file in a text editor or spreadsheet application. On the last row of the file, replace the items in angle brackets (&amp;lt;…&amp;gt;) with your own contact information.&lt;/p&gt;

    &lt;p&gt;In the Address column, provide the same email address that you verified in Step 1.&lt;/p&gt;

    &lt;p&gt;In the User.UserAttributes.Company column, specify a company name that’s different from the fictitious company names in the file. You’ll use this unique company name when you define the criteria for your targeted segment in the next section.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;
 &lt;em&gt;You don’t have to provide your information for each column in the file. However, at a minimum, you have to provide information for the ChannelType, Address, and User.UserAttributes.Company columns.&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;The email that you create later in this tutorial uses several of these fields to create a personalized message.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When you finish, save the file.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;
 &lt;em&gt;If you used a spreadsheet application to modify the file, make sure that you save the modified file in Comma-Separated Values (.csv) format. Amazon Pinpoint can only import .csv and .json files.&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;step-22-import-a-file-that-contains-customer-data&quot;&gt;Step 2.2: Import a File that Contains Customer Data&lt;/h4&gt;

&lt;p&gt;Now that you have a file that contains customer data, you can import it into Amazon Pinpoint. To import customer data, you have to create a new segment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To create an imported segment&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;In the Amazon Pinpoint console, in the navigation pane, choose &lt;strong&gt;Segments&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Choose &lt;strong&gt;Create a segment&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the &lt;strong&gt;Create a segment&lt;/strong&gt; page, choose &lt;strong&gt;Import a segment&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the &lt;strong&gt;Specifications&lt;/strong&gt; section, under &lt;strong&gt;Import method&lt;/strong&gt;, choose &lt;strong&gt;Upload files from your computer&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Select &lt;strong&gt;Choose files&lt;/strong&gt;. Navigate to the Pinpoint_Sample_Import.csv file that you downloaded and modified in the previous section.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Choose &lt;strong&gt;Create segment&lt;/strong&gt;. Amazon Pinpoint copies the file from your computer and creates a segment. Wait for about 1 minute while the import completes.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;step-23-create-a-targeted-segment&quot;&gt;Step 2.3: Create a Targeted Segment&lt;/h4&gt;
&lt;p&gt;Your Amazon Pinpoint project now contains some customer data, as well as a segment that contains your entire customer list. It also contains your contact information.&lt;/p&gt;

&lt;p&gt;In this section, you create a targeted segment. You add segment criteria that filter the segment so that you’re the only member of the segment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To create the segment&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;On the &lt;strong&gt;Segments&lt;/strong&gt; page, choose &lt;strong&gt;Create a segment&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the &lt;strong&gt;Create a segment&lt;/strong&gt; page, choose &lt;strong&gt;Build a segment&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For &lt;strong&gt;Name&lt;/strong&gt;, enter a name for the segment.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;4.Under &lt;strong&gt;Segment group 1&lt;/strong&gt;, do the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Next to &lt;strong&gt;Include endpoints&lt;/strong&gt; that are in any of the following segments, choose the &lt;strong&gt;Pinpoint_Sample_Import&lt;/strong&gt; segment that you created in the previous step.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Under &lt;strong&gt;Add filters to refine your segment&lt;/strong&gt;, from the menu, choose &lt;strong&gt;Filter by channel&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Next to &lt;strong&gt;Endpoints that match&lt;/strong&gt;, choose &lt;strong&gt;all&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For &lt;strong&gt;Channel&lt;/strong&gt;, choose &lt;strong&gt;EMAIL&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Under &lt;strong&gt;Add filters to refine your segment&lt;/strong&gt;, from the menu, choose &lt;strong&gt;Filter by user&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the &lt;strong&gt;User&lt;/strong&gt; filter, use the menu to choose &lt;strong&gt;Company&lt;/strong&gt;. Next, use the &lt;strong&gt;Choose values&lt;/strong&gt; menu to choose the unique company name that you specified for your own contact record in step 2.1.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Choose &lt;strong&gt;Add an attribute or metric&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the new filter, use the menu to choose &lt;strong&gt;First Name&lt;/strong&gt;. Next, use the &lt;strong&gt;Choose values&lt;/strong&gt; menu to choose your &lt;strong&gt;first name&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Choose &lt;strong&gt;Create segment&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;step-3-create-and-schedule-a-campaign&quot;&gt;Step 3: Create and Schedule a Campaign&lt;/h3&gt;

&lt;p&gt;A campaign is a messaging initiative that engages a specific audience segment. A campaign sends tailored messages on the days and times that you specify. You can use the console to create a campaign that sends messages through the email, push notification, or SMS channels.&lt;/p&gt;

&lt;p&gt;In this section, you create an email campaign. You create a new campaign, choose your target segment, and create a responsive email message for the campaign. When you finish setting up the message, you choose the day and time when you want the message to be sent.&lt;/p&gt;

&lt;h4 id=&quot;step-31-create-the-campaign-and-choose-a-segment&quot;&gt;Step 3.1: Create the Campaign and Choose a Segment&lt;/h4&gt;
&lt;p&gt;When you create a segment, you first give the segment a name. Next, you choose the segment that the campaign applies to. In this tutorial, you choose the segment that you created in Step 2.3.&lt;/p&gt;

&lt;p&gt;To create the campaign and choose segment&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;In a web browser, &lt;strong&gt;download the sample file&lt;/strong&gt; from https://raw.githubusercontent.com/awsdocs/amazon-pinpoint-user-guide/master/examples/Pinpoint_Sample_Email.html. Save the file to your computer.&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;&lt;strong&gt;Tip&lt;/strong&gt;
 You can quickly save this file to your computer by right-clicking the link, and then choosing Save Link As.&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Open the file&lt;/strong&gt; that you just downloaded in a text editor, such as Notepad (Windows) or TextEdit (macOS). Press Ctrl+A (Windows) or Cmd+A (macOS) to select all of the text. Then, press Ctrl+C (Windows) or Cmd+C (macOS) to copy it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the &lt;strong&gt;Amazon Pinpoint console&lt;/strong&gt;, in the navigation pane, choose &lt;strong&gt;Campaigns&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Choose &lt;strong&gt;Create a campaign&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Under &lt;strong&gt;Campaign details&lt;/strong&gt;, for Campaign name, enter a &lt;strong&gt;name&lt;/strong&gt; for the campaign.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For &lt;strong&gt;Campaign type&lt;/strong&gt;, choose &lt;strong&gt;Standard campaign&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For Choose a &lt;strong&gt;channel for this campaign&lt;/strong&gt;, choose &lt;strong&gt;Email&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Choose &lt;strong&gt;Next&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the Choose a &lt;strong&gt;segment page&lt;/strong&gt;, choose Use an existing segment. Then, for &lt;strong&gt;Segment&lt;/strong&gt;, choose the &lt;strong&gt;targeted segment that you created&lt;/strong&gt; in Step 2.3. Choose &lt;strong&gt;Next&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;step-32-create-the-campaign-message&quot;&gt;Step 3.2: Create the Campaign Message&lt;/h4&gt;
&lt;p&gt;After you specify a campaign name and choose a segment, you can create your message. This tutorial includes a link to an HTML file that you can use to create your message.&lt;/p&gt;

&lt;p&gt;This sample file uses responsive HTML to create a message that renders properly on both computers and mobile devices. It uses inline CSS to provide compatibility with a wide variety of email clients. It also includes tags that are used to personalize the message with the recipient’s name and other personal information.&lt;/p&gt;

&lt;p&gt;To create the message&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;On the Create your message page, under &lt;strong&gt;Message content&lt;/strong&gt;, choose &lt;strong&gt;Create a new message&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For &lt;strong&gt;Subject&lt;/strong&gt;, enter a &lt;strong&gt;subject line for the email&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Under &lt;strong&gt;Message&lt;/strong&gt;, erase the sample HTML code that’s shown in the editor. Paste the HTML code that you copied in the first step in this section.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;(Optional) Modify the content of the message to include a message that you want to send.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can personalize the message for each recipient by including the name of an attribute inside two sets of curly braces. For example, the sample message includes the following text: . This code represents the User.UserAttributes.FirstName attribute, which contains the recipient’s first name. When you send the campaign, Amazon Pinpoint removes this attribute name and replaces it with the appropriate value for each recipient.&lt;/p&gt;

&lt;p&gt;You can experiment with other attribute names. Refer to the column headers in the spreadsheet that you imported in Step 2.2 for complete list of attribute names that you can specify in your message.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Tip&lt;/strong&gt;
You can use Design view to edit the content of the message without having to edit the HTML code. To use this view, choose Design from the view selector above the message editor, as shown in the following image.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;5.Choose &lt;strong&gt;Next&lt;/strong&gt;.&lt;/p&gt;

&lt;h5 id=&quot;step-33-schedule-the-campaign&quot;&gt;Step 3.3: Schedule the Campaign&lt;/h5&gt;
&lt;p&gt;The last step in creating the campaign is to choose when to send it. In Amazon Pinpoint, you can set up your campaigns so that they’re sent immediately after you launch them. You can also schedule them to be sent in the future—anywhere from 15 minutes from the current time, to six months into the future. Finally, you can schedule your messages to be sent on a recurring basis (that is, hourly, daily, weekly, or monthly). Recurring campaigns are a great way to send account or status updates where the appearance of the campaign message stays the same over time, but is populated with information that changes dynamically.&lt;/p&gt;

&lt;p&gt;In this section, you schedule your campaign to be sent immediately after you launch it.&lt;/p&gt;

&lt;p&gt;To schedule the campaign&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;On the &lt;strong&gt;Choose when to send the campaign page&lt;/strong&gt;, choose At a &lt;strong&gt;specific time&lt;/strong&gt;. Then, under &lt;strong&gt;Choose&lt;/strong&gt; when the campaign should be sent, choose &lt;strong&gt;Immediately&lt;/strong&gt;. Finally, choose &lt;strong&gt;Next&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the &lt;strong&gt;Review and launch page&lt;/strong&gt;, review all of the details of the &lt;strong&gt;campaign&lt;/strong&gt;. When you’re ready to send it, choose &lt;strong&gt;Launch campaign&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt;—you’ve created your first campaign with Amazon Pinpoint! Because you’re the only member of the segment that you created in Step 2.3, you should receive the message in your inbox within a few seconds.&lt;/p&gt;

&lt;h3 id=&quot;step-4-view-campaign-analytics&quot;&gt;Step 4: View Campaign Analytics&lt;/h3&gt;

&lt;p&gt;At this point, you’ve created a segment that you’re a member of. You’ve also created an email campaign and sent it to yourself. In this section, you look at the delivery and response metrics for the campaign.&lt;/p&gt;

&lt;h4 id=&quot;step-41-interact-with-your-campaign&quot;&gt;Step 4.1: Interact with Your Campaign&lt;/h4&gt;
&lt;p&gt;Before you can view the delivery and response metrics for your campaign, you have to interact with the message that you sent yourself in Step 3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To interact with the email&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;In your &lt;strong&gt;email client&lt;/strong&gt;, open the message that you sent yourself in Step 3.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If your email client automatically hides images by default, choose the Download pictures (or equivalent) button to load the images in the message.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Choose one or more of the links that are contained in the message.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Wait for a few minutes, and then proceed to the next section.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;step-42-view-metrics-for-the-campaign&quot;&gt;Step 4.2: View Metrics for the Campaign&lt;/h4&gt;
&lt;p&gt;After you interact with the email that you sent from the campaign, you can view the metrics for the campaign.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To view the campaign metrics&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Open the Amazon Pinpoint console at https://console.aws.amazon.com/pinpoint/.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the All &lt;strong&gt;projects page&lt;/strong&gt;, choose the &lt;strong&gt;project that you used to send the campaign&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the &lt;strong&gt;navigation pane&lt;/strong&gt;, under Analytics, choose &lt;strong&gt;Campaigns&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the &lt;strong&gt;Campaigns section&lt;/strong&gt;, choose the campaign that you created in Step 3.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;(Optional) Use the date control to choose a date range for the reports on this page.&lt;/p&gt;

    &lt;p&gt;On the metrics page for your campaign, you see the following information:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;Delivery count metrics&lt;/strong&gt; – This section provides information about the delivery of the messages that were sent from your campaign. It includes the following information:&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;Messages sent&lt;/strong&gt; – The number of messages that were sent.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;Messages delivered&lt;/strong&gt; – The number of messages that were delivered to their recipients.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;Links clicked&lt;/strong&gt; – The number of times that links in the messages were clicked by recipients. If a single recipient clicks a link more than once, each click is represented in this section.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;Endpoint deliveries&lt;/strong&gt; – The average number of endpoints that the campaign was sent to, for each day in the chosen date range. The chart shows the number of endpoints that the campaign was delivered to, for each day in the chosen date range.&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;Delivery rate metrics&lt;/strong&gt; – This section shows the overall delivery and response rates for the messages that were sent from your campaign. It includes the following information:&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;Delivery rate&lt;/strong&gt; – The percentage of messages that were delivered to recipients, of the total number of endpoints that you targeted in the segment that you sent this campaign to.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;Email open rate&lt;/strong&gt; – The percentage of messages that were opened by recipients, of the total number of messages that were delivered.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;Bounce rate&lt;/strong&gt; – The percentage of messages that weren’t delivered to recipients because they bounced. This value includes only hard bounces—that is, messages that bounced because of a permanent issue. For example, hard bounces could occur when the recipient’s email address doesn’t exist, or when the recipient permanently rejects email from your domain.&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;Campaign runs&lt;/strong&gt; – This section shows information that’s specific to each time the campaign ran. Because you can use Amazon Pinpoint to create recurring campaigns, this section can show information for several campaign runs. However, if you completed the procedures in this tutorial, this section contains information for only one campaign run because you ran the campaign only once. This section contains the following metrics, in addition to the metrics that are defined in the preceding sections:&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;Endpoints targeted&lt;/strong&gt; – The number of endpoints that were targeted by the segment that was associated with the campaign run. This number includes endpoints that were part of the segment, but didn’t receive the message.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;&lt;strong&gt;Total email opened&lt;/strong&gt; – The total number of times that messages sent from the campaign run were opened. For example, if a message was opened two times by one recipient, both of those opens are counted.&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;next-step&quot;&gt;Next Step&lt;/h2&gt;

&lt;p&gt;We hope that you use this tutorial as a starting point as you discover the additional capabilities of Amazon Pinpoint. For example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;You can improve the delivery of your email campaigns by making sure that your campaigns align with industry best practices. For more information, see Tips and Best Practices.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can verify an entire domain, which allows you to send email from any address on that domain. For more information about verifying domains, see Verifying a Domain.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can obtain dedicated IP addresses for sending your email. Dedicated IP addresses are a great option for sending email in certain use cases. For more information, see Using Dedicated IP Addresses with Amazon Pinpoint.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can enable the Amazon Pinpoint Deliverability dashboard. The Deliverability dashboard helps you identify issues that could impact the delivery of your emails. For more information, see The Amazon Pinpoint Deliverability Dashboard.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can send messages through other channels, such as SMS or push. Before you can use these channels, you have to enable and configure them on the Settings page. For more information about using the Settings page to enable and configure channels, see Amazon Pinpoint Settings.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can send data about your campaigns outside of Amazon Pinpoint. For example, you can send delivery and response data for your campaigns to Amazon S3 for long-term storage. You can also send data to Amazon Redshift to perform custom analyses. For more information about sending your data outside of Amazon Pinpoint, see Event Stream Settings.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can integrate Amazon Pinpoint with your apps, or interact with Amazon Pinpoint programmatically, by using an AWS SDK. For more information, see the Amazon Pinpoint Developer Guide.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Girish Godage</name></author><category term="learning" /><summary type="html">What is Customer Engagement?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/img/aws_cloud.png" /></entry><entry><title type="html">The service desk with bots using Amazon Lex and Amazon Connect (Part 2)</title><link href="http://localhost:4000/blog/create-service-desk-with-bots-using-amazon-lex-and-amazon-connect-part-2" rel="alternate" type="text/html" title="The service desk with bots using Amazon Lex and Amazon Connect (Part 2)" /><published>2020-02-02T11:41:00+00:00</published><updated>2020-02-02T11:41:00+00:00</updated><id>http://localhost:4000/blog/create-service-desk-with-bots-using-amazon-lex-and-amazon-connect-part-2</id><content type="html" xml:base="http://localhost:4000/blog/create-service-desk-with-bots-using-amazon-lex-and-amazon-connect-part-2">&lt;h2 id=&quot;the-service-desk-with-bots-using-amazon-lex-and-amazon-connect-part-2&quot;&gt;The service desk with bots using Amazon Lex and Amazon Connect (Part 2)&lt;/h2&gt;

&lt;p&gt;Hopefully you’ve had the chance to follow along in parts 1  where we set up our Lex chatbot to take and validate input.&lt;/p&gt;

&lt;p&gt;In this blog, we’ll interface with our Active Directory environment to perform the password reset function. To do this, we need to create a Lambda function that will be used as the logic to fulfil the user’s intent. The Lambda function will be packaged with the python LDAP library to modify the AD password attribute for the user. Below are the components that need to be configured.&lt;/p&gt;

&lt;h2 id=&quot;active-directory-service-account&quot;&gt;Active Directory Service Account&lt;/h2&gt;

&lt;p&gt;To begin, we need to start by creating a service account in Active Directory that has permissions to modify the password attribute for all users. Our Lambda function will then use this service account to perform password resets. To do this, create a service account in your Active Directory domain and perform the following to delegate the required permissions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open Active Directory Users and Computers.&lt;/li&gt;
  &lt;li&gt;Right click the OU or container that contains organisational users and click &lt;strong&gt;Delegate Control&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt; on the Welcome Wizard.&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Add&lt;/strong&gt; and enter the service account that will be granted the reset password permission.&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;OK&lt;/strong&gt; once you’ve made your selection, followed by &lt;strong&gt;Next&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Ensure that &lt;strong&gt;Delegate the following common tasks&lt;/strong&gt; is enabled, and select &lt;strong&gt;Reset user passwords and force password change at next logon&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt;, and &lt;strong&gt;Finish&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/delegatecontrol.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;kms-key-for-the-ad-service-account&quot;&gt;KMS Key for the AD Service Account&lt;/h2&gt;

&lt;p&gt;Our Lambda function will need to use the credentials for the service account to perform password resets. We want to avoid storing credentials within our Lambda function, so we’ll store the password as an encrypted Lambda variable and allow our Lambda function to decrypt it using Amazon’s Key Management Service (KMS). To create the KMS encryption key, perform the following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In the Amazon Console, navigate to &lt;strong&gt;IAM&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Encryption Keys&lt;/strong&gt;, then Create key&lt;/li&gt;
  &lt;li&gt;Provide an Alias (e.g. resetpw) then select &lt;strong&gt;Next&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Next Step&lt;/strong&gt; for all subsequent steps then &lt;strong&gt;Finish&lt;/strong&gt; on step 5 to create the key.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;iam-role-for-the-lambda-function&quot;&gt;IAM Role for the Lambda Function&lt;/h2&gt;

&lt;p&gt;Because our Lambda function will need access to several AWS services such as SNS to notify the user of their new password and KMS to decrypt the service account password, we need to provide our function with an IAM role that has the relevant permissions. To do this, perform the following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In the Amazon Console, navigate to &lt;strong&gt;IAM&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Policies&lt;/strong&gt; then &lt;strong&gt;Create policy&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Switch to the &lt;strong&gt;JSON&lt;/strong&gt; editor, then copy and paste the following policy, replacing the KMS resource with the KMS ARN created above
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; {
 &quot;Version&quot;: &quot;2012-10-17&quot;,
 &quot;Statement&quot;: [
     {
     &quot;Effect&quot;: &quot;Allow&quot;,
     &quot;Action&quot;: &quot;sns:Publish&quot;,
     &quot;Resource&quot;: &quot;*&quot;
     },
     {
     &quot;Effect&quot;: &quot;Allow&quot;,
     &quot;Action&quot;: &quot;kms:Decrypt&quot;,
     &quot;Resource&quot;: &quot;&amp;lt;KMS ARN&amp;gt;&quot;
     }
 ]
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Provide a name for the policy (e.g. resetpw), then select &lt;strong&gt;Create policy&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;After the policy has been created, select &lt;strong&gt;Roles&lt;/strong&gt;, then &lt;strong&gt;Create Role&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;For the AWS Service, select &lt;strong&gt;Lambda&lt;/strong&gt;, then click &lt;strong&gt;Next:Permissions&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Search for and select the policy you created in step 5, as well as the &lt;strong&gt;AWSLambdaVPCAccessExecutionRole&lt;/strong&gt; and &lt;strong&gt;AWSLambdaBasicExecutionRole&lt;/strong&gt; policies then click &lt;strong&gt;Next: Review&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Provide a name for the role (e.g. resetpw) then click &lt;strong&gt;Create role&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;network-configuration-for-the-lambda-function&quot;&gt;Network Configuration for the Lambda Function&lt;/h2&gt;

&lt;p&gt;To access our Active Directory environment, the Lambda function will need to run within a VPC or a peered VPC that hosts an Active Directory domain controller. Additionally, we need the function to access the internet to be able to access the KMS and SNS services. Lambda functions provisioned in a VPC are assigned an Elastic network Interface with a private IP address from the subnet it’s deployed in. Because the ENI doesn’t have a public IP address, it cannot simply leverage an internet gateway attached to the VPC for internet connectivity and as a result, must have traffic routed through a NAT Gateway similar to the diagram below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/natgw.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;password-reset-lambda-function&quot;&gt;Password Reset Lambda Function&lt;/h2&gt;

&lt;p&gt;Now that we’ve performed all the preliminary steps, we can start building the Lambda function. Because the Lambda execution environment uses Amazon Linux, I prefer to build my Lambda deployment package on a local Amazon Linux docker container to ensure library compatibility. Alternatively, you could deploy a small Amazon Linux EC2 instance for this purpose, which can assist with troubleshooting if it’s deployed in the same VPC as your AD environment.
Okay, so let’s get started on building the lambda function. Log in to your Amazon Linux instance/container, and perform the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Create a project directory and install python-ldap dependencies, gcc, python-devel and openldap-devel&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;Mkdir ~/resetpw&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;sudo yum install python-devel openldap-devel gcc&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Next, we’re going to download the python-ldap library to the directory we created&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;Pip install python-ldap -t ~/resetpw&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the resetpw directory, create a file called reset_function.py and copy and paste the following script&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
import ldap
import os
import boto3
import random
import string

from base64 import b64decode

#Variables
url=os.environ['url']
domain_base_dn=os.environ['domain_base_dn']
user=os.environ['user']
ENCRYPTED=os.environ['pw']
pw=boto3.client('kms').decrypt(CiphertextBlob=b64decode(ENCRYPTED))['Plaintext']

def lambda_handler(event, context):
    #Set up LDAP connection
    ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER)
    con = ldap.initialize(url)
    con.set_option(ldap.OPT_REFERRALS, 0)
    con.bind_s(user,pw)
    slotUserID = event[&quot;currentIntent&quot;][&quot;slots&quot;][&quot;UserID&quot;]
    results = con.search_ext_s(domain_base_dn,ldap.SCOPE_SUBTREE,&quot;sAMAccountName=&quot; + slotUserID,attrlist=['monthStarted', 'birthDate', 'distinguishedName','telephoneNumber'])
    birthdate = results[0][1][&quot;birthDate&quot;][0]
    monthStarted = results[0][1][&quot;monthStarted&quot;][0]
    phoneNumber = results[0][1][&quot;telephoneNumber&quot;][0]
    slotBirthDate = event[&quot;currentIntent&quot;][&quot;slots&quot;][&quot;DOB&quot;]
    slotMonth = event[&quot;currentIntent&quot;][&quot;slots&quot;][&quot;MonthStarted&quot;]

    # Reset Password
    if((birthdate == slotBirthDate) and (monthStarted == slotMonth)):
        new_password = ''.join(random.choice(string.letters + string.digits + string.punctuation) for _ in range(10))
        unicode_pass = unicode('\&quot;' + new_password + '\&quot;', 'iso-8859-1')
        password_value = unicode_pass.encode('utf-16-le')
        add_pass = [(ldap.MOD_REPLACE, 'unicodePwd', [password_value])]
        con.modify_s(results[0][1][&quot;distinguishedName&quot;][0],add_pass)        
        sns = boto3.client('sns')
        sns.publish(PhoneNumber=phoneNumber, Message='Your new password is ' + new_password )
        endData = {
            &quot;dialogAction&quot;: {
                &quot;type&quot;: &quot;Close&quot;,
                &quot;fulfillmentState&quot;: &quot;Fulfilled&quot;,
                &quot;message&quot;: {
                    &quot;contentType&quot;: &quot;PlainText&quot;,
                    &quot;content&quot;: &quot;Your password has been reset and sent to your mobile.&quot;
                }
            }
        }
    else:
        endData = {
            &quot;dialogAction&quot;: {
                &quot;type&quot;: &quot;Close&quot;,
                &quot;fulfillmentState&quot;: &quot;Failed&quot;,
                &quot;message&quot;: {
                    &quot;contentType&quot;: &quot;PlainText&quot;,
                    &quot;content&quot;: &quot;The details you provided are incorrect. Goodbye&quot;
                }
            }
        }
    con.unbind()
    return endData
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Now, we need to create the Lambda deployment package. As the package size is correlated with the speed of Lambda function cold starts, we need to filter out anything that’s not necessary to reduce the package size. The following zip’s the script and LDAP library:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
    Cd ~/resetpw
zip -r ~/resetpw.zip . -x &quot;setuptools*/*&quot; &quot;pkg_resources/*&quot; &quot;easy_install*&quot;*

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;We need to deploy this package as a Lambda function. I’ve got AWSCLI installed in my Amazon Linux container, so I’m using the following CLI to create the Lambda function. Alternatively, you can download the zip file and manually create the Lambda function in the AWS console using the same parameters specified in the CLI below.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;

aws lambda create-function --function-name reset_function --region us-east-1 --zip-file fileb://root/resetpw.zip --role resetpw --handler reset_function.lambda_handler --runtime python2.7 --timeout 30 --vpc-config SubnetIds=subnet-a12b3cde,SecurityGroupIds=sg-0ab12c30 --memory-size 128*

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;For the script to run in your environment, a number of Lambda variables need to be set which will be used at runtime. In the AWS Console, navigate to Lambda then click on your newly created Lambda function. In the environment variables section, create the following variables:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Url&lt;/strong&gt; – This is the LDAPS URL for your domain controller. Note that it must be LDAP over SSL.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Domain_base_dn&lt;/strong&gt; – The base distinguished name used to search for the user&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;User&lt;/strong&gt; – The service account that has permissions to change the user password&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Pw&lt;/strong&gt; – The password of the service account&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finally, we need to encrypt the Pw variable in the Lambda console. Navigate to the Encryption configuration and select Enable helpers for encryption in transit. Select your KMS key for both encryption in transit and at reset, then select the Encrypt button next to the pw variable. This will encrypt and mask the value.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/envvar.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hit Save in the top right-hand corner to save the environment variables&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s it! The Lambda function is now configured. A summary of the Lambda function’s logic is as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Collect the Lambda environment variables and decrypt the service account password&lt;/li&gt;
  &lt;li&gt;Perform a secure AD bind but don’t verify the certificate (I’m using a Self-Signed Cert in my lab)&lt;/li&gt;
  &lt;li&gt;Collect the user’s birthday, start month, telephone number, and DN from AD&lt;/li&gt;
  &lt;li&gt;Check the user’s verification input&lt;/li&gt;
  &lt;li&gt;If the input is correct, reset the password and send it to the user’s telephone number, otherwise exit the function.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;update-and-test-lex-bot-fulfillment&quot;&gt;Update and test Lex bot fulfillment&lt;/h2&gt;

&lt;p&gt;The final step is to add the newly created Lambda function to the Lex bot so it’s invoked after input is validated. To do this, perform the following&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In the Amazon Console, navigate to Amazon Lex and select your bot&lt;/li&gt;
  &lt;li&gt;Select Fulfillment for your password reset intent, then select AWS Lambda function&lt;/li&gt;
  &lt;li&gt;Choose the recently created Lambda function from the drop down box, then select Save Intent&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That should be it! You’ll need to build your bot again before testing…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/fulfilled.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My phone buzzes with a new SMS…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/19/passmsg.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Success! A few final things worth noting:&lt;/p&gt;

&lt;p&gt;All Lambda execution logs will be written to CloudWatch logs, so this is the best place to begin troubleshooting if required
Modification to the AD password attribute is not possible without a secure bind and will result in an error.
The interrogated fields (month started and date of birth) are custom AD attributes in my lab.
Password complexity in my lab is relaxed. If you’re using the default password complexity in AD, the randomly generated password in the lambda function may not meet complexity requirements every time.&lt;/p&gt;

&lt;p&gt;While we’ve successfully tested this functionality in the AWS console, we want to provide our users with the ability to call and talk with the bot over the phone. Here, we’ll wire up Amazon Connect with our bot to provide this capability.&lt;/p&gt;

&lt;h2 id=&quot;what-is-amazon-connect&quot;&gt;What is Amazon Connect&lt;/h2&gt;
&lt;p&gt;Amazon Connect is a Cloud based contact service center that can be set up in minutes to take phone calls and route them to the correct service center agents. Additionally, Connect is able to integrate with Amazon Lex to create a self-service experience, providing a cost effective method for resolving customer queries without having to wait in queue for a human agent. In our case, Lex will be integrated with Amazon Connect to field password reset requests.&lt;/p&gt;

&lt;h3 id=&quot;provisioning-amazon-connect&quot;&gt;Provisioning Amazon Connect&lt;/h3&gt;

&lt;p&gt;The following steps provision the base Amazon Connect tenant:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Begin by heading to the AWS Console, then navigate to &lt;strong&gt;Amazon Connect&lt;/strong&gt; and select &lt;strong&gt;Add an instance&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Specify a sub-domain for the access URL which will be used to log into Amazon Connect. Select &lt;strong&gt;Next step&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;For now, skip creating an administrator by selecting &lt;strong&gt;Skip this&lt;/strong&gt;, then select Next step.&lt;/li&gt;
  &lt;li&gt;For Telephony Options ensure &lt;strong&gt;Incoming Calls&lt;/strong&gt; is selected and &lt;strong&gt;Outbound Calls&lt;/strong&gt; is unselected, then click &lt;strong&gt;Next step&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Accept the default data storage configuration and select &lt;strong&gt;Next step&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Finally, review the information provided and select &lt;strong&gt;Create instance.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s all that’s required to provision the Amazon Connect service. Pretty simple stuff. It takes a few minutes to provision, then you’ll be ready to begin configuring your Amazon Connect tenant.&lt;/p&gt;

&lt;h3 id=&quot;configuring-amazon-connect&quot;&gt;Configuring Amazon Connect&lt;/h3&gt;

&lt;p&gt;Next, we need to claim a phone number to be used with our service:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Once Amazon Connect has been provisioned, click &lt;strong&gt;Get started&lt;/strong&gt; to log into your Amazon Connect instance.&lt;/li&gt;
  &lt;li&gt;On the Welcome to Amazon Connect page, select &lt;strong&gt;Let’s Go.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To claim a phone number, select your preferred country code and type then select &lt;strong&gt;Next&lt;/strong&gt;. You may find that there are no available numbers for your country of choice (like the screenshot below). If that’s the case and it’s necessary that you have a local number, you can raise a support case with Amazon. For testing purposes, I’m happy to provision a US number and use Google Hangouts to dial the number for free.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/img/awscloud/19/claimphonenumber.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;When prompted to make a call, choose Skip for now.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should now be at the Amazon Connect dashboard where there are several options, but before we can continue, we first need to add the Lex bot to Amazon Connect to allow it to be used within a contact flow.&lt;/p&gt;

&lt;h3 id=&quot;adding-lex-to-amazon-connect&quot;&gt;Adding Lex to Amazon Connect&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Switch back to the AWS Console and navigate to &lt;strong&gt;Amazon Connect&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Select the Amazon Connect instance alias created in the previous step.&lt;/li&gt;
  &lt;li&gt;On the left-hand side, select &lt;strong&gt;Contact Flows&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Under the Amazon Lex section, click &lt;strong&gt;Add Lex Bot&lt;/strong&gt;, and select the user administration bot we created.&lt;/li&gt;
  &lt;li&gt;Select Save Lex Bots.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now that our bot has been added to Amazon Connect, we should be able to create an appropriate Contact Flow that leverages our bot.&lt;/p&gt;

&lt;h3 id=&quot;creating-the-contact-flow&quot;&gt;Creating the Contact Flow&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Switch back to the Amazon Connect dashboard then navigate to &lt;strong&gt;Contact Flows&lt;/strong&gt; under routing on the left sidebar.&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Create contact flow&lt;/strong&gt; and enter a name (e.g. User administration) for the contact flow.&lt;/li&gt;
  &lt;li&gt;Expand the &lt;strong&gt;Interact&lt;/strong&gt; menu item then click and drag &lt;strong&gt;Get customer input&lt;/strong&gt; to the grid.&lt;/li&gt;
  &lt;li&gt;Click the &lt;strong&gt;Get customer input&lt;/strong&gt; item, and set the following properties:
    &lt;ul&gt;
      &lt;li&gt;Enable &lt;strong&gt;Text to speech&lt;/strong&gt; then add a greeting text (e.g. Welcome to the cloud call center. What would you like assistance with?).&lt;/li&gt;
      &lt;li&gt;Ensure that &lt;strong&gt;Interpret&lt;/strong&gt; as is set to &lt;strong&gt;Text&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Choose the &lt;strong&gt;Amazon Lex&lt;/strong&gt; option, then add the Lex Bot name (e.g. UserAdministration) and set the alias to &lt;strong&gt;$LATEST&lt;/strong&gt; to ensure it uses the latest build of the bot.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Under Intents, select &lt;strong&gt;Add a parameter&lt;/strong&gt; then enter the password reset intent for the Lex Bot (e.g. ResetPW)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Select &lt;strong&gt;Save&lt;/strong&gt; to save the configuration.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/img/awscloud/19/customerinput.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;It’s worth noting that if you wanted to send the user’s mobile number through to your Lex bot for verification purposes, this can be done by sending a session attribute as shown below. The phone number will be passed to the Lambda function in the sessionAttributes object.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/img/awscloud/19/sessionattribute.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the left sidebar, expand Terminate/Transfer then drag and drop Disconnect/Hang up onto the grid.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Connect the Start entry point to the Get Customer Input box and connect all the branches of the Get Customer Input Box to the Disconnect/Hang up box as shown below.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/img/awscloud/19/contactflow.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;We could have added more complex flows to deal with unrecognised intents or handle additional requests that our Lex bot isn’t configured for (both of which would be forwarded to a human agent), however this is outside the scope of this blog post.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;In the top right-hand corner above the grid, select the down arrow, then &lt;strong&gt;Save &amp;amp; Publish&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;setting-the-contact-flow&quot;&gt;Setting the Contact Flow&lt;/h2&gt;
&lt;p&gt;Now that we have a contact flow created, we need to attach it to the phone number we provisioned earlier.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;On the left sidebar in the Amazon Connect console, select &lt;strong&gt;Phone Numbers&lt;/strong&gt; under the &lt;strong&gt;Routing&lt;/strong&gt; menu then select the phone number listed.&lt;/li&gt;
  &lt;li&gt;Under the &lt;strong&gt;Contact Flow/IVR&lt;/strong&gt; dropdown menu, select the Contact flow you created, then select &lt;strong&gt;Save&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;testing-the-contact-flow&quot;&gt;Testing the Contact Flow&lt;/h2&gt;

&lt;p&gt;Now that we’ve associated the contact flow with the phone number, you’re ready for testing! Remember, if you’ve provisioned a number in the US (and you’re overseas), you can dial for free using Google hangouts.&lt;/p&gt;

&lt;p&gt;That’s it! You now have a fully functioning chatbot that can be called and spoken to. From here, you can add more intents to build a bot that can handle several simple user administration tasks.&lt;/p&gt;

&lt;p&gt;A few things worth noting:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You may notice that Lex repeats the user ID as a number, rather than individual digits. Unfortunately, Amazon Connect doesn’t support SSML content from Lex at this time however it’s in the product roadmap.&lt;/li&gt;
  &lt;li&gt;You can view missed utterances on the &lt;strong&gt;Monitoring tab&lt;/strong&gt; on your Lex bot and potentially add them to existing intents. This is a great way to monitor and expand on the capability of your bot.&lt;/li&gt;
&lt;/ul&gt;

&lt;!--Section: Lesson UI--&gt;
&lt;section class=&quot;text-center&quot;&gt;
    &lt;hr /&gt;
   
    &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;col-lg-4 col-md-6 col-sm-6&quot;&gt;
            &lt;a target=&quot;_blank&quot; href=&quot;/blog/create-service-desk-with-bots-using-amazon-lex-and-amazon-connect-part-1&quot; class=&quot;btn  btn-sm&quot; id=&quot;round-button&quot;&gt;
                &lt;i class=&quot;fas fa-arrow-left mr-2&quot;&gt;&lt;/i&gt;Previous Lesson
            &lt;/a&gt;
        &lt;/div&gt;
     
        &lt;div class=&quot;col-lg-4 col-md-6 col-sm-6&quot;&gt;
            &lt;a target=&quot;_blank&quot; href=&quot;/blog/create-service-desk-with-bots-using-amazon-lex-and-amazon-connect-part-2&quot; class=&quot;btn btn-sm&quot; id=&quot;round-button&quot;&gt;Next Lesson
                &lt;i class=&quot;fas fa-arrow-right ml-2&quot;&gt;&lt;/i&gt;
            &lt;/a&gt;
        &lt;/div&gt;       
    &lt;/div&gt;

&lt;/section&gt;</content><author><name>Girish Godage</name></author><category term="learning" /><summary type="html">The service desk with bots using Amazon Lex and Amazon Connect (Part 2)</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/img/aws_cloud.png" /></entry><entry><title type="html">Amazon Connect – Customer Contact Center in the Cloud</title><link href="http://localhost:4000/blog/create-call-center-using-AWSConnect" rel="alternate" type="text/html" title="Amazon Connect – Customer Contact Center in the Cloud" /><published>2020-02-01T11:41:00+00:00</published><updated>2020-02-01T11:41:00+00:00</updated><id>http://localhost:4000/blog/create-call-center-using-AWSConnect</id><content type="html" xml:base="http://localhost:4000/blog/create-call-center-using-AWSConnect">&lt;h2 id=&quot;amazon-connect--customer-contact-center-in-the-cloud&quot;&gt;Amazon Connect – Customer Contact Center in the Cloud&lt;/h2&gt;

&lt;p&gt;Customer service is essential to the success of any business. In order to provide voice-based customer service at scale, many organizations operate call centers. At the low end, call centers simply route incoming calls to any available agent. More sophisticated systems support more sophisticated routing and interaction, including the ability to create customized call trees and other Integrated Voice Response (IVR) systems. Traditionally, IVR systems have been difficult to install and expensive to license, with capacity-based pricing the norm.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/call_center_4.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Amazon customer service organization aims to deliver an exceptional level of services to our customers. In order to do this at scale, the organization employs tens of thousands of agents working at more than 50 groups and subsidiaries centers scattered around the world, supporting customers that speak a wide variety of languages.&lt;/p&gt;

&lt;h2 id=&quot;welcome-to-amazon-connect&quot;&gt;Welcome to Amazon Connect&lt;/h2&gt;

&lt;p&gt;Today I would like to introduce you to Amazon Connect. Building on the same technology used by many of our own customer service teams, Amazon Connect lets you set up a cloud-based contact center in minutes. You create your contact center, design your contact flows (similar to IVRs), and on-board your agents using a modern interface that is entirely web-based.&lt;/p&gt;

&lt;p&gt;Instead of requiring help from IT teams and specialized consultants, Amazon Connect is simple enough to be configured and run directly by business decision makers. There’s no hardware to deploy and no per-agent licenses. Instead, you pay based on the number of customer-minutes and the amount of phone time that you consume. This scalable, pay-as-you-go model means that you can use Amazon Connect in situations where your call volume is unpredictable, spiky, or both.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_switchboard_2.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Amazon Connect works with many different AWS services including:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon S3&lt;/strong&gt; – Amazon Connect uses S3 to provide unlimited, encrypted storage of calls (audio) and reports.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Lambda&lt;/strong&gt; – This give you the ability to run code in serverless fashion as part of a customer contact. The code can pull data from your CRM or your database and use the data to provide a personalized customer experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Lex&lt;/strong&gt; – Customers can build natural language contact flows using Amazon Lex to get the same automatic speech recognition (ASR) technology and natural language understanding (NLU) that powers Amazon Alexa. This lets callers simply say what they want instead of having to listen to long lists of menu options and guess which one is most closely related to what they want to do. This feature of Amazon Connect is being released in preview form, and you can request access to the preview if you are interested.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Directory Service&lt;/strong&gt; – Amazon Connect can reference an existing Active Directory or it can create a new one. The directory is used to store user (administrator, manager, or agent) identities and permissions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Kinesis&lt;/strong&gt; – Amazon Connect can stream contact trace records (CTRs) to Amazon Kinesis. From there they can be pushed to Amazon S3 or Amazon Redshift and analyzed using Amazon QuickSight or other business analytics tools.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon CloudWatch&lt;/strong&gt; – Amazon Connect publishes real-time operational metrics to CloudWatch. These metrics will tell you how many calls are arriving per second, how many are being held in queues, and so forth. You can use these metrics to observe the performance of your contact center and to make sure that you have the right number of agents on hand.&lt;/p&gt;

&lt;h2 id=&quot;amazon-connect-benefits--features&quot;&gt;Amazon Connect Benefits &amp;amp; Features&lt;/h2&gt;
&lt;p&gt;Let’s take a look at the major benefits and features of Amazon Connect.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Cloud-Powered&lt;/strong&gt; – Amazon Connect is an integral part of AWS, and is designed to be robust, scalable, and highly available. Each contact center instance runs in multiple AWS Availability Zones.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Simple&lt;/strong&gt; – As I already noted, Amazon Connect was designed to be set up and run by business decision makers. The graphical console makes the setup process (including the design of graphical call flows) easy and efficient.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Flexible&lt;/strong&gt; – The Contact Flow Editor (CFE) that powers Amazon Connect includes blocks for interaction, integration, control flow, branching, and more. Call flows can include a mixture of prerecorded audio prompts, generated audio, Lex-powered interaction, integration with existing systems and databases, conversations with agents, call transfers, and more.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Economical&lt;/strong&gt; – Amazon Connect’s pay-as-you-go model keeps operating costs in line with actual usage. On the agent side, Amazon Connect includes a softphone that supports high quality audio.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;amazon-connect-tour&quot;&gt;Amazon Connect Tour&lt;/h2&gt;
&lt;p&gt;Let’s set up a customer contact center, starting at the Amazon Connect console. I click on Get started:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_console_splash_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I can choose to use an existing directory or I can create a new one, which I’ll do. I’ll set up the URL for my contact center to proceed. This URL will allow my contact center’s users to sign in:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_step1_choose_dir_2.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, I set myself up as the administrator:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_step2_create_admin_2.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My contact center can accept incoming calls, make outgoing calls, or both. Outgoing calls can be made as part of a contact flow or by an agent. I simply specify what I need (I’ll choose my direct dial and/or toll-free numbers later):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_step3_telephony_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, I specify the S3 locations (buckets and prefixes) for call recording and reports. I can use separate buckets and prefixes for each, along with distinct AWS Key Management Service (KMS) encryption keys:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_step4_storage_2.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then I confirm my choices and click on Create instance:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_review_create_2.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A few seconds later my Amazon Connect instance is ready to go, and I can click on Get started:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_success_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Amazon Connect logs me in using the administrator credentials that I entered earlier, and then I click on Let’s go to proceed:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_hello_2.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now I can get set up to accept my first call, by choosing a toll free or direct dial phone number:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_claim_num_2.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am ready to accept my first call:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_softphone_3.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I call the number on my cell and walk through the options. I press “1” to speak to an agent, and the softphone offers to let me (playing the role of the agent) take the call:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_softphone_pickup_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that the Amazon Connect is set up and accepting calls, I can explore the Dashboard and configure my contact center:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_dash_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I can see the phone numbers that are associated with the call center:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_my_phones_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And I can claim additional numbers (up to 10 direct inward dialing and 10 toll free), choosing from numbers in a wide list of countries:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_claim_num_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At the bottom of the screen I can choose the contact flow that is activated when the number is called:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_pick_flow_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Returning to the dashboard, the next step is to set the hours of operation. I can see the list of existing hours of operation, and I can create a new one:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_pick_hours_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I can have multiple hours of operation, each of which can be attached to a queue or referenced from a contact flow.&lt;/p&gt;

&lt;p&gt;Now I can create queues to model the routing of contacts (incoming calls) to agents. Queues can represent priorities (different levels of regular and premium support), or agents with different business or language skills.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_make_queue_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I also have the ability to create prompts. These are audio snippets that can be referenced from a contact flow. I can upload an existing WAV file or I can record one from within the browser:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_record_prompt_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, I can create a new contact flow or edit an existing one. A contact flow defines the customer experience after they make contact. Here is the sample flow that is set up by default:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_sample_flow_2.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I can find the desired block in the menu, drag it on to the canvas, and connect it in to the flow:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_create_flow_start_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then I click on the header of the block to set it up. I can use a prompt, or I can choose between static or dynamic text to speech (dynamic speech would reference a value attached to the call flow, perhaps resulting from a database lookup):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_setup_prompt_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the most powerful and general blocks allows me to call a Lambda function during the contact flow. The function can pull data from a database, connect to a CRM, or implement any desired type of business logic. The function is provided with key-value pairs as input, and returns the same as output. The returned values are associated with the execution of the flow.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_run_lambda_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next step is to create a routing profile, consisting of one or more queues, with associated priorities. The priorities allow agents to service multiple queues in the proper order (lower numbers are higher priority); you can combine priorities and delays to set up routing rules that are in accord with the needs of your users and your contact center:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_add_routing_pro_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The final step is to add and empower the users (administrators, managers, agents, and so forth). This can be done on a user-by-user basis or by importing a CSV file that contains definitions for multiple users. Here’s how I add a user named Hello World:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_add_user_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I can also create a hierarchy of agents (great for regional and/or divisional reporting).&lt;/p&gt;

&lt;p&gt;Amazon Connect lets me use security profiles to control the permissions assigned to each type of user:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_manage_profiles_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I also have access to operational metrics, both real-time and historical. Here are some of the real-time metrics (the time frame and displayed fields can be customized as needed):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_rt_metrics_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The metrics are published to CloudWatch, where they can be used to drive alarms.&lt;/p&gt;

&lt;p&gt;I hope that this brief tour has given you a reasonably thorough introduction to Amazon Connect, and would love to hear how you have used it to modernize your contact center and to improve the level of service that you can provide to your customers:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/18/co_new_call_center_1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see, it is a rich and powerful service, with plenty of room for customization and extension. There are plenty of advanced features and configuration options that you can explore on your own.&lt;/p&gt;

&lt;p&gt;Pricing, as I noted, is on a pay-as-you-go basis. You pay for each contact center and each active phone call (inbound or outbound) on a per-minute basis. As part of the AWS Free Tier, you get 90 minutes of contact center usage, two phone numbers (DID and toll-free), 30 minutes of inbound DID calls, 30 minutes of inbound toll-free calls, and 30 minutes of outbound calls, all per month, for an entire year.&lt;/p&gt;</content><author><name>Girish Godage</name></author><category term="learning" /><summary type="html">Amazon Connect – Customer Contact Center in the Cloud</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/img/aws_cloud.png" /></entry><entry><title type="html">Cloud Cost Optimization Strategies (Even AWS won’t Tell you!)</title><link href="http://localhost:4000/blog/cloud-cost-optimization-strategies" rel="alternate" type="text/html" title="Cloud Cost Optimization Strategies (Even AWS won't Tell you!)" /><published>2020-01-25T11:41:00+00:00</published><updated>2020-01-25T11:41:00+00:00</updated><id>http://localhost:4000/blog/cloud-cost-optimization-strategies</id><content type="html" xml:base="http://localhost:4000/blog/cloud-cost-optimization-strategies">&lt;h2 id=&quot;cloud-cost-optimization-strategies-even-aws-wont-tell-you&quot;&gt;Cloud Cost Optimization Strategies (Even AWS won’t Tell you!)&lt;/h2&gt;

&lt;p&gt;Fine-tuning your cloud infrastructure is critical to make sure that your overall bill keeps up to its limit. Read this blog to find out proven cloud cost optimization strategies to help you cut down on the bill and save money by eliminating unused resources.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/16/Diagram1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Stanford University researcher and lecturer Dr. Jonathan Koomey presented a report last year which stated a surprising fact that only 20 per cent of organizations would save money if they transferred their server data directly to the cloud, whereas 80 per cent would see an increase in the annual costs.&lt;/p&gt;

&lt;p&gt;For those organizations comprising of 80 per cent, the extra cost rolls over when they move on to the cloud, Koomey found, which results in organizations paying an average of 36 per cent more of cloud services than they actually need to. Given Gartner’s projection that data storage will be a $173 billion business in 2018, companies globally could save $62 billion on storage just by optimizing their workloads. This is understandable since, for organizations using cloud resources aggressively, it becomes difficult to keep the cloud bills in check.&lt;/p&gt;

&lt;p&gt;If your organization is one of those who overspend on the cloud resources, this blog is for you where we discuss some of the prominent strategies that I put into practice so that our clients get the best result in the lease possible spending.&lt;/p&gt;

&lt;p&gt;For any organization, the major spend of 70-80 per cent comprises of the storage and compute resources. And hence, this makes it inherently important to monitor these aspects closely. However, the first step towards keeping a strict eye on the bill is to increase the visibility into the cloud costs and understanding the total cost of ownership. Let’s get started!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;cost-optimization-strategies-for-compute&quot;&gt;Cost Optimization Strategies for compute&lt;/h2&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;cost-optimization-strategies-for-storage&quot;&gt;Cost Optimization Strategies for Storage&lt;/h2&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;cost-optimization-tools&quot;&gt;Cost Optimization Tools&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;aws-cloud-cost-optimization-strategies&quot;&gt;AWS Cloud Cost Optimization Strategies&lt;/h2&gt;

&lt;p&gt;The majority of spending for most users is on compute, making it a key area of focus for cost reductions.&lt;/p&gt;

&lt;h3 id=&quot;1-downsize-under-utilized-instances&quot;&gt;1. Downsize under-utilized instances&lt;/h3&gt;
&lt;p&gt;Downsizing one size in an instance family reduces costs by 50 per cent. Let’s take one example of m4.large and t2.small.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/16/Scale.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As shown in the image, m4.large is utilized less than 50% between 0 to 9 am. Server usage increases from 9 am to 2 pm. Here it requires two m4.large instances. Again, usage starts decreasing till 6 pm and increases in the night. As per the graph, it is clear that during some specific time span single m4.large can’t be utilized even 50% of its capacity. It costs $4.1/day.&lt;/p&gt;

&lt;p&gt;Under-utilized instances should be considered as candidates for downsizing either one or two instance sizes. Keep in mind that downsizing one size in an instance family reduces costs by 50 per cent.&lt;/p&gt;

&lt;p&gt;According to server load graph, we can use t2.small for utmost utilization. As t2.small has a half compute capacity than m4.large so 70 t2.small instances are required instead of 41 m4.large instances. Using t2.small instances the decision makers can save more than 60% of the instance cost.&lt;/p&gt;

&lt;h3 id=&quot;2-turn-off-unused-instances&quot;&gt;2. Turn off unused instances&lt;/h3&gt;

&lt;p&gt;Organizations use instances according to the highest peak of requirement which is not constant. Due to variation in the requirement, organizations have to pay for non-utilized instances. To fully optimize cloud spend, turn instances off that are no longer being used. The below image shows how servers load varies on a particular day and then turn off instances.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/16/Scale-2.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see in the above image, server load can be handled by 1 instance so you can turn off 2nd instance to save the cost. During the next 8 hours server load increases and requires two instances. Again, server load decreases from 16 to 24 and you can turn off 2nd instance.&lt;/p&gt;

&lt;p&gt;Production instances should be auto-scaled to meet demand. Shutting down development and test instances in the evenings and on weekends when developers are no longer working can save 65 per cent or more of costs. And instances for training, demos, and development must be terminated once projects are completed.&lt;/p&gt;

&lt;h3 id=&quot;3-use-discounted-instances&quot;&gt;3. Use discounted instances&lt;/h3&gt;
&lt;p&gt;It is very important to understand Discount options of Instances. In detail for AWS. With AWS Reserved Instances, you get the discount in exchange for making a one-year or three-year commitment with the longer commitment giving a higher discount. Discounts range from 24 to 75 per cent depending on the RI term, the instance type, and the region.&lt;/p&gt;

&lt;h3 id=&quot;4-aws-spot-instances&quot;&gt;4. AWS spot instances&lt;/h3&gt;
&lt;p&gt;On the AWS spot market, the traded products are EC2 instances, and they’re delivered by starting an EC2 instance. It is very common to see 15-60% savings, and in some cases, you can save up to 90% with spot instances.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How does it work?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You set a maximal bid price and optionally a period up to 6 hours. The price you pay is the spot price each hour. When this price goes above your specified maximum bid price, the instance is terminated. Be careful that the new console for spot creates you a fleet, and even terminating the instance yourself, the fleet remains open. You need to cancel the “spot request” (the fleet), as well as terminate the instance(s) when you are done. The instances are guaranteed to remain active for the specified amount of time up to 6 hours. See below image for more understanding.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/16/Scale-2-1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cloud Cost Optimization Strategies
You may also like: &lt;strong&gt;How to Choose the Right Cloud Deployment Model for your Application?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are many different spot markets available. A spot market is defined by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Instance type (e.g. m3.medium)&lt;/li&gt;
  &lt;li&gt;Region (e.g. eu-west-1)&lt;/li&gt;
  &lt;li&gt;Availability Zone (e.g. eu-west-1a)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each spot market is offering a separate current price. So when using spot instances it is an advantage to be able to use different instance types, in different availability zones or even regions, as this allows you to pick the lowest price available.&lt;/p&gt;

&lt;h3 id=&quot;5-minimizing-data-transfer-costs&quot;&gt;5. Minimizing data transfer costs&lt;/h3&gt;
&lt;p&gt;Make sure your Object Storage and Compute Services in the same region because Data transfer is free in the same region. For example, AWS charges $0.02/GB to download the file from another AWS region.&lt;/p&gt;

&lt;p&gt;If you do a lot of cross-region transfers it may be cheaper to replicate your Object Storage bucket to a different region than download each between regions each time. Let’s understand it with AWS S3’s example.&lt;/p&gt;

&lt;p&gt;1GB data in us-west-2 is anticipated to be transferred 20 times to EC2 in us-east-1. If you initiate inter-region transfer, you will pay $0.20 for data transfer (20 * 0.02). However, if you first download it to mirror S3 bucket in us-east-1 then you just pay $0.02 for transfer and $0.03 for storage over a month. It is 75% cheaper. This feature is built into S3 called &lt;strong&gt;cross-region replication&lt;/strong&gt;. You will also get better performance along with cost benefit.&lt;/p&gt;

&lt;p&gt;Use AWS content delivery network called CloudFront If there are a lot of downloads from the servers which are stored in S3 (e.g. images on consumer site).&lt;/p&gt;

&lt;p&gt;There are CDN providers such as CloudFlare who charge a flat fee. If you have a lot of static assets then CDN can give huge savings over S3, as just a tiny per cent of original requests will hit your S3 bucket.&lt;/p&gt;

&lt;h3 id=&quot;6-delete-or-migrate-unwanted-files-after-a-certain-date&quot;&gt;6. Delete or migrate unwanted files after a certain date&lt;/h3&gt;
&lt;p&gt;Cloud architects can programmatically configure rules for data deletion or migration between types of storage. This drastically reduces the long-term storage costs. All the major cloud providers have the feature of Lifecycle Management. For instance, active data can remain in Azure Blob Standard storage. But, if certain data begin to show signs of infrequent access, users can program rules to migrate that data over Azure Cool Blob storage to incur a cheaper storage rate.&lt;/p&gt;

&lt;p&gt;A lot of deployments uses Object Storage for log collection. You may automate deletion using life cycles. Delete objects 7 days after their creation time. E.g. if you use S3 for backups, it makes sense to delete them after a year. Similarly, you can use the Object Lifecycle management feature in Google cloud and expiration of Blobs in Azure.&lt;/p&gt;

&lt;h3 id=&quot;7-compress-data-before-storage&quot;&gt;7. Compress Data Before Storage&lt;/h3&gt;
&lt;p&gt;Compressing data reduces your storage requirements. Subsequently reducing the cost of storage. Using fast compression algorithm such as LZ4 gives better performance. LZ4 is a lossless compression algorithm, providing compression speed at 400 MB/s per core (0.16 Bytes/cycle). It features an extremely fast decoder, with speed in multiple GB/s per core (0.71 Bytes/cycle). In many use cases, it makes sense to use compute-intensive compressions such as GZIP or ZSTD.&lt;/p&gt;

&lt;h3 id=&quot;8-take-care-of-incomplete-multipart-uploads&quot;&gt;8. Take care of incomplete multipart uploads&lt;/h3&gt;
&lt;p&gt;There are many partial objects in Object Storage which had been interrupted while uploading. If you have a petabyte Object Storage bucket, then even 1% of incomplete uploads may end up wasting terabytes of space. You should clean up incomplete uploads after 7 days.&lt;/p&gt;

&lt;h3 id=&quot;9-reduce-cost-on-api-access&quot;&gt;9. Reduce cost on API access&lt;/h3&gt;
&lt;p&gt;Cost on API access can be reduced by using batch objects and avoiding a large number of small files. Since API calls are charged per object, regardless of its size. Uploading 1-byte costs the same as uploading 1GB. So usually small objects can cause API costs to soar.&lt;/p&gt;

&lt;p&gt;For example in AWS S3, PUT calls cost $0.005/1000 calls. So to upload a 10GB file in 5MB chunks it will cost roughly $0.01. Whereas, for 10KB file chunks, it will cost approximately $5.00.&lt;/p&gt;

&lt;p&gt;Similarly, it is a bad practice to use CALL/PUT options with tiny files using S3. It makes sense to use batch objects or a database such as DynamoDB or MySQL instead of S3. 1 writes per second in DynamoDB costs $0.00065/hour. Assuming 80% utilization, DynamoDB will cost $0.000226/1000 calls. This is 95% cheaper to use DynamoDB compared to AWS S3.&lt;/p&gt;

&lt;p&gt;The S3 file names are not a database. Relying too much on S3 LIST calls is not the right design and using a proper database can typically be 10-20 times cheaper.&lt;/p&gt;

&lt;h3 id=&quot;10-design-workloads-for-scalability&quot;&gt;10. Design workloads for scalability&lt;/h3&gt;
&lt;p&gt;For any public cloud, scalability is a critical aspect. Scalability uses event-driven compute instances like AWS Lambda or containers like Google Container Engine to scale core services for important workloads, such as microservices. These techniques are intended to utilize more computing when it is needed. Once the requirement increases, those additional resources are released for reuse.&lt;/p&gt;

&lt;h3 id=&quot;11-cache-storage-strategically&quot;&gt;11. Cache storage strategically&lt;/h3&gt;
&lt;p&gt;Use memory-based caching, such as AWS ElastiCache. Caching improves data accessibility by moving important or frequently accessed in-memory instead of retrieving data from storage instances. This can reduce the expense of higher-tier cloud storage and improve the performance of some applications.&lt;/p&gt;

&lt;p&gt;It gives best results for performance-sensitive workloads which run in remote regions or when efficient replication is needed for resilience.&lt;/p&gt;

&lt;h3 id=&quot;12-use-auto-scaling-to-reduce-costs-during-off-hours&quot;&gt;12. Use auto-scaling to reduce costs during off hours&lt;/h3&gt;
&lt;p&gt;Most apps have busier and slower periods throughout a week or day. Take advantage of auto-scaling to save some money during slow periods.&lt;/p&gt;

&lt;p&gt;These deployment types all support auto-scaling:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cloud Services&lt;/li&gt;
  &lt;li&gt;App Services&lt;/li&gt;
  &lt;li&gt;VM Scale Sets (Including Batch, Service Fabric, Container Service)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Scaling could also mean shutting your app down completely. You can use “AlwaysOn” feature provides by App Services that controls if the app should shut down due to no activity. You could also schedule shutting down your dev/QA servers with something like DevTest Labs.&lt;/p&gt;

&lt;h2 id=&quot;aws-cost-optimization-tools&quot;&gt;AWS Cost Optimization Tools&lt;/h2&gt;

&lt;p&gt;AWS inherently provides a list of tools to helps you in tracking on your AWS bill. Some of these can also generate AWS cloud cost optimization report for you as well.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;AWS Cost Optimization Explorer&lt;/strong&gt; – This helps you in observing patterns on your AWS bill, forecast future costs and identify areas that needs further improvement. In short, this works as a AWS cost optimization calculator.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AWS Budgets&lt;/strong&gt; – This allows you to set custom budgets limits and notification mechanism when your spends exceed the limits. Budgets can be set on tags, accounts and resource types.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Amazon CloudWatch&lt;/strong&gt; – Apart from collecting and tracking metrics, this helps you in setting custom alarms that automatically reacts to the changes in AWS resources.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cost Optimization Monitor&lt;/strong&gt; – This automatically processes the detailed billing remetrics ports so that you get granular metrics which can be searched, analysed and visualised in a customizable dashboard.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;EC2 Right Sizing:&lt;/strong&gt; Quickly analyze the EC2 utilization data and receive reporting recommendations for choosing the correct EC2 instances.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The key to using the above methods and any other cost optimization ideas is to have a proactive approach for your custom software development practices. These methods are some of the quintessential Cloud cost optimization techniques you can inculcate in your regular tasks.&lt;/p&gt;

&lt;p&gt;We’ve developed this AWS cloud cost optimization guide by closely understanding the existing cost and what changes are critical in both estimating and delivering real cost savings. We hope these will prove useful to you as well.&lt;/p&gt;</content><author><name>Girish Godage</name></author><category term="learning" /><summary type="html">Cloud Cost Optimization Strategies (Even AWS won’t Tell you!)</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/img/aws_cloud.png" /></entry><entry><title type="html">Multi-Cloud Management Platforms, Challenges and Best Practices</title><link href="http://localhost:4000/blog/multi-cloud-management" rel="alternate" type="text/html" title="Multi-Cloud Management Platforms, Challenges and Best Practices" /><published>2020-01-25T11:41:00+00:00</published><updated>2020-01-25T11:41:00+00:00</updated><id>http://localhost:4000/blog/multi-cloud-management</id><content type="html" xml:base="http://localhost:4000/blog/multi-cloud-management">&lt;h2 id=&quot;multi-cloud-management-platforms-challenges-and-best-practices&quot;&gt;Multi-Cloud Management Platforms, Challenges and Best Practices&lt;/h2&gt;

&lt;p&gt;Multi-cloud management is one of the biggest challenges for enterprises. It can be difficult and often requires the use of third-party tools. This blog consists of some popular multi-cloud management tools and key features you should look while selecting the tool.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/15/Blog-Diagram-4-2-1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is evident that multi-cloud strategy eliminates crucial challenges in cloud computing like vendor lock-in, latency, and higher cost. In addition, organizations can leverage vendors’ unique capabilities in artificial intelligence, serverless computing or augmented reality.&lt;/p&gt;

&lt;p&gt;However, building applications that are truly built on multi-cloud architecture are challenging. The reason is that the different clouds and on-premises resources use different APIs and management interfaces.&lt;/p&gt;

&lt;p&gt;For example, &lt;strong&gt;&lt;em&gt;Amazon S3 obviously supports the Amazon S3 API, but Azure Blob Storage and Google Cloud Storage do not. Dealing with multiple APIs and management interfaces has always been anathema for application developers who want to avoid the vendor lock-in of a single API, as well as the added development, support, and time costs associated with supporting multiple APIs.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With proper multi-cloud management, organizations can deal with multi-cloud challenges. According to Judith Hurwitz, CEO of Hurwitz &amp;amp; Associates:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The real value of multi-cloud management is the opportunity to mix and match — to get the most cost-effective services, the most innovative services — and to tailor those services to the problem at hand and to changing business demands.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are many platforms available to manage multiple cloud providers via a single interface. These tools include cloud management platforms (CMPs), cloud services brokers (CSBs), and other tools that provide an abstraction layer between two or more public-cloud providers. There are also tools that manage, monitor, and utilize those services.&lt;/p&gt;

&lt;p&gt;To help you choose the right multi-cloud management platform, I’ve divided the blog into the following parts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What is Multi-cloud Management?&lt;/li&gt;
  &lt;li&gt;Challenges in Multi-Cloud management&lt;/li&gt;
  &lt;li&gt;Multi Cloud Management Platforms&lt;/li&gt;
  &lt;li&gt;Features to Consider While Choosing a Multi-Cloud Management Platform&lt;/li&gt;
  &lt;li&gt;Best Practices to Manage Multi-Cloud Environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-is-multi-cloud-management&quot;&gt;What is Multi-cloud Management?&lt;/h2&gt;

&lt;p&gt;Multi-cloud management is a practice of developing consistent workflows for managing infrastructure provisioning (set-up/tear-down), security, connectivity, and service discovery across cloud platforms. A well defined multi-cloud management provides the visibility required to prevent challenges that lead to a complex multi-cloud architecture.&lt;/p&gt;

&lt;p&gt;A well-defined cloud management strategy helps organizations achieve the following primary goals.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Self-service capabilities&lt;/strong&gt;: Self-service capabilities eliminate the traditional processes related to IT resource provisioning.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Workflow automation&lt;/strong&gt;: Cloud management enables workflow automation. Organizations can take actionable steps needed to create and manage computing instances, without human intervention.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cloud analysis&lt;/strong&gt;: By doing cloud analysis and monitoring, organizations can use the best available services according to requirements. Also, with the use of metrics, organizations can change cloud providers or migrate workloads from the public to private clouds if they don’t get optimal performance.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;challenges-in-multi-cloud-management&quot;&gt;Challenges in Multi-Cloud Management&lt;/h2&gt;
&lt;h3 id=&quot;cost&quot;&gt;Cost&lt;/h3&gt;
&lt;p&gt;Many companies suffer from the large expenses of using cloud services due to poor multi-cloud management. In multi-cloud, organizations use multiple services from different cloud providers. Many times, it becomes difficult to utilize all the services as per demand and hence companies have to pay for the services which have been not used.&lt;/p&gt;

&lt;h3 id=&quot;performance&quot;&gt;Performance&lt;/h3&gt;

&lt;p&gt;IT operations teams need to ensure the speed and performance of applications delivered to end users from complex multi-cloud environments. The scale at which IT needs to monitor data and identify problems cannot be effectively managed by humans alone. They must leverage artificial intelligence (AI) and machine learning.&lt;/p&gt;

&lt;p&gt;For example, if you are building an e-commerce app on a multi-cloud environment then performance would be a major challenge.&lt;/p&gt;

&lt;h3 id=&quot;automation&quot;&gt;Automation&lt;/h3&gt;

&lt;p&gt;Managing workloads that span multiple disparate platforms creates the need to address real-time processing and orchestration. Application development organizations, especially in a multi-cloud environment, are slowed by their manual processes for creating and modifying workflows and getting applications into production.&lt;/p&gt;

&lt;h3 id=&quot;cloud-sprawl&quot;&gt;Cloud Sprawl&lt;/h3&gt;

&lt;p&gt;While adopting multi-cloud strategy, organizations have to prevent app sprawl. Cloud sprawl occurs when users fail to decommission unused cloud computing instances or services. The main reason is that the workloads will move between clouds frequently. Cloud Sprawl create resource visibility issues which affect your cloud bill.&lt;/p&gt;

&lt;p&gt;For example, &lt;em&gt;in an organization, employees may be partial to a particular cloud for specific workloads, and this choice may not be consistent across the entire organization. This means the same app might be open across multiple public cloud platforms.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;migration&quot;&gt;Migration&lt;/h3&gt;
&lt;p&gt;For most organizations, migrating to the multi-cloud is a significant challenge especially when the migration involves multiple data centers, remote locations, and mobile users. Ensuring secure access to cloud assets with legacy networks often leads to two choices — backhauling cloud traffic to a central Internet access point or sending cloud traffic directly onto the Internet.&lt;/p&gt;

&lt;p&gt;Planning plays a huge role in the migration process. The right multi-cloud management solution can help you migrate applications with existing standards and policies across your new cloud network.&lt;/p&gt;

&lt;h3 id=&quot;compliance&quot;&gt;Compliance&lt;/h3&gt;
&lt;p&gt;As Cloud Computing provides the agility and ­flexibility, it also breaks the planning and approval process which gives rise to compliance issues in multi-cloud environment which leads to shadow IT, budget overrun, and security issues.&lt;/p&gt;

&lt;p&gt;Organizations need to define standards for the consumption of cloud services and resources as they define for their business processes. With cloud’s shared responsibility model, choosing the right configuration for services and resources, optimizing resource utilization &amp;amp; cost, and securing data on cloud resources comes under the ownership of cloud consumers for both public and private cloud platforms.&lt;/p&gt;

&lt;h3 id=&quot;data-security&quot;&gt;Data Security&lt;/h3&gt;
&lt;p&gt;As with your own data centers, in multi-cloud also you should have a security framework to rely on. The more levels an attacker has to penetrate to access a valuable resource, the better the chances are that the attack will not be successful.&lt;/p&gt;

&lt;p&gt;Consequently, you should design your service to have numerous layers protecting any sensitive data. This way, you can ensure that if one security measure is breached, other obstacles will be in place to keep the attacker at bay.&lt;/p&gt;

&lt;h2 id=&quot;multi-cloud-management-platforms&quot;&gt;Multi Cloud Management Platforms&lt;/h2&gt;

&lt;p&gt;When an organization’s users take the initiative to adopt infrastructure and solutions from different cloud vendors, challenges emerge. Each new cloud service comes with its own tools that can increase complexity. Multi-cloud environments require new management solutions to optimize performance, control costs and secure complicated mixes of applications and environments, regardless of whether they are inside the data center or in the cloud.&lt;/p&gt;

&lt;h3 id=&quot;bmc&quot;&gt;BMC&lt;/h3&gt;
&lt;p&gt;BMC provides different solutions to address multi-cloud management challenges like migration, automated cost reporting, service management, performance, visibility, automation, and security.&lt;/p&gt;

&lt;h3 id=&quot;appformix&quot;&gt;AppFormix&lt;/h3&gt;
&lt;p&gt;AppFormix is a product of Juniper Networks which provides end-to-end visibility into your multi-cloud environment to eliminate any potential issues, rendering your operations simpler and more effective. It enables you to visualize and analyze both physical and virtual environments. Through monitoring and intent-based analytics, AppFormix transforms raw data from a diverse set of resources into a format that you can use immediately.&lt;/p&gt;

&lt;h3 id=&quot;divvycloud&quot;&gt;DivvyCloud&lt;/h3&gt;
&lt;p&gt;DivvyCloud’s multi-cloud platform helps customers manage AWS, Azure, GCP, VMware, and OpenStack. Developers have the freedom to choose which clouds are best suited for their company’s needs without IT having to develop policy automation and compliance solutions for each cloud.&lt;/p&gt;

&lt;h3 id=&quot;embotics&quot;&gt;Embotics&lt;/h3&gt;
&lt;p&gt;Embotics’s vCommander leverages a comprehensive set of multi-hypervisor virtualization and cloud management capabilities to allow organizations at any stage of cloud adoption to build and implement the framework, process, automation, and policies that will result in an optimized hybrid cloud environment. It provides support for:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;VMware vSphere&lt;/li&gt;
  &lt;li&gt;Microsoft Hyper-V&lt;/li&gt;
  &lt;li&gt;Amazon Web Services (AWS)&lt;/li&gt;
  &lt;li&gt;Microsoft Azure&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;harmony-controller-by-a10-networks&quot;&gt;Harmony Controller by A10 Networks&lt;/h2&gt;
&lt;p&gt;Harmony Controller platform introduces a new paradigm for centralized management with granular L4-7 analytics across essentially any deployment–on-premise or cloud. Available in a software or hardware form factor, the controller performs the control plane function and dynamically interacts with and oversees the various A10 Networks-based secure application services residing in the data plane. The Harmony Controller is highly scalable and based on a distributed microservices architecture with clustering to scale to the necessary capacity. The easy to use operator console provides monitoring for controller sub-systems, troubleshooting help, and assistance with recovery mechanisms.&lt;/p&gt;

&lt;h3 id=&quot;zenko&quot;&gt;Zenko&lt;/h3&gt;
&lt;p&gt;Developed by Scality, Zenko is Open Source Multi-Cloud Data Controller. It allows customers to manage storage across in-house storage and public cloud tiers. Zenko stores information locally and to Amazon S3, Azure Blob storage, Google Cloud Storage or any S3-compatible cloud storage platform (Ceph, Minio and more).&lt;/p&gt;

&lt;h3 id=&quot;cloudyn&quot;&gt;Cloudyn&lt;/h3&gt;
&lt;p&gt;Cloudyn is an enterprise-grade, SaaS solution that pioneered the single-pane-of-glass approach to managing and optimizing multi-platform, hybrid cloud environments. Supporting Microsoft Azure, Amazon Web Services, Google Cloud and OpenStack, Cloudyn delivers measurable cloud success by enabling full visibility and accountability packaged with continuous optimization across all clouds. The solution provides insights into usage, performance, and cost coupled with actionable recommendations for smart cloud optimization. Cloudyn enables accountability through comprehensive cost allocation and management helping enterprises get to cloud ROI more rapidly.&lt;/p&gt;

&lt;h3 id=&quot;ibm-cloud-manager&quot;&gt;IBM Cloud Manager&lt;/h3&gt;
&lt;p&gt;IBM Multicloud Manager is a tool for monitoring and managing Kubernetes environments, pinpointing component and service health, and managing applications across clusters and clouds. It includes capabilities for setting security policies and workload management. IBM’s value proposition is that providing a cross-cluster, the cross-cloud view becomes more manageable than handling it individually, within each cloud or cloud service.&lt;/p&gt;

&lt;h2 id=&quot;features-to-consider-while-choosing-a-multi-cloud-management-platform&quot;&gt;Features to consider while choosing a multi-cloud management platform&lt;/h2&gt;
&lt;h3 id=&quot;service-provisioning&quot;&gt;Service provisioning&lt;/h3&gt;
&lt;p&gt;The platform should have the feature to launch and allocate the cloud services according to demand. This tool can translate a provisioning request from the console, or an API, and translate that request into the cloud-native API of the target cloud within the multi-cloud architecture.&lt;/p&gt;

&lt;h3 id=&quot;service-monitoring&quot;&gt;Service monitoring&lt;/h3&gt;
&lt;p&gt;The ability to measure and visualize application and network-layer performance between their hybrid cloud, private cloud, and public cloud services. This includes reporting on what occurs to determine the future use of that service, including reliability, cost metrics, etc.&lt;/p&gt;

&lt;h3 id=&quot;service-performance&quot;&gt;Service performance&lt;/h3&gt;
&lt;p&gt;The ability to monitor service performance and then log resulting data. Poor-performing services should be blacklisted until the issues have been resolved.&lt;/p&gt;

&lt;h3 id=&quot;service-governancepolicy&quot;&gt;Service governance/policy&lt;/h3&gt;
&lt;p&gt;The ability to define and leverage policies around the use and execution of the service or services.&lt;/p&gt;

&lt;h3 id=&quot;service-orchestration&quot;&gt;Service orchestration&lt;/h3&gt;
&lt;p&gt;The ability to orchestrate the cloud service to meet the needs of a core business application or business process.&lt;/p&gt;

&lt;h3 id=&quot;monitoring-analytics&quot;&gt;Monitoring analytics&lt;/h3&gt;
&lt;p&gt;A detailed analysis of how the clouds under management are behaving, key metrics, and predictions around future behaviors such as performance or reliability.&lt;/p&gt;

&lt;h3 id=&quot;integration-with-security&quot;&gt;Integration with Security&lt;/h3&gt;
&lt;p&gt;The ability to operate seamlessly with the existing cloud security infrastructure. In most cases, this will be identity access management, but it could also deal with compliance systems as well.&lt;/p&gt;

&lt;h2 id=&quot;best-practices-to-manage-multi-cloud-environment&quot;&gt;Best Practices to Manage Multi-Cloud Environment&lt;/h2&gt;
&lt;p&gt;Map your architecture according to requirements
Map your entire network, and then identify where the cloud fits in it. Get a clear picture of the cloud’s role in your overall system-management strategy to avoid having to backfill gaps in the data needs of business managers and other customers. Different lines of business will be best served by different cloud providers.&lt;/p&gt;

&lt;h3 id=&quot;standardized-consumption&quot;&gt;Standardized consumption&lt;/h3&gt;
&lt;p&gt;In a multi-cloud environment, each business unit in an organization might use services from several different providers—for example, an analytics platform from Azure, storage from AWS and AI capabilities from the IBM Cloud. Business units often pay for these services in different ways.&lt;/p&gt;

&lt;h3 id=&quot;integration-remains-a-necessity&quot;&gt;Integration remains a necessity&lt;/h3&gt;
&lt;p&gt;In multi-cloud, developers require common standards for integrating and managing the supplier ecosystem to help address these issues. A cohesive multi-sourced ecosystem requires integration in six key areas including business, organization, information, governance, processes, and tools.&lt;/p&gt;

&lt;p&gt;For example, the Network layer is critical integration component of the multi-cloud and also need to be designed to let companies run their applications in a hybrid computing environment. The network control, security, and visibility need to extend into public and multi-clouds, making these environments look like a single network, with a single pane of glass management functionalities.&lt;/p&gt;

&lt;h3 id=&quot;use-containers&quot;&gt;Use containers&lt;/h3&gt;
&lt;p&gt;Having applications packaged with all their dependencies increases portability and can simplify management.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Multi-cloud is a solution where multiple clouds from different providers are used for separate tasks. To automate the task and optimize cost, enterprises need a robust multi-cloud management platform. The rising need for different applications is driving the adoption of multi-cloud management platform among end users. With the availability of multi-cloud management platform, enterprises can significantly reduce their dependency on a single provider.&lt;/p&gt;</content><author><name>Girish Godage</name></author><category term="learning" /><summary type="html">Multi-Cloud Management Platforms, Challenges and Best Practices</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/img/aws_cloud.png" /></entry><entry><title type="html">6 Multi-Cloud Architecture Designs for an Effective Cloud Strategy</title><link href="http://localhost:4000/blog/multi-cloud-architecture" rel="alternate" type="text/html" title="6 Multi-Cloud Architecture Designs for an Effective Cloud Strategy" /><published>2020-01-25T11:41:00+00:00</published><updated>2020-01-25T11:41:00+00:00</updated><id>http://localhost:4000/blog/multi-cloud-architecture</id><content type="html" xml:base="http://localhost:4000/blog/multi-cloud-architecture">&lt;h2 id=&quot;6-multi-cloud-architecture-designs-for-an-effective-cloud-strategy&quot;&gt;6 Multi-Cloud Architecture Designs for an Effective Cloud Strategy&lt;/h2&gt;

&lt;p&gt;Deploying a multi-tenant application across multiple cloud platforms can be very challenging. In this blog, we’ve explained 6 multi-cloud architecture designs which can help businesses to build an effective multi-cloud strategy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/14/Blog-Diagram1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Enterprises increasingly want to take advantage of the flexibility and choice of multiple cloud offerings in order to use best cloud services while achieving satisfactory cost reduction benefits. In fact, the International Data Corporation predicted in a futurescape report last year that multi-cloud adoption will increase drastically and more than 85% of enterprise IT corporations will invest in multi-cloud architecture by 2020. With the enterprise hurtling towards digital transformation at breakneck speeds, the adoption of cloud, both public and private, has accelerated. And working across different clouds across various platforms brings a whole lot of challenges in its wake. &lt;strong&gt;Lack of understanding of cloud technology&lt;/strong&gt; is the most basic one which CTO’s face.&lt;/p&gt;

&lt;p&gt;This is the first blog of our three blog series on multi-cloud system architecture. In this blog, you will get to know about multi-cloud architecture design for different organizational requirements. In the second blog, we have discussed &lt;strong&gt;Strategies to manage Multi-cloud environment effectively.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now before moving to the Multi-cloud architecture, just have a brief understanding of basic cloud architecture models.&lt;/p&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;How Basic Cloud Architecture Looks Like?&lt;/li&gt;
  &lt;li&gt;Multi-cloud Strategy&lt;/li&gt;
  &lt;li&gt;Multi-cloud Architecture&lt;/li&gt;
  &lt;li&gt;Multi-cloud vs Hybrid cloud&lt;/li&gt;
  &lt;li&gt;Tips for Managing Your Multi-Cloud Environment&lt;/li&gt;
  &lt;li&gt;Benefits of Multi-cloud Architecture&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-basic-cloud-architecture-looks-like&quot;&gt;How Basic Cloud Architecture Looks Like?&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/14/Basic-Cloud-Architecture.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The basic cloud architecture which is quite common around the web is 3-Tier architecture.&lt;/p&gt;

&lt;p&gt;The architecture consists of 3 major tiers – Load balancer server, Application Server, Database Server. There is one dedicated server for each tier.&lt;/p&gt;

&lt;p&gt;As in the above cloud architecture diagram, for failover and recovery purpose we have used redundant server at each tier. This is called Redundant 3-Tier architecture, used in production environment. Non-redundant architecture which consist of single server for each tier are only for testing the interactivity between each tier of your application.&lt;/p&gt;

&lt;p&gt;This is the most basic one, you can use additional server depending on the application. For example, to add faster backup functionality in my app, I have used Striped Volume set at the database tier.&lt;/p&gt;

&lt;p&gt;Now let’s take an &lt;strong&gt;&lt;em&gt;example of Netflix&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;How Netflix manages such a huge collection of videos and provides a great streaming experience without disruptions?&lt;/p&gt;

&lt;p&gt;This is because of its multi-data centers located geographically around the world which backups each other in case of any disaster. Also streaming from local datacenter giver faster viewing experience.&lt;/p&gt;

&lt;p&gt;In the above architecture we can have multi-datacenter, each having its own load balancer tier, Application tier and Database tier.&lt;/p&gt;

&lt;p&gt;How it can be done? Look at the below image.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/14/Multi-data-Centers-Architecture.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The most fascinating experience of cloud is its horizontal Auto Scaling feature. This gives you the ability to grow or shrink number of server resources on demand, and this work is done by load balancer. We have added Server Arrays to set up a particular tier of architecture to autoscale based on predefined alert conditions.&lt;/p&gt;

&lt;h2 id=&quot;multi-cloud-strategy&quot;&gt;Multi-Cloud Strategy&lt;/h2&gt;

&lt;p&gt;Multi-cloud strategy is the concomitant use of two or more cloud services such as &lt;strong&gt;AWS, Azure, Google Cloud and more&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This means you can use &lt;strong&gt;Google cloud to serve your US users&lt;/strong&gt; and &lt;strong&gt;Microsoft Azure for your customers in Europe&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Or you might &lt;strong&gt;use Azure SQL for your databases and Cognito for user management while using AWS EC2 instances and Load Balancing, all for a single application&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In addition, you can run your app primarily on Digital Ocean but is completely replicated and backed up on AWS.&lt;/p&gt;

&lt;p&gt;You can run different app on different clouds. You can have &lt;strong&gt;&lt;em&gt;your development and test environments on one cloud, and your production environment on another&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Multi-cloud management is another aspect, which involves &lt;strong&gt;monitoring the cost of cloud deployment&lt;/strong&gt;. It is important to reap benefits of multi-cloud.&lt;/p&gt;

&lt;p&gt;But to take advantage of multi-cloud benefits, it is very important to manage and monitor your cloud deployment and costs.&lt;/p&gt;

&lt;p&gt;Multi-cloud strategy is particularly effective if enterprises dealing with below challenges:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Users are not located near any data center, or widely distributed geographically.&lt;/li&gt;
  &lt;li&gt;Facing regulations limit in particular countries for storing data, e.g., EU.&lt;/li&gt;
  &lt;li&gt;Environment where public clouds are used with on-premises resources.&lt;/li&gt;
  &lt;li&gt;Cloud-based application is not resilient which can affect disaster recovery when loss of a single data center.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;multi-cloud-architecture&quot;&gt;Multi-Cloud Architecture&lt;/h2&gt;
&lt;p&gt;In order to build highly scalable and reliable applications, a multi-cloud architecture design is appropriate. Our objective is to provide architectural guidance for migrating cloud-based systems that run on multiple independent clouds. Let’s take a look at some of the prominent multi-cloud architectures and migration strategy.&lt;/p&gt;

&lt;h3 id=&quot;cloudification&quot;&gt;Cloudification&lt;/h3&gt;
&lt;p&gt;In this architecture, application component is hosted on-premise and after migration, it can use different cloud services of other cloud platforms to improve performance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/14/Cloudification.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here application component C1 is been hosted on-premise but after adopting multi-cloud, it uses AWS storage service AWS S3 and for compute, it uses Azure virtual machines.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Benefits: Improves availability as application re-hosting in multiple cloud platforms and avoid vendor lock-in.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;multi-cloud-relocation&quot;&gt;Multi-Cloud Relocation&lt;/h2&gt;
&lt;p&gt;In this architecture application component is re-hosted on cloud platform and use other cloud services of multiple cloud platform to enhance capabilities.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/14/Multi-Cloud-Relocation.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here application component C1 is re-hosted on AWS platform after migration and open to use environmental services of Azure. It is using AWS S3 for storage and has option available for compute either AWS or Azure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Benefits: Improves availability as application re-hosting in multiple cloud platforms and avoid vendor lock-in.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;multi-cloud-refactor&quot;&gt;Multi-Cloud Refactor&lt;/h2&gt;

&lt;p&gt;To provide better QoS, an on-premise application is re-architected for deployment on multiple cloud platforms. Here application needs to re-architected as fine-grained components so that deployment of high-usage components can be optimized independently. Here deployment of high-usage components is optimized independently of low-usage ones. The parallel design enables better throughput to multi-cloud platforms.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/14/Multi-Cloud-Relocation.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here AC1 and AC2 are two application components hosted on-premise before migration. As both the components are independent integrity units, AC1 is deployed on AWS using AWS S3. On the other hand, AC2 is deployed on Azure and it can use any Azure’s cloud service as per requirements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Benefits: Optimal scalability/performance, range of multi-cloud deployment options, agility to respond to business/IT change.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Challenges&lt;/strong&gt;: On-premise application is modernized in isolation. Modernization is performed primarily for technical reasons. Component architecture which is only determined bottom-up may need to be re-evaluated because of multi-cloud environment.&lt;/p&gt;

&lt;h2 id=&quot;multi-cloud-rebinding&quot;&gt;Multi-Cloud Rebinding&lt;/h2&gt;
&lt;p&gt;A re-architected application is deployed partially on multiple cloud environments and enables the application to continue to function using secondary deployment when there is a failure with the primary platform.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/14/Multi-Cloud-Rebinding.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here AC1 and AC2 are two application components hosted on-premise before migration. As both the components are independent integrity units, AC1 is remains on-premise while two AC2 are deployed on AWS and Azure for disaster recovery. AC1 and two AC2 components are connected via EBS or Service bus.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Benefits: As unhealthy services become healthy again, traffic can be delivered, returning system responsiveness to maximum.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Challenges&lt;/strong&gt;: This architecture does not guarantee seamless failover. There will be downtime.&lt;/p&gt;

&lt;h2 id=&quot;multi-cloud-rebinding-with-cloud-brokerage&quot;&gt;Multi-Cloud Rebinding with Cloud Brokerage&lt;/h2&gt;

&lt;p&gt;A re-architected application is deployed partially on multiple cloud environments. This enables the application to continue to function using secondary deployment when there is a failure with the primary platform using cloud brokerage services.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/14/Rebinding-with-Cloud-Brokerage.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this architecture AC1 has been deployed on-premise and two re-architected AC2 are deployed on two cloud platforms AWS and Azure. Here Cloud broker services integrates all three components and provides flexibility to choose services from multiple providers &lt;strong&gt;(Cloud platforms AWS and Azure)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Benefits: As unhealthy services become healthy again, traffic can be delivered, returning system responsiveness to maximum.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Challenges&lt;/strong&gt;: This architecture does not guarantee seamless failover. There will be downtime.&lt;/p&gt;

&lt;h2 id=&quot;multi-application-modernization&quot;&gt;Multi-Application Modernization&lt;/h2&gt;

&lt;p&gt;Different on-premise applications A1/A2, AC1 are re-architected as a portfolio and deployed on cloud environment.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/14/Multi-Application-Modernization.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Benefits: It provides consistent information and rules in shared components. Reduced operation and maintenance costs for shared components is another benefit.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Challenges&lt;/strong&gt;: Lack of business commitment to shared capabilities.&lt;/p&gt;

&lt;h2 id=&quot;multi-cloud-vs-hybrid-cloud&quot;&gt;Multi-cloud vs Hybrid cloud&lt;/h2&gt;
&lt;p&gt;On the first pass, both may appear same and these terms used interchangeably by some, but they are not the same. Here we’ve explained the differences, which are subtle but very distinct, between the two.&lt;/p&gt;

&lt;h3 id=&quot;hybrid-cloud&quot;&gt;Hybrid cloud&lt;/h3&gt;
&lt;p&gt;Hybrid cloud is a mix of public and private cloud that connects the public cloud such as AWS to your on-premise system and is orchestrated to perform together for a single task. In this scenario, you’re optimizing your workload so it runs in the right environment at the right time. Using Hybrid cloud, organizations can access highly elastic compute resources from the chosen provider, perhaps for managing and storing additional workloads at peak times and for general day to applications. But all the mission-critical stuff remains on-premise infrastructure for multiple reasons like privacy regulations and security.&lt;/p&gt;

&lt;p&gt;Why implement Hybrid cloud?&lt;/p&gt;

&lt;p&gt;For certain use cases, organizations require a combination of a private and public cloud to leverage unique benefits offered by them.&lt;/p&gt;

&lt;p&gt;Organizations can leverage cloudbusting, in which application workloads burst into the public cloud for additional compute resources after they reach a threshold level in private cloud.&lt;/p&gt;

&lt;p&gt;It makes sense for organizations to use public cloud resources for a new, untested application before embarking on the capital expenditure associated with launching in a private cloud. Once an organization defines a steady-state workload pipeline to run an application, it may choose to bring the application to on-premise systems.&lt;/p&gt;

&lt;p&gt;Moreover, cloud customers can use hybrid clouds to promote high availability (HA) and disaster recovery (DR). &lt;strong&gt;&lt;em&gt;For example, in a Disaster recovery scenario, an organization can keep its recovery environment in a public cloud and production environment in a private cloud, ready to spin up as necessary. The organization replicates data across to the public cloud, but all other resources remain non-operational until needed.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hybrid cloud architecture provides maximum agility for meeting the needs of the organizations by providing infrastructure where IT operations can be automated to improve the user experience.&lt;/p&gt;

&lt;h3 id=&quot;multi-cloud&quot;&gt;Multi-cloud&lt;/h3&gt;
&lt;p&gt;Multi-cloud represents more than 1 cloud deployment of the same type and it can be public or private cloud, sourced from different cloud providers. Business adopt Multi-cloud to mix and match a range of public and private clouds to use best of breed applications and services.&lt;/p&gt;

&lt;p&gt;Both Multi and Hybrid cloud approaches are not mutually exclusive: You can have both, simultaneously. In fact, Most organizations seek to improve security and performance through an expanded portfolio of environments.&lt;/p&gt;

&lt;p&gt;Just for the info, multi-cloud architecture is different from multi tenant architecture. Former we have already discussed, later refers to software architecture in which a single instance of software runs on a server and serves multiple tenants.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why implement Multi-cloud?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Different Multi-cloud use cases can be leveraged to offer IT teams increases flexibility and control over workloads and data.&lt;/p&gt;

&lt;p&gt;As multi-cloud offers flexible cloud environment, organizations can meet specific workload or application requirements- both technically and commercially- by adopting it.&lt;/p&gt;

&lt;p&gt;Organizations also see geographic advantages to using multiple cloud providers, to address app latency problems. Also, some companies may start using specific cloud providers for short time to achieve short-term goals and then stop using it.&lt;/p&gt;

&lt;p&gt;Additionally, vendor lock-in concerns and possible cloud provider outages are two issues that pop up frequently when IT leaders advocate for multi-cloud strategy.&lt;/p&gt;

&lt;h2 id=&quot;tips-for-managing-your-multi-cloud-environment&quot;&gt;Tips for Managing Your Multi-Cloud Environment&lt;/h2&gt;

&lt;p&gt;Multi-cloud environments come with their challenges—complexity, resources, expertise, cost, and management issues, to name a few—and management seems to be the common denominator.&lt;/p&gt;

&lt;p&gt;Consider this situation.&lt;/p&gt;

&lt;p&gt;You are running a workload that requires large pools of storage and networking resources on a private cloud. At the same time, you have another workload running on Amazon’s service and yet another on Microsoft’s. Each workload is running on the ideal cloud, but now you have multiple clouds to manage.&lt;/p&gt;

&lt;p&gt;How would you do that effectively?&lt;/p&gt;

&lt;p&gt;Here are 5 things to keep in mind when building an effective multi-cloud environment.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Analyze your entire network, and then identify which service of particular cloud provider is the best for your specific requirement, to avoid system complexity and poor utilization of resources.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Having multiple cloud providers increases low-level maintenance and monitoring tasks. It’s better to automate them.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Focus on policy standardisation that are applied automatically to each cloud environment. The policies cover such areas as data storage, workloads, traffic flows, virtual servers, compliance/ regulations, security and reporting.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Use integrated data center management system designed for virtual environments. It helps building system in which your server, network, storage, operations, security, and applications teams work according to common goals.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Identify the apps in your organization that are best suited for multi-cloud environment. Unlike traditional apps, cloud-native apps are flexible and service-oriented, comprised of collections of containers and services, based on a scale-out architecture. Also, these are easy to automate, move, and scale.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;benefits-of-multi-cloud-architecture&quot;&gt;Benefits of Multi-cloud Architecture&lt;/h3&gt;

&lt;h4 id=&quot;disaster-recovery&quot;&gt;Disaster recovery&lt;/h4&gt;
&lt;p&gt;It gets risky when an organization uses one cloud platform to manage all organisational resources. A cyber attack can take down all the operations for a long-time leaving end users inaccessible until it resolves. When you use multi-cloud architecture, it makes your company’s services resilient against these types of cyber attacks because there are other clouds available to take the workloads when one cloud goes down.&lt;/p&gt;

&lt;h5 id=&quot;avoiding-vendor-lock-in&quot;&gt;Avoiding vendor lock-in&lt;/h5&gt;
&lt;p&gt;The multi-cloud platform allows organizations to select the best services from every cloud platform, create custom infrastructure specific to their organizational goals. Rather than managing business processes to fit a specific provider’s setup and execution, businesses can explore different providers to find the best match for each part of business operations.&lt;/p&gt;

&lt;h4 id=&quot;data-management&quot;&gt;Data management&lt;/h4&gt;
&lt;p&gt;There are different data types generated in the organization. For example, some database requires cold storage which is not accessed regularly while hot data accessed 10 times a day and must be stored in frequently-accessed storage, e.g., AWS S3 standard storage. Rather than lump all your data into one cloud, you can diversify to take advantage of the right service for the right function.&lt;/p&gt;

&lt;h4 id=&quot;cloud-cost-optimization&quot;&gt;Cloud cost optimization&lt;/h4&gt;
&lt;p&gt;Before adopting the Multicloud strategy, you should do a performance analysis of your workloads that are either on-premises or already in the cloud and comparing that to what’s available in each cloud. As a result, you can identify the options that will meet your workload performance requirements at the cheapest cost. For example, You can save money by running spot instances for workloads designed to be fault tolerant, while running legacy workloads on reserved instances.&lt;/p&gt;

&lt;h4 id=&quot;low-latency&quot;&gt;Low latency&lt;/h4&gt;
&lt;p&gt;When application users are distributed worldwide and data transfer is done from single data center, lots of users will experience slow response time. There will delays when data traffic has to travel across several nodes before reaching end-users. This delay, called latency is inherent in cloud services delivered from servers at distant locations.&lt;/p&gt;

&lt;p&gt;In a multi-cloud environment, cloud architects can deploy data centers to multiple regions according to user locations. The datacenter closest to end-users can serve the requested data with minimum server hops. This capability is especially useful for global organizations that need to serve data across geographically disparate locations while maintaining a unified end-user experience.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Multi-Cloud architecture provides an environment where businesses can build secure and powerful cloud environments outside the traditional infrastructure. Maximizing the impact of multi-cloud, however, means tackling the challenges of app sprawl, unique portals, compliance, migration and security head-on. The main goal multi-cloud strategy is to use as many clouds as per requirements to address the limitations of using one cloud from a single provider. Though toggling between cloud providers to perform tasks can be complicated, especially right out of the gate, cloud service providers are working to make toggling between clouds increasingly efficient. The more efficient it becomes; the more multi-cloud computing will evolve.&lt;/p&gt;</content><author><name>Girish Godage</name></author><category term="learning" /><summary type="html">6 Multi-Cloud Architecture Designs for an Effective Cloud Strategy</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/img/aws_cloud.png" /></entry><entry><title type="html">How to Choose the Right Cloud Deployment Model for your Application?</title><link href="http://localhost:4000/blog/cloud-deployment-models-vm-iaas-containers-serverless" rel="alternate" type="text/html" title="How to Choose the Right Cloud Deployment Model for your Application?" /><published>2020-01-25T11:41:00+00:00</published><updated>2020-01-25T11:41:00+00:00</updated><id>http://localhost:4000/blog/cloud-deployment-models-vm-iaas-containers-serverless</id><content type="html" xml:base="http://localhost:4000/blog/cloud-deployment-models-vm-iaas-containers-serverless">&lt;h2 id=&quot;how-to-choose-the-right-cloud-deployment-model-for-your-application&quot;&gt;How to Choose the Right Cloud Deployment Model for your Application?&lt;/h2&gt;

&lt;p&gt;Understand and analyze different Cloud Deployment Models: public, private, hybrid and community. Select the perfect Cloud Deployment Models based on your App Architecture: VMs vs IaaS vs Containers vs Serverless. Read more to find out their performance &amp;amp; potential use cases.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/17/cover-image4.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When companies talk about moving to the cloud, it is a general assumption that they are bringing their on-premise workload to the public cloud and not switching clouds. However, GitLab, a startup famous for providing developers tools, announced earlier this year that they are abandoning Microsoft Azure and moving to Google Cloud Platform, as mentioned in the official GitLab statement.&lt;/p&gt;

&lt;p&gt;This step took place because GitLab wanted to adopt cloud-native practices with the best use of microservices and containers. The same approach used by GitLab is becoming a critical factor for modern software development. Also, Kubernetes turned out their preferable choice since it allows elastic scaling from a couple of users to millions.&lt;/p&gt;

&lt;p&gt;GitLab is just not one example! There are many organizations who switch their cloud deployment models amid the requirements demanded by the modern application users.&lt;/p&gt;

&lt;p&gt;You could be also one of the people who is reconsidering their public cloud choices. Maybe because your needs have changed? Or you could be one wondering to re-architect an application? The possibilities are endless.&lt;/p&gt;

&lt;p&gt;If you are one of those people, this blog is about you. There are many considerations which need to be overlooked when you’re deciding the architecture, technology and cloud deployment models for your application.&lt;/p&gt;

&lt;p&gt;Before we move further, let’s discuss the four basic cloud deployment models:&lt;/p&gt;

&lt;h2 id=&quot;what-are-cloud-deployment-models&quot;&gt;What are Cloud Deployment Models?&lt;/h2&gt;

&lt;p&gt;Cloud Deployment models are a particular type of cloud environments. They are basically classified based on access, proprietorship and size of the environment. There are four types of cloud deployment models:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Public Cloud Deployment Model&lt;/li&gt;
  &lt;li&gt;Private Cloud Deployment Model&lt;/li&gt;
  &lt;li&gt;Hybrid Cloud Deployment Model&lt;/li&gt;
  &lt;li&gt;Community Cloud Deployment Model&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are many cloud deployment models, each one with their own specifications, benefits and trade-offs for the people who are reconsidering their options. Since each one should be used for the different set of requirements, it is highly critical for you to have a clear understanding of your options. Let’s discuss all of them.&lt;/p&gt;

&lt;h3 id=&quot;1-public-cloud-deployment-model&quot;&gt;#1. Public Cloud Deployment Model&lt;/h3&gt;
&lt;p&gt;This is the type of cloud deployment model in which the infrastructure is open for anybody to use. This has a distinct benefit of being more secure than transferring information via the Internet. This also costs less than the private cloud deployment model since the services are more commoditized. This is used by businesses which require on-demand scaling, for example, social networking, CRM, storage, etc.&lt;/p&gt;

&lt;h3 id=&quot;2-private-cloud-deployment-model&quot;&gt;#2. Private Cloud Deployment Model&lt;/h3&gt;
&lt;p&gt;This is a type of cloud deployment model in which the infrastructure is provisioned exclusively for a single company which may or may not include consumption through multiple business units.&lt;/p&gt;

&lt;p&gt;It can be either on or off premises. This type of cloud deployment model is incorporated when sensitive or mission-critical information is involved. This allows for higher security, reliability and performance. This is mostly incorporated by governments and scientific laboratories.&lt;/p&gt;

&lt;h3 id=&quot;3-hybrid-cloud-deployment-model&quot;&gt;#3. Hybrid Cloud Deployment Model&lt;/h3&gt;
&lt;p&gt;This consists of two or more than two cloud deployment models. All these models are unique but are bound by certain standard protocols. There are very few companies which have the ability to switch over all of their technology stacks to the cloud in one go.&lt;/p&gt;

&lt;p&gt;For such companies, a hybrid cloud deployment model provides a smooth transition with the mix of on-premise and cloud options. NASA uses a hybrid cloud deployment model. &lt;strong&gt;&lt;em&gt;For example, Nebula, an open-source cloud computing project employs a private cloud for research and development purposes while uses the public cloud to share datasets with the external public and partners.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-community-cloud-deployment-model&quot;&gt;#4. Community Cloud Deployment Model&lt;/h3&gt;
&lt;p&gt;This is a type of a cloud deployment model in which the cloud hosting is shared between many companies provided that they are operating within the same domain, for example, banking, government, educational institution, etc.&lt;/p&gt;

&lt;p&gt;In other words, a group of several companies share a multi-tenant setup where they have the same privacy, security and performance concerns. This is used by businesses in joint ventures and research firms that require centralized cloud computing systems.&lt;/p&gt;

&lt;p&gt;This was to give you a basic idea of the cloud deployment options that are available to you. But selecting the right one for your business is a tricky subject. Foremost of them, it highly depends on your application architecture. Especially when there are multiple viable and noble options depending upon whether you’re a well-established organization with million users or you’re a startup who are trying to build their MVP.&lt;/p&gt;

&lt;p&gt;In this blog, we are going to discuss that! Which architecture you should opt for? What are the possible cloud deployment models available? What are the pros and cons? Let’s figure out.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/17/4-1.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Considering the above flowchart, I assume you have got a better idea about which cloud deployment model you want to use. However, we will discuss each of the points in detail in the following section.&lt;/p&gt;

&lt;h2 id=&quot;1-right-way-monolithic--stateful-architecture&quot;&gt;#1. Right Way: Monolithic &amp;amp; Stateful Architecture&lt;/h2&gt;
&lt;p&gt;Before starting, we assume that you already have a functional app. If not, #2 would be appropriate for you to get started.&lt;/p&gt;

&lt;p&gt;The first aspect that we will be evaluating is whether you want to keep the application monolithic and stateful.&lt;/p&gt;

&lt;p&gt;Monoliths will require you to compose all of your application within a single piece. It is designed to be served as a self-contained. Different components of the program are interdependent and interconnected to each other.&lt;/p&gt;

&lt;p&gt;If any program is to be updated, the whole application has to be rewritten.&lt;/p&gt;

&lt;p&gt;However, monoliths have their own benefits. They have better throughput than other architectural patterns. These are also easier to test and debug.&lt;/p&gt;

&lt;p&gt;After all these considerations, do you want to keep your architecture monolithic? Are these benefits tops on the list of your application priority? This leads us to our next point.&lt;/p&gt;

&lt;p&gt;In case, if you already have an application and want to re-architect the app, may be opting for updated architectural patterns would be the best solution.&lt;/p&gt;

&lt;h2 id=&quot;2-when-re-architecting-is-not-an-option&quot;&gt;#2. When Re-architecting is Not an Option&lt;/h2&gt;
&lt;p&gt;In this section, we will discuss two types of cases. Firstly, what option do you have available if you are not ready to re-architect the app? Secondly, what if you are getting started from scratch?&lt;/p&gt;

&lt;p&gt;To discuss the second case, we assume that the application’s first build would be a minimum viable product (MVP). Thus your goal would be to produce an efficient application with faster time to market. In this case, a monolith architecture will be suitable.&lt;/p&gt;

&lt;p&gt;Another consideration is feature changes. Sometimes, you’ll be at a place where you’ve bootstrapped an app with well-written specifications and abruptly, there’s a change in one of the specs. This is easy with monolithic.&lt;/p&gt;

&lt;p&gt;Here is an interesting image by Martin Fowler which states why going directly to microservices is a dangerous thing:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/17/path.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Coming to the case where you don’t want to re-architect the app, opting for a service-oriented architecture would be a better solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Mark Richards in his book Microservices vs Service Oriented Architecture suggests that SOA is better suited for comparatively large, enterprise-wide systems that require integration with many heterogeneous applications and services.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-publicprivate-cloud-options-vms-vs-iaas&quot;&gt;#3. Public/Private Cloud Options: VMs vs IaaS&lt;/h2&gt;

&lt;p&gt;Public clouds are the most common way of deploying your applications since everything is owned and operated by third-party service providers.&lt;/p&gt;

&lt;p&gt;Or maybe if you want to increase your current capacity without much investment, IaaS provides you with the on-demand services. Saying this, it is ideal for a small startup of a mid-sized business.&lt;/p&gt;

&lt;p&gt;Another reason being there are no upfront costs to get yourself started and you pay for what your use. Resources are available on-demand to meet your business needs. Some of the IaaS providers are &lt;strong&gt;AWS, DigitalOcean, Microsoft Azure, Rackspace Open Cloud, Alibaba Cloud, Google Compute Engine, etc.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you do not want to opt for public cloud offerings, VMs could be a probable solution for you. They are suitable if latency is a key factor in your application.&lt;/p&gt;

&lt;p&gt;Some of the prominent VMs providers are RedHat, Oracle, VMWare and many more.&lt;/p&gt;

&lt;h2 id=&quot;4-analyzing-requirements-of-event-driven-architecture&quot;&gt;#4. Analyzing Requirements of Event-driven Architecture&lt;/h2&gt;
&lt;p&gt;An event-driven architecture is a development technique where your architecture orchestration will revolve around the production, detection and consumption of events along with the responses they evoke. It works on the principle of event publisher/subscriber and with an event manager which is a middleman between both.&lt;/p&gt;

&lt;p&gt;A few questions to ask before you consider opting for event-driven architecture:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;em&gt;Is your current app a small and usable building block? Can it be broken down into small blocks any further?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;The outputs and inputs of all the blocks are well-defined?&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;em&gt;Would you be able to use current development and build tools?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;Does the serverless platform you’re opting for supports the following:&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;#1.&lt;/strong&gt; Receiving and sending connections from the current APIs/clients?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#2.&lt;/strong&gt; Interacting with the current database?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#3.&lt;/strong&gt; Languages you’ve hands-on experience with?&lt;/p&gt;

&lt;p&gt;If you think event-driven architecture is your potential option, you may go for &lt;strong&gt;microservices or serverless deployment options&lt;/strong&gt; about which we will discuss in the next section. If no, modular/microservices are better-suited options for you? Let’s find out.&lt;/p&gt;

&lt;h2 id=&quot;5-faas-deployment-options-public-vs-private&quot;&gt;#5. FaaS Deployment Options: Public vs Private&lt;/h2&gt;
&lt;p&gt;Now that you’ve decided to opt for event-driven architecture. There are many serverless providers which offer functions-as-a-service on pay-per-use billing model. Or you can also opt for open source options to use at your on-premise data-centres.&lt;/p&gt;

&lt;p&gt;FaaS has its own benefits like easy integration, no resource management, extremely inexpensive (based on your usage though) and on-demand scalability. Some of the major FaaS providers are &lt;strong&gt;AWS Lambda, Azure Functions, Cloud Functions, IBM Cloud, Nano Lambda, Syncano, Twilio and many more.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;However, if you deploy functions on your on-premise data centres, you have the freedom of unlimited runtime and no cold start issues. &lt;strong&gt;&lt;em&gt;Here are some of your options: Apache OpenWhisk, Oracle Fn Project, Kubeless, OpenFaas, Nuclio and many more. For more information on open source serverless options, visit here: Today in Serverless &amp;amp; Open Source&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before you opt for either of the cloud deployment model: public or private cloud, I’d suggest having a basic understanding of how vendor lock-in can affect your choices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;For example, if you’ve got a common standard then you have multiple vendors to choose from. If you’re self-hosting and can run on any x64 box then it doesn’t matter if HP (say) decides they want to increase the price of their servers, you just buy them from somewhere else&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you’ve got a rack of servers in a managed datacenter you can put them in a truck and move them to another rack at a competitor (the rack fittings are standard). If you’re running basic VM images and AWS prices rise then you can take those same images to Azure.&lt;/p&gt;

&lt;p&gt;But there’s not yet anything like that for lambda: code that uses lambda only runs on AWS because there’s no common standard for the serverless/lambda interface, each cloud provider has their own way of doing it.&lt;/p&gt;

&lt;h2 id=&quot;6-modular-services--microservices&quot;&gt;#6. Modular Services &amp;amp; Microservices&lt;/h2&gt;
&lt;p&gt;Microservice architecture is a distinct method of developing the software/apps wherein organizations who want to work into an agile environment and move towards DevOps and continuous testing.&lt;/p&gt;

&lt;p&gt;This allows you to create scalable solutions. It enables you to deliver new features into their live production systems multiple times a day, as well as to support web-scale traffic volumes. This is one of the major reasons why tech giants like &lt;strong&gt;Netflix, eBay, Amazon, Twitter, PayPal and many others work upon this.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hence, here are the 5 point roadmap you need to answer to analyze whether you’re microservice ready or not?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Determine whether your team is mature enough to adopt microservices. Whether or not you have a strong and disciplined architectural practice.&lt;/li&gt;
  &lt;li&gt;Do you have a mature agile and DevOps practice? Is your data management team supporting it?&lt;/li&gt;
  &lt;li&gt;If yes, take the process slowly. Initially, use the microservices only for the part where you need it, for examples, in applications with scalability and web-scale agility requirements.&lt;/li&gt;
  &lt;li&gt;What will be your deployment environments? About which we will talk further. However, you will need to supplement it with capabilities such as API gateways, service discovery, monitoring and telemetry, build and test automation, messaging and data persistence.&lt;/li&gt;
  &lt;li&gt;If your team isn’t ready to adopt the microservices architecture in its entirely, consider using modular services to gain relevant experience and significantly agility benefits.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Modular services, on the other hand, are loosely coupled arrangement of objects. This has no specific architecture like SOA, however, do not have the granularity as much as microservices. All the objects are defined according to business capabilities. All these objects interact with each other through the well-defined common interface.&lt;/p&gt;

&lt;p&gt;If this sounds good for you, let’s analyze this aspect with little more considerations in the next section.&lt;/p&gt;

&lt;h2 id=&quot;7-microservices-deployment-containers--orchestration&quot;&gt;#7. Microservices Deployment: Containers &amp;amp; Orchestration&lt;/h2&gt;
&lt;p&gt;The most adapted cloud deployment model for microservices architecture is containers. Containers help you in having a focused business scope to meet agility in the development and delivery of services.&lt;/p&gt;

&lt;p&gt;If you want to use containers on your on-premise data centre or your private cloud, your options include OpenShift Container Platform, Pivotal Container Service or other Kubernetes based platforms.&lt;/p&gt;

&lt;p&gt;On the other hand, if you’re ready to use the public cloud, your container management options include AWS Fargate, Azure Container Instances, Google App Engine Flex, OpenShift Online, etc. These are simplified container management options at a lower cost but with a loss of control. If you need high control over your container management, your options include Amazon EKS, Google GKS and Azure AKS.&lt;/p&gt;

&lt;p&gt;Nevertheless, in the below section, we will have a walk through what technology can be used under what prerequisites and where.&lt;/p&gt;

&lt;h2 id=&quot;when-to-use-vms&quot;&gt;When to use VMs?&lt;/h2&gt;
&lt;p&gt;VMs are the heart of cloud computing. Significant adoption of virtualization has led to major changes in the processor architecture. Let’s discuss some of the scenarios where you should be using VMs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;High Security: With no added alterations, virtual machines provide greater security than other cloud deployment models. The major advantage here is that it has isolated hardware. On the other side, containers have shared kernel resources and application libraries. That says if security is an adamant prerequisite for you, VMs would be the best solution.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Disaster Recovery: Major benefit of VM is the low turnaround time for site recovery and high availability. Although physical infrastructure also offers these capabilities, however, virtualization offers a wide range of options.&lt;/li&gt;
  &lt;li&gt;Portable Environments: VMs are basically self-contained packages which are transferable. Virtualization offers you the ability to easily move from one server to another. This is highly critical when you want to balance the workload.&lt;/li&gt;
  &lt;li&gt;Testing Environment: VMs offers multiple test environments. With VMs you can try different operating systems or may just different versions of a single operating system rather than having different computers for each one of them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;when-to-use-iaas&quot;&gt;When to use IaaS?&lt;/h2&gt;
&lt;p&gt;IaaS in other sense is a virtual data centre. It can be used for a variety of purposes. You can install and make use of the operating system you like.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Temporary Workload&lt;/strong&gt;: &lt;em&gt;Unlike VMs, servers, storage, network resources and data centre is managed by the service providers. This makes IaaS a perfect option to opt for in cases where you want to deal with the temporary workload (say, during Christmas or Black Friday Sale) without much of a hassle. This lets you extend your data centre capabilities.&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Data analysis:&lt;/strong&gt; &lt;em&gt;To perform a huge analysis of the data, large computing power is required. IaaS provides you with the option to buy that computing power on demand in the most economical way. There are plenty of organizations using IaaS for data analysis and mining purposes be it for structured data or unstructured.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Networking Services:&lt;/strong&gt; &lt;em&gt;IaaS provides you to expand your networking services whenever the complexity grows. This could be for a short-term big data project or to support the ongoing services. This can free up internal IT staff for other priorities.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;High Scalability:&lt;/strong&gt; &lt;em&gt;Instead of investing upfront in purchasing the hardware, IaaS provides you with the virtualized computing resources. This lets you scale your workloads as you move forward on the pay-for-use model.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;when-to-use-containers&quot;&gt;When to use Containers?&lt;/h2&gt;

&lt;p&gt;If you are a mid-sized company and wants to run an application without the need for virtual machines, containers are for you. Operating through multiple operating systems can be a tedious task, containers let you run everything on a single host with access to the single kernel.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Single OS:&lt;/strong&gt; &lt;em&gt;If you want to make use of an operating system of your own choice and want full control over your runtime language and version, containers work for you. Containers are great to start with when you want to run your software with specific version requirements.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;High Agility:&lt;/strong&gt; &lt;em&gt;Containers are comparatively faster than virtual machines because they have less overhead. This makes the development teams move fast, deploy software efficiently and operate at an unprecedented scale.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Isolated &amp;amp; consistent environment:&lt;/strong&gt; &lt;em&gt;Containers provide a predictable environment to the development teams which are isolated from the other applications. These can also include software libraries, programming language runtimes and software dependencies with itself.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;High Portability:&lt;/strong&gt; &lt;em&gt;Containers can run anywhere you want which includes operating systems like Linux, Windows and Mac. On VMs or bare metal, in data centres on-premise or cloud and, of course, on the developer’s machine. This provides a highly portable environment for you to run your software.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;It’s kind of embarrassing when you’re the premiere cloud infrastructure vendor in the world and you can’t keep up with demand on your own major shopping day, when scaling on demand is, you know one of the primary benefits of IaaS.
— Ron Miller (@ron_miller) July 18, 2018&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let’s understand more from the example of Github moving to Container Orchestration Framework: As the number of services they ran increased, the SRE team began supporting similar configurations for dozens of other applications, increasing the percentage of our time we spent on server maintenance, provisioning, and other work not directly related to improving the overall GitHub experience.&lt;/p&gt;

&lt;p&gt;New services took days, weeks, or months to deploy depending on their complexity and the SRE team’s availability. Over time, it became clear that this approach did not provide our engineers with the flexibility they needed to continue building a world-class service.&lt;/p&gt;

&lt;p&gt;Their engineers needed a cloud deployment model which acts as a self-service platform they could use to experiment, deploy, and scale new services. Thee also needed that same platform to fit the needs of their core Ruby on Rails application so that engineers and/or robots could respond to changes in demand by allocating additional compute resources in seconds instead of hours, days, or longer.&lt;/p&gt;

&lt;h2 id=&quot;when-to-use-serverless&quot;&gt;When to use Serverless?&lt;/h2&gt;

&lt;p&gt;If you’re a company already using microservices and want to take advantage of the event-driven architecture, serverless is your option. This is especially true when you’re dealing with unpredictable traffic, releasing quicker updates and anything in between.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Variable and irregular workloads: For example, a website which doesn’t get much or any traffic during the nights. Since you’re required to pay only for the time your code runs, this is a potential cost optimizer.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Critical developer productivity: If you do not have the example in either Serverless or Containers, serverless would be a far better option for you to ship your Hello World application. However, if you want to run a complex application, a container-based application is a better option. When you use containers, you will have to create a cluster, configure your orchestration framework and then deploy the first container. On the other hand, serverless platforms use web CLI provided by the cloud provider to get started in minutes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In-built auto-scalability: The greatest benefit of serverless is its auto-scalability. If you’re a developer you probably don’t want to manage anything. FaaS providers manage everything for you and provide seamless auto-scalability.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Frequent updates: Serverless doesn’t require you to upload your code to the servers or do any backend configuration in order to release a working version of an application. This lets you release quicker releases on your product. You can either upload code all at once or a function at a time since your application isn’t a monolithic stack but rather a collection of functions provisioned by the vendor.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;take-away&quot;&gt;Take Away!&lt;/h2&gt;
&lt;p&gt;While you evaluate your cloud deployment model, it is critical to consider your application architecture as well. If you haven’t already upgraded your application architecture and respective cloud deployment model, it’s likely just a matter of time before you do.&lt;/p&gt;

&lt;p&gt;Choosing the best possible deployment options for your business is vital to your company’s success, meaning you need to fully understand all the advantages and disadvantages of various options to make the right choice.&lt;/p&gt;</content><author><name>Girish Godage</name></author><category term="learning" /><summary type="html">How to Choose the Right Cloud Deployment Model for your Application?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/img/aws_cloud.png" /></entry><entry><title type="html">AWS Lambda vs EC2- Comparison of AWS Compute Resources</title><link href="http://localhost:4000/blog/aws-lambda-vs-ec2" rel="alternate" type="text/html" title="AWS Lambda vs EC2- Comparison of AWS Compute Resources" /><published>2020-01-25T10:41:00+00:00</published><updated>2020-01-25T10:41:00+00:00</updated><id>http://localhost:4000/blog/aws-lambda-vs-ec2</id><content type="html" xml:base="http://localhost:4000/blog/aws-lambda-vs-ec2">&lt;h2 id=&quot;aws-lambda-vs-ec2--comparison-of-aws-compute-resources&quot;&gt;AWS Lambda vs EC2- Comparison of AWS Compute Resources&lt;/h2&gt;

&lt;p&gt;Compare two of the widely used compute resources in software development: &lt;strong&gt;AWS Lambda&lt;/strong&gt; vs &lt;strong&gt;EC2&lt;/strong&gt;. Understand and analyze infrastructure management, performance and cost comparison. Get to know the evolution of AWS computing resources from EC2 to AWS Lambda and their potential use cases.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/13/Add-subheading-5-4.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cloud Foundry Foundation, a non-profit organisation that overlooks the open-source cloud computing projects, conducted a global survey recently consisting of 550 users. The survey results made it evident that 31% which is 169 of them are already using serverless architecture.&lt;/p&gt;

&lt;p&gt;When further asked which platform they are using, 77% said AWS Lambda. FaaS services like AWS Lambda are becoming popular since they enable an organisation to build agile and scalable applications than server-based applications, for example, EC2.&lt;/p&gt;

&lt;p&gt;EC2 requires management and provisioning of the environment. Each EC2 instances runs not just a full copy of an operating system, but a virtual copy of all the hardware that the operating system needs to run. In contrast, what AWS Lambda requires is enough system resources and dependencies to run a specific program.&lt;/p&gt;

&lt;p&gt;Also, AWS Lambda enables you to create portable code blocks for easy development, testing and deployment. That’s a winning trifecta!&lt;/p&gt;

&lt;p&gt;If that’s all there was to AWS Lambda vs EC2 then I’d be writing a death note for EC2. But, there’s a lot more to it than just serverless-less/full. Let’s discover.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;What is AWS Lambda?&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;What is EC2?&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;An evolution: From EC2 to AWS Lambda&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AWS Lambda vs EC2: Infrastructure Management&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AWS Lambda vs EC2: Performance Comparison&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AWS Lambda vs EC2: Cost Comparison&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Use cases: When to use AWS Lambda?&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Use cases: When to use EC2?&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-is-aws-lambda&quot;&gt;What is AWS Lambda?&lt;/h2&gt;

&lt;p&gt;AWS Lambda is an on-demand cloud computing resource offered in terms of function-as-a-service by AWS. Over time, AWS Lambda has changed the way we used to create, architect and run our applications.&lt;/p&gt;

&lt;p&gt;The main difference between AWS Lambda vs EC2 (virtual server-based resources) is the responsibility of provisioning and use cases to name a few. AWS Lambda pricing is one of the biggest factors as well.&lt;/p&gt;

&lt;p&gt;Before the emergence of agile solutions like AWS Lambda, operations teams had to allocate the resources based on the forecasting. They had to make sure that the computer and memory demands don’t overflow the limits their system can handle.&lt;/p&gt;

&lt;p&gt;With the computing resources like AWS Lambda, the computing resources can scale and descends automatically based on real-time demands. Presently, AWS Lambda supports multiple languages and can be used within an application in multiple manner or back-end as a service.&lt;/p&gt;

&lt;p&gt;The architecture of applications built using functions like AWS Lambda is popularly called serverless architecture. AWS Lambda is a splendid example of how the overhead of the operation team is going to be a distant memory.&lt;/p&gt;

&lt;h2 id=&quot;what-is-ec2&quot;&gt;What is EC2?&lt;/h2&gt;
&lt;p&gt;Amazon Elastic Compute Cloud (EC2) is a virtual cloud infrastructure service offered by AWS. This provides on-demand computing resources through which you can create powerful servers in the cloud.&lt;/p&gt;

&lt;p&gt;The entire hardware of EC2 is fragmented into multiple resources which are offered in the form of instances which are scalable in terms of computing memory and processing power.&lt;/p&gt;

&lt;p&gt;It also provides you with the flexible options to host your application onto more than one platforms with tight security for multi-model multi-tenant architecture. These instances can be accessed by the HTTP or HTTPS (API) which lets developers create applications just like an on-premise infrastructure.&lt;/p&gt;

&lt;p&gt;With Amazon EC2, you have the facility of provisioning virtual machines as per your applications’ requirements. Such facility is provided on a utility based subscription model where the user is billed as per their consumption of resources.&lt;/p&gt;

&lt;h2 id=&quot;an-evolution-from-ec2-to-aws-lambda&quot;&gt;An Evolution: From EC2 to AWS Lambda&lt;/h2&gt;
&lt;p&gt;With the onset of &lt;strong&gt;&lt;em&gt;EC2&lt;/em&gt;&lt;/strong&gt; as IaaS, AWS wanted to remove the overhead of managing the infrastructure. With the EC2, the time to allocate a server reduced to a fraction along with features like automatic scaling, scheduled provisioning and monitoring &amp;amp; alerting system powered by CloudWatch.&lt;/p&gt;

&lt;p&gt;When EC2 was launched, it prevailed with the far more volatile environment than what it is now. Some of the initial issues were the sudden outage, multi-tenant model per machine, failure in scheduled provisioning and disappearance of virtual machines at all. Some of the popular sites that have been affected due to this are Reddit, Foursquare, Rapportive and Heroku.&lt;/p&gt;

&lt;p&gt;Then came &lt;strong&gt;&lt;em&gt;Elastic Beanstalk (EB)&lt;/em&gt;&lt;/strong&gt;, which provided all these facilities in a pretty package. EB is available to work with multiple languages and frameworks. With EB, developers can easily upload their code to the virtual machine itself through the AWS console.&lt;/p&gt;

&lt;p&gt;Apart from that, EB directly spins up EC2 instances for you while automatically balancing the load and giving you the direct endpoint to use at the end. Even with this, developers can still log into the AWS console and manually configure or tweak the allocation of instances.&lt;/p&gt;

&lt;p&gt;With the launch of IaaS, infrastructure management has been removed. It has benefited tremendously to the number of organisations. However, many of the promised advantages have not been fulfilled yet. &lt;strong&gt;&lt;em&gt;For example, provisioning and capacity planning is still a major issue based on the manual forecast. To get ahead of this, FaaS was launched.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon released &lt;strong&gt;AWS Lambda&lt;/strong&gt; which is available to work with multiple languages and frameworks. Like Elastic Beanstalk, you can upload your code packages directly to your functions. Unlike Elastic Beanstalk, the infrastructure is not available entirely for the development teams to tweak or manage.&lt;/p&gt;

&lt;p&gt;However, the &lt;strong&gt;scaling is fully automatic as per the requirements. As said, Lambdas use ECS and these containers are not available to configure manually&lt;/strong&gt;. On the other hand, Lambdas are exposed through API Gateway which functions as a URL router to your Lambdas.&lt;/p&gt;

&lt;h2 id=&quot;aws-lambda-vs-ec2-infrastructure-management&quot;&gt;AWS Lambda vs EC2: Infrastructure Management&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;setup--management-environment&quot;&gt;Setup &amp;amp; Management Environment&lt;/h3&gt;

    &lt;p&gt;&lt;strong&gt;AWS Lambda:&lt;/strong&gt; Whether you need to set up a multiple or single environment, you do not need to do much of a work. You are not required to spin up or provision containers or make them available for your applications, scaling is fully automated.&lt;/p&gt;

    &lt;p&gt;AWS Lambda might not appeal to someone already working with an on-demand development environment with containers and orchestration in place.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Amazon EC2:&lt;/strong&gt; With EC2, setting up includes logging in via SSH and manually installing Apache and doing a git clone. Along with that, you need to install and configure all the required software in a manner which is automated and reproducible.&lt;/p&gt;

    &lt;p&gt;For EC2, instances come in two options, first are standards ones which serve data roughly the same as our desktop hard drive and second, advanced provisioning which will serve data much faster. Comparatively, this is a lot of work.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;security&quot;&gt;Security&lt;/h3&gt;
    &lt;p&gt;&lt;strong&gt;AWS Lambda:&lt;/strong&gt; Serverless architecture abstracts away the patching and OS update manual work. With Lambda, you have the higher flexibility of workflows but at the same time, it increases the surface attack. What you need to consider is how to secure communication happening inside and outside your application.&lt;/p&gt;

    &lt;p&gt;Another thing is that the granularity of functions is really high. With an increasing number of functions, monitoring becomes hard which in turn is a threat to decaying functions.&lt;/p&gt;

    &lt;p&gt;However, vulnerability breaches are less likely to happen considering the stateless characteristic of the functions. Malicious agents grow over the time which isn’t possible considering the statelessness. More to that, functions are automatically scalable which gives good protection against DDOS attacks. The protection is facilitated by auto-scaling functionality but it also increases your bill.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Amazon EC2:&lt;/strong&gt; With EC2, you’ll have to take care of the security layer at the instance level. Security layer decides and controls the traffic allowed to communicate with each instance. Each instance can have multiple security layers which dictates the allowed inbound traffic through certain protocols like TCP, UDP, ICMP, etc.&lt;/p&gt;

    &lt;p&gt;Creating policies which will have correct permissions is tiresome and a work of trial and error. This is especially true when you’re working with a growing team. Handling permissions for every specific business needs mean changing policies often and you end up increasing the unwanted granularity.&lt;/p&gt;

    &lt;p&gt;Meanwhile, with Lambda, this is entirely taken care of by AWS along with OS patches and system maintenance.&lt;/p&gt;

    &lt;p&gt;If we consider DDOS attacks, you’ll either have to opt for other services of AWS Shield or you can do it manually by using ELB to scale under the attack or limiting the rate of requests/minute from a particular id. EC2 definitely have security groups and firewalls but unfortunately, those are not enough to monitor resource-based traffic monitoring.&lt;/p&gt;

    &lt;p&gt;AWS Shield helps in automatically detect the type of AWS resource behind the elastic IP address and apply the relevant DDOS protections.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;aws-lambda-vs-ec2-performance-comparison&quot;&gt;AWS Lambda vs EC2: Performance Comparison&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;timeout&quot;&gt;Timeout&lt;/h3&gt;
    &lt;p&gt;&lt;strong&gt;AWS Lambda:&lt;/strong&gt; As per the official documentation, AWS Lambda has the timeout of 300 seconds. This limits the type of tasks lambda can deal with. Long-running functions and complex tasks aren’t a good fit.&lt;/p&gt;

    &lt;p&gt;Another problem is the time limit imposed by the API Gateway for the function to invoke which presently is 30 seconds. Even if you manage to architect a solution which handles timeout sufficiently, you’ll have to constantly monitor and debug the issues when they inevitable happens.&lt;/p&gt;

    &lt;p&gt;Not all timeouts occur due to the 300 seconds limit. Some occur due to the bugs introduced or when you’re dealing with communication over external servers which takes too much time or answers the functions with the wrong data.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Amazon EC2:&lt;/strong&gt; In comparison to AWS Lambda vs EC2, the later one have pretty flexible options. You can definitely work with long running tasks since instances are available for different types of requirements with different configurations. This makes EC2 a better option over Lambda.&lt;/p&gt;

    &lt;p&gt;However, EC2 service is not error free. Connection timeout is an issue due to overlapping security group rules and unidentified user key by the server. Another common error happens when you’re dealing with an insecure network over SSH.&lt;/p&gt;

    &lt;p&gt;This is especially applicable for newly created instances. &lt;em&gt;For example, if you will try to SSH your new instance without waiting for its status checks to get complete, you will get an SSH timeout error. However, Lambda clearly lags while dealing with complex processing over EC2.&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;dependencies&quot;&gt;Dependencies&lt;/h3&gt;
    &lt;p&gt;&lt;strong&gt;AWS Lambda:&lt;/strong&gt; External libraries are inevitable for any project and it is true for AWS Lambda too. When you’re dealing with heavy processing functions like image processing, video conversion, you’re bound to have dependencies for the application.&lt;/p&gt;

    &lt;p&gt;However, Lambda comes with a limit. Uploading your function dependencies with the package itself seems to be the logical solution. But Lambda has a package size limit of 50 MB. Although, it gives you the option of downloading the dependencies once your function is executed from its “/tmp” file storage.&lt;/p&gt;

    &lt;p&gt;More to that, “/tmp” file storage has a limit of 512 MB. Also, the higher the number of dependencies, more time will be required to execute the function successfully.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Amazon EC2:&lt;/strong&gt; Managing dependencies in EC2 isn’t a big problem since it doesn’t have constraints when it comes to temporary storage. Though what you should consider is the size of software packages and corresponding instance CPU. This is because your CPU may undergo burden if it’s not configured for the same.&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;For example, the base of Amazon Linux Containers is already preloaded with many software packages that are required for executing the basic functionalities.&lt;/em&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;scalability&quot;&gt;Scalability&lt;/h3&gt;
    &lt;p&gt;&lt;strong&gt;AWS Lambda:&lt;/strong&gt; Scalability is one of the major benefits of Lambda as most of the part is automatic and is handles by AWS. It scales dynamically in response to the increased traffic. At the time of the surge, it increases the number of concurrent executing functions. The number of concurrent limits is set to 500 as of now.&lt;/p&gt;

    &lt;p&gt;But scaling isn’t as flawless as it is portrayed. In practical cases, we’ve faced errors during the creation of new Lambda functions. It is definitely great to have an automatic scaling system but it isn’t much fun when you can’t address these errors and work upon it.&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;For example, API Gateway timeout to invoke a lambda function is 30 seconds. And when you violate this limit, you’ll see a spike in 5XX error being returned from API Gateway. The only option you have is to retry the request until you succeed.&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;Another example, Lambda depends on Amazon EC2 to provide Elastic Network Interface for your VPC-enabled Lambda function. And hence, your function’s scalability also depends on EC2’s rate limits as they scale. You need to check whether your VPC-enables functions are allowed 500 concurrent invocations per minute or not.&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Amazon EC2:&lt;/strong&gt; With EC2, everything is under your control. Everything in control means you will have to manually configure the scalability features unlike Lambda and that might not be the novel idea. However, the positive side is you can make your scalability an error-free process. Also, EC2 Auto Scaling groups are there to help you out.&lt;/p&gt;

    &lt;p&gt;These groups help you to ensure that you have sufficient amount of instances available to handle the load. Simply create the Auto Scaling groups, add the instances and specify the number of minimum and maximum instances in each group.&lt;/p&gt;

    &lt;p&gt;AWS ensures that your group never goes above and beyond the mentioned number of instances by automatically launching and terminating them.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/img/awscloud/13/Auto-Scaling-group.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;For example, this above mentioned Auto Scaling group has the minimum number of 1 instance (which will be active all the time) while the desired capacity is 2 instance (to meet the usual demands) and a maximum of 4 instances (to meet the unusual spike in traffic). More to this, there are no additional costs attach with Autoscaling Groups.&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;: Fully automated scaling is definitely a dream come true but not at the cost of not being able to mitigate the errors. On the other side, manually configuring scalability environment is quite a work initially but once you have gained control through setup and tuning, it becomes automatic as well.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;availability-on-demand-vs-always-available&quot;&gt;Availability (On-demand vs Always available)&lt;/h3&gt;
    &lt;p&gt;&lt;strong&gt;AWS Lambda:&lt;/strong&gt; As discussed in the scalability section, Lambdas are available all the time. These are brought up and spun down automatically depending upon the requirements of the event triggers. Since you’re not paying for the idle time with AWS Lambda, you can save a lot of money, about which we will talk in the next section.&lt;/p&gt;

    &lt;p&gt;However, the debate over the function’s availability is going on. Here is one of the example, &lt;em&gt;“I’m running is US-East-1 and I am getting 500 errors no matter what I do. It was working a few hours ago and I haven’t change any code. Even a new ‘hello world’ from the templates returns this response. The service shows healthy on dashboards.”&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;Such outcries are common as we give away the ability to manage infrastructure for other added benefits. In such cases, if your Lambda isn’t available, a potential solution would be to deploy your functions into multiple regions. Since you only pay for the executed functions, you only pay for your fallback deploys if there is a region outage.&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Amazon EC2:&lt;/strong&gt; With EC2 instances, you don’t get the benefit of on-demand availability. As discussed in the above section, auto scaling groups help in scalability but in the end, you will have to keep at least one instance up and running.&lt;/p&gt;

    &lt;p&gt;However, EC2 has also faced many outages. &lt;em&gt;One such was in the US-East-1 region due to the network connectivity which led startups like Foursquare, Rapportive, Heroku and Reddit to the temporary unavailability. A similar outage before this one lasted for 48 hours&lt;/em&gt;.&lt;/p&gt;

    &lt;p&gt;Such examples raise questions over the reliability of cloud platforms and consumer technology.&lt;/p&gt;

    &lt;p&gt;As discussed the Lambda, replicating the EC2 instances for the multi-region availability is quite difficult. The most possible solution is to deploy a blue/green strategy but that will lead to double the number of running EC2 instances and let alone the extra cost.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;aws-lambda-vs-ec2-latency&quot;&gt;AWS Lambda vs EC2 Latency&lt;/h3&gt;
    &lt;p&gt;&lt;strong&gt;AWS Lambda:&lt;/strong&gt; The Cold startup is considered as one of the biggest issues with event-driven serverless functions. A cold start occurs when you trigger a function which has been inactive since a considerable time. This delay occurs from the cloud provider due to the time it takes to provision your selected runtime container and then executing your functions and hence this increases the function latency.&lt;/p&gt;

    &lt;p&gt;This may take more than 5 seconds which makes it impossible to guarantee less than 1 second triggering of function from API Gateway, DynamoDB, CloudWatch, etc. &lt;strong&gt;However, a potential solution can be pinging your function from time to time to keep it warm, as discussed we’ve discussed more about in the serverless performance.&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;However, this wouldn’t be a recommended solution as it comes at the cost of an increased bill. For example, if you have a scheduled function which consumes a lot of memory, CPU and time, Lambda’s cost might be higher even when compared to EC2.&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Amazon EC2:&lt;/strong&gt; Cold starts do not occur in EC2 instances typically &lt;strong&gt;unless you’re trying to start a new container&lt;/strong&gt;. New instances have high latency and takes longer to be ready than existing instances because they typically run code on the first startup. &lt;strong&gt;For example, if you Stop the instance and Start it again, the instance will be available quite quickly.&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;However, the startup time invariable depends on some these issues- local filesystem mounts, remote file system mounts, regular OS initialization scripts, user data and cloud-init scripts, instance type and EBS volume type.&lt;/p&gt;

    &lt;p&gt;Moreover, the time taken to launch a new instance will be determined by running benchmarks for your particular use case and these points can only help in reducing the time.&lt;/p&gt;

    &lt;p&gt;Comparatively, this is a tiring task and Lambda seems to be the right choice. Also, consider an example, if you just have a couple of requests to process, running an entire EC2 instance would not be a wise choice.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;aws-lambda-vs-ec2-cost-comparison&quot;&gt;AWS Lambda vs EC2: Cost Comparison&lt;/h2&gt;

&lt;p&gt;The setup costs for AWS Lambda vs EC2 is nil since both have free-tier available. However, getting started with AWS Lambda is comparatively easy. Saying that, let us examine what are the computing cost for two distinct use cases.&lt;/p&gt;

&lt;h3 id=&quot;1-for-a-lowinfrequent-traffic-websiteapp-use-case-lets-assume-the-following-specifications&quot;&gt;#1. For a low/infrequent traffic website/app use case, let’s assume the following specifications:&lt;/h3&gt;

&lt;p&gt;10,000 hits per day over 24 hours&lt;/p&gt;

&lt;p&gt;Execution time: 200ms per hit at 512 GB&lt;/p&gt;

&lt;p&gt;This will result in 432,000 requests per month and 2160 GB-sec of compute/month. Considering the above case, the total cost would be $0.31/month.&lt;/p&gt;

&lt;p&gt;On the contrary, this is the 1/10th cost of what the smallest EC2 instance t2.nano will charge you. Higher EC2 prices is due to its running time for 24 hours (and hence the cost is multiplied with 24) which is not the case with AWS Lambda.&lt;/p&gt;

&lt;h3 id=&quot;2-for-scalable-architecture-use-case&quot;&gt;#2. For scalable architecture use case:&lt;/h3&gt;
&lt;p&gt;Lambda is independently scalable while the same is not the case with EC2. EC2 supports auto-scaling groups but with certain prerequisites.&lt;/p&gt;

&lt;p&gt;To tackle the failover behaviour, the recommended number of instances to group together is three.  Let’s say, we’re running two “nano” instances to handle the failover behaviour: $0.0059 * 24 * 30.5 = $4.31 for the virtual machine and $0.05 * 8 GB = $0.40.&lt;/p&gt;

&lt;p&gt;So, the total cost of the two instances will be $9.42 (at $4.71 each). Autoscaling group would also need Elastic Load Balancer which would at least cost $0.0225 * 24 * 30.5 = $16.47 Can you compare now with AWS Lambda?&lt;/p&gt;

&lt;p&gt;With Lambda, you pay per call and per GB second. Ignoring the call cost since it is $0.20/ 1 million requests. 1 million requests mean 0.4 requests per second in a month. AWS Lambda costs $0.00001667/GB-sec.&lt;/p&gt;

&lt;p&gt;Both EC2 and Elastic Beanstalk will consume parts from of 512 MB memory of the OS and the container itself. Considering two instances similar instances like that would cost 2 * 256MB/1024MB * 60 * 60 * 24 * 30.5 = 1317600 GB-sec. The cost of this amount of GB-sec will be 1317600 * $0.00001667 = $21.96&lt;/p&gt;

&lt;p&gt;This is more costly for obvious reasons. Apart from that, one should keep in mind that the traffic isn’t always distributed evenly and hence you might need more instances that you have anticipated. And this will further increase the cost.&lt;/p&gt;

&lt;h2 id=&quot;use-cases-when-to-use-aws-lambda&quot;&gt;Use Cases: When to use AWS Lambda?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;#1. Low complex code:&lt;/strong&gt; Lambda is perfectly suitable to execute code with no or few variables and 3rd party dependencies. It can quickly process easy tasks containing low complex code, for example, Alexa skills.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#2. Shorter executing time:&lt;/strong&gt; There is no point for spinning up a container where your tasks are occasional and can be executed within minutes. For example, transforming image/video when uploaded to S3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#3. Infrequent traffic:&lt;/strong&gt; In typical scenarios, your servers would be sitting idle while you still pay for it. With the pay-per-function model, Lambda can help you in cutting down your computing cost.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#4. Real-time processing:&lt;/strong&gt; AWS Lambda with AWS Kinesis works best for real-time batch processing. For example, writing batch data to dynamoDB, analysing logs, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#5. Scheduled CRON jobs:&lt;/strong&gt; You can use AWS Lambda function with scheduled events to function at a fixed scheduled time. You can specify this time or may use a CRON expression.&lt;/p&gt;

&lt;h2 id=&quot;use-cases-when-to-use-ec2&quot;&gt;Use Cases: When to use EC2?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;#1. High-performance computing:&lt;/strong&gt; With the large number of EC2 instances you can create virtual servers to meet your demands, EC2 is perfectly suitable for processing complex tasks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#2. Disaster recovery:&lt;/strong&gt; EC2 can be used as a medium for disaster recovery for both active and passive environments. This is because it can be turned on quickly in case of an emergency which facilitates minimal downtime.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#3. Easy DevOps:&lt;/strong&gt; DevOps processes are developed and are full-proof when it comes to EC2. On the contrary, when it comes to Lambda, it is still not mature and is an art only a few have mastered.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#4. Development/Testing:&lt;/strong&gt; Since EC2 provides on-demand computing resources, organisations can deploy large scale testing environment without any upfront investment in the hardware.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#5. Secure Environment:&lt;/strong&gt; EC2 has been known to provide outstanding security to some of the major clients from banking and healthcare. If security is your first priority, EC2 is for you.&lt;/p&gt;

&lt;h2 id=&quot;take-away&quot;&gt;Take Away!&lt;/h2&gt;
&lt;p&gt;Here we come to the final question: which one of these services is best suited for my application?  Well, there is no direct answer. There are many factors which you need to analyze and one of the major ones is your specific use case.If you’re wasting your compute resources due to unpredictable traffic for your application but still want a scalable and cost friendly solution, AWS Lambda is for you. When not to use AWS Lambda? When you want to do complex processing and your process can’t be executed in the limited execution time.&lt;/p&gt;

&lt;p&gt;Or maybe you want to run a complex application which has consistent traffic and want to operate in a tried and tested deployment environment, EC2 if for you. The only drawbacks are a complex setup environment and provisioning of servers.&lt;/p&gt;

&lt;p&gt;The result- For either AWS Lambda vs EC2 or vice versa, both operate for a highly specific use case, however, one wasn’t sufficing the need which necessitated the invention of another.&lt;/p&gt;

&lt;p&gt;Until then, let’s make the most of each of the services. If you’ve hands-on experience with either EC2 or Lambda or both, I’d love to hear from you.&lt;/p&gt;</content><author><name>Girish Godage</name></author><category term="learning" /><summary type="html">AWS Lambda vs EC2- Comparison of AWS Compute Resources</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/img/aws_cloud.png" /></entry><entry><title type="html">Authenticate applications through facial recognition with Amazon Cognito and Amazon Rekognition</title><link href="http://localhost:4000/blog/authenticate-applications-through-facial-recognition-with-amazon-cognito-and-amazon-rekognition" rel="alternate" type="text/html" title="Authenticate applications through facial recognition with Amazon Cognito and Amazon Rekognition" /><published>2020-01-25T10:41:00+00:00</published><updated>2020-01-25T10:41:00+00:00</updated><id>http://localhost:4000/blog/amzon-cognito-Rekognition-auth</id><content type="html" xml:base="http://localhost:4000/blog/authenticate-applications-through-facial-recognition-with-amazon-cognito-and-amazon-rekognition">&lt;h2 id=&quot;authenticate-applications-through-facial-recognition-with-amazon-cognito-and-amazon-rekognition&quot;&gt;Authenticate applications through facial recognition with Amazon Cognito and Amazon Rekognition&lt;/h2&gt;

&lt;p&gt;With increased use of different applications, social networks, financial platforms, emails and cloud storage solutions, managing different passwords and credentials can become a burden. In many cases, sharing one password across all these applications and platforms is just not possible. Different security standards may be required, such as passwords composed by only numeric characters, password renewal policies, and providing security questions.&lt;/p&gt;

&lt;p&gt;But what if you could enhance the ways users authenticate themselves in their application in a more convenient, simpler and above everything, more secure way? In this post, I will show how to leverage Amazon Cognito user pools to customize your authentication flows and allow logging into your applications using Amazon Rekognition for facial recognition using a sample application.&lt;/p&gt;

&lt;h2 id=&quot;solution-overview&quot;&gt;Solution Overview&lt;/h2&gt;

&lt;p&gt;We will build a Mobile or Web application that allows users to sign in using an email and require the user to upload a document containing his or her photo. We will use the &lt;strong&gt;AWS Amplify Framework&lt;/strong&gt; to integrate our Front-End application with &lt;strong&gt;Amazon S3&lt;/strong&gt; and store this image in a secure and encrypted bucket.  Our solution will trigger a Lambda function for each new image uploaded to this bucket so that we can index the images inside Amazon Rekognition and save the metadata in a &lt;strong&gt;DynamoDB&lt;/strong&gt; table for later queries.&lt;/p&gt;

&lt;p&gt;For authentication, this solution uses Amazon Cognito User Pools combined with Lambda functions to customize the authentication flows together with the &lt;strong&gt;Amazon Rekognition CompareFaces&lt;/strong&gt; API to identify the confidence level between user photos provided during Sign Up and Sign In. Here is the architecture of the solution:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/awscloud/12/cognito-rekognition-architecure.png&quot; alt=&quot;image info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here’s a step-wise description of the above data-flow architecture diagram:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; User signs up into the Cognito User Pool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; User uploads – during Sign Up – a document image containing his/her photo and name, to an S3 Bucket (e.g. Passport).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; A Lambda function is triggered containing the uploaded image as payload.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; The function first indexes the image in a specific Amazon Rekognition Collection to store these user documents.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; The same function then persists in a DynamoDB table as the indexed image metadata, together with the email registered in Amazon Cognito User Pool for later queries.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; User enters an email in the custom Sign In page, which makes a request to Cognito User Pool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; Amazon Cognito User Pool triggers the “Define Auth Challenge” trigger that determines which custom challenges are to be created at this moment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; The User Pool then invokes the “Create Auth Challenge” trigger. This trigger queries the DynamoDB table for the user containing the given email id to retrieve its indexed photo from the Amazon Rekognition Collection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9.&lt;/strong&gt; The User Pool invokes the “Verify Auth Challenge” trigger. This verifies if the challenge was indeed successfully completed; if it finds an image, it will compare it with the photo taken during Sign In to measure its confidence between both the images.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10.&lt;/strong&gt; The User Pool, once again, invokes the “Define Auth Challenge” trigger that verifies if the challenge was answered. No no further challenges are created, if the ‘Define Auth challenge’ is able to verify the user-supplied answer. The trigger response, back to the User Poll will include an “issueTokens:true” attribute to authenticate itself and finally issue the user a JSON Web Token (JWT) (see step 6).&lt;/p&gt;

&lt;h3 id=&quot;serverless-application-and-the-different-lambdas-invoked&quot;&gt;Serverless Application and the different Lambdas invoked&lt;/h3&gt;

&lt;p&gt;The following solution is available as a Serverless application. You can deploy it directly from AWS Serverless Application Repository. Core parts of this implementation are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Users are required to use a valid email as user name.&lt;/li&gt;
  &lt;li&gt;The solution includes a Cognito App Client configured to “Only allow custom authentication” as Amazon Cognito requires a password for user sign up. We are creating a random password to these users, since we don’t want them to Sign In using these passwords later.&lt;/li&gt;
  &lt;li&gt;We use two Amazon S3 Buckets: one to store document images uploaded during Sign Up and one to store user photos taken when Signing In for face comparisons.&lt;/li&gt;
  &lt;li&gt;We use two different Lambda runtimes (Python and Node.js) to demonstrate how AWS Serverless Application Model (SAM) handles multiple runtimes in the same project and development environment for the developer’s perspective.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following Lambda functions are triggered to implement the images indexing in Amazon Rekognition and customize Amazon Cognito User Pools custom authentication challenges:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Create Rekognition Collection&lt;/strong&gt; (Python 3.6)– This Lambda function gets triggered only once, at the beginning of deployment, to create a Custom Collection in Amazon Rekognition to index documents for user Sign Ups.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Index Images&lt;/strong&gt; (Python 3.6) – This Lambda function gets triggered for each new document upload to Amazon S3 during Sign Up and indexes the uploaded document in the Amazon Rekognition Collection (mentioned in the previous step) and then persists its metadata into DynamoDB.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Define Auth Challenge&lt;/strong&gt; (Node.js 8.10) – This Lambda function tracks the custom authentication flow, which is comparable to a decider function in a state machine. It determines which challenges are presented, in what order, to the user. At the end, it reports back to the user pool if the user succeeded or failed authentication. The Lambda function is invoked at the start of the custom authentication flow and also after each completion of the “Verify Auth Challenge Response” trigger.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Create Auth Challenge&lt;/strong&gt; (Node.js 8.10) – This Lambda function gets invoked, based on the instruction of the “Define Auth Challenge” trigger, to create a unique challenge for the user. We will use this function to query DynamoDB for existing user records and if their given metadata are valid.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Verify Auth Challenge Response&lt;/strong&gt; (Node.js 8.10) – This Lambda function gets invoked by the user pool when the user provides the answer to the challenge. Its only job is to determine if that answer is correct. In this case, it compares both images provided during Sign Up and Sign In, using the Amazon Rekognition CompareFaces API and considers a API responses containing a confidence level equals or greater than 90% as a valid challenge response&lt;/p&gt;

&lt;p&gt;In the sections below, let’s step through the code for the different Lambda functions we described above.&lt;/p&gt;

&lt;h3 id=&quot;1-create-an-amazon-rekognition-collection&quot;&gt;1. Create an Amazon Rekognition Collection&lt;/h3&gt;

&lt;p&gt;As described above, this function creates a Collection in Amazon Rekognition that will later receive user photos uploaded during Sign Up.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;boto3&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;maxResults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;collectionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'COLLECTION_NAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rekognition'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#Create a collection
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Creating collection:'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collectionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CollectionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collectionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Collection ARN: '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'CollectionArn'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Status code: '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'StatusCode'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Done...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-index-images-into-amazon-rekognition&quot;&gt;2. Index Images into Amazon Rekognition&lt;/h3&gt;

&lt;p&gt;This function is responsible for receiving uploaded images during the sign up from users and index the images in the Amazon Rekognition Collection created by the Lambda described above to persist its metadata in an Amazon Dynamodb table.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;__future__&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print_function&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;boto3&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;decimal&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Decimal&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;dynamodb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dynamodb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'s3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rekognition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boto3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rekognition'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# --------------- Helper Functions ------------------
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index_faces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rekognition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_faces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;S3Object&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Bucket&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;CollectionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'COLLECTION_NAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;faceId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dynamodb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TableName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'RekognitionId'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'S'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;faceId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'FullName'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'S'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    
&lt;span class=&quot;c1&quot;&gt;# --------------- Main handler ------------------
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# Get the object from the event
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Records'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'s3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bucket'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unquote_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Records'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'s3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# Calls Amazon Rekognition IndexFaces API to detect faces in S3 object 
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# to index faces into specified collection
&lt;/span&gt;        
        &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index_faces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;# Commit faceId and full name object metadata to DynamoDB
&lt;/span&gt;        
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ResponseMetadata'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'HTTPStatusCode'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;faceId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'FaceRecords'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Face'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'FaceId'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bucket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Metadata'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;update_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'COLLECTION_NAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;faceId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Error processing object {} from bucket {}. &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-define-auth-challenge-function&quot;&gt;3. Define Auth Challenge Function&lt;/h2&gt;

&lt;p&gt;This is the decider function that manages the authentication flow. In the session array that’s provided to this Lambda function (event.request.session), the entire state of the authentication flow is present. If it’s empty, it means the custom authentication flow just started. If it has items, the custom authentication flow is underway, i.e. a challenge was presented to the user, the user provided an answer, and it was verified to be right or wrong. In either case, the decider function has to decide what to do next:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-node.js&quot;&gt;exports.handler = async (event, context) =&amp;gt; {

    console.log(&quot;Define Auth Challenge: &quot; + JSON.stringify(event));

    if (event.request.session &amp;amp;&amp;amp;
        event.request.session.length &amp;gt;= 3 &amp;amp;&amp;amp;
        event.request.session.slice(-1)[0].challengeResult === false) {
        // The user provided a wrong answer 3 times; fail auth
        event.response.issueTokens = false;
        event.response.failAuthentication = true;
    } else if (event.request.session &amp;amp;&amp;amp;
        event.request.session.length &amp;amp;&amp;amp;
        event.request.session.slice(-1)[0].challengeResult === true) {
        // The user provided the right answer; succeed auth
        event.response.issueTokens = true;
        event.response.failAuthentication = false;
    } else {
        // The user did not provide a correct answer yet; present challenge
        event.response.issueTokens = false;
        event.response.failAuthentication = false;
        event.response.challengeName = 'CUSTOM_CHALLENGE';
    }

    return event;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;4-create-auth-challenge-function&quot;&gt;4. Create Auth Challenge Function&lt;/h3&gt;

&lt;p&gt;This function queries DynamoDB for a record containing the given e-mail to retrieve its image ID inside Amazon Rekognition Collection and define as a challenge that the user must provide a photo that relates to the same person.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-node.js&quot;&gt;const aws = require('aws-sdk');
const dynamodb = new aws.DynamoDB.DocumentClient();

exports.handler = async (event, context) =&amp;gt; {

    console.log(&quot;Create auth challenge: &quot; + JSON.stringify(event));

    if (event.request.challengeName == 'CUSTOM_CHALLENGE') {
        event.response.publicChallengeParameters = {};

        let answer = '';
        // Querying for Rekognition ids for the e-mail provided
        const params = {
            TableName: process.env.COLLECTION_NAME,
            IndexName: &quot;FullName-index&quot;,
            ProjectionExpression: &quot;RekognitionId&quot;,
            KeyConditionExpression: &quot;FullName = :userId&quot;,
            ExpressionAttributeValues: {
                &quot;:userId&quot;: event.request.userAttributes.email
            }
        }
        
        try {
            const data = await dynamodb.query(params).promise();
            data.Items.forEach(function (item) {
                
                answer = item.RekognitionId;

                event.response.publicChallengeParameters.captchaUrl = answer;
                event.response.privateChallengeParameters = {};
                event.response.privateChallengeParameters.answer = answer;
                event.response.challengeMetadata = 'REKOGNITION_CHALLENGE';
                
                console.log(&quot;Create Challenge Output: &quot; + JSON.stringify(event));
                return event;
            });
        } catch (err) {
            console.error(&quot;Unable to query. Error:&quot;, JSON.stringify(err, null, 2));
            throw err;
        }
    }
    return event;
}

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;5-verify-auth-challenge-response-function&quot;&gt;5. Verify Auth Challenge Response Function&lt;/h3&gt;

&lt;p&gt;This function verifies within Amazon Rekognition if it can find an image with the confidence level equals or over 90% compared to the image uploaded during Sign In, and if this image refers to the user claims to be through the given e-mail address.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Node.js&quot;&gt;var aws = require('aws-sdk');
var rekognition = new aws.Rekognition();

exports.handler = async (event, context) =&amp;gt; {

    console.log(&quot;Verify Auth Challenge: &quot; + JSON.stringify(event));
    let userPhoto = '';
    event.response.answerCorrect = false;

    // Searching existing faces indexed on Rekognition using the provided photo on s3

    const objectName = event.request.challengeAnswer;
    const params = {
        &quot;CollectionId&quot;: process.env.COLLECTION_NAME,
        &quot;Image&quot;: {
            &quot;S3Object&quot;: {
                &quot;Bucket&quot;: process.env.BUCKET_SIGN_UP,
                &quot;Name&quot;: objectName
            }
        },
        &quot;MaxFaces&quot;: 1,
        &quot;FaceMatchThreshold&quot;: 90
    };
    try {
        const data = await rekognition.searchFacesByImage(params).promise();

        // Evaluates if Rekognition was able to find a match with the required 
        // confidence threshold

        if (data.FaceMatches[0]) {
            console.log('Face Id: ' + data.FaceMatches[0].Face.FaceId);
            console.log('Similarity: ' + data.FaceMatches[0].Similarity);
            userPhoto = data.FaceMatches[0].Face.FaceId;
            if (userPhoto) {
                if (event.request.privateChallengeParameters.answer == userPhoto) {
                    event.response.answerCorrect = true;
                }
            }
        }
    } catch (err) {
        console.error(&quot;Unable to query. Error:&quot;, JSON.stringify(err, null, 2));
        throw err;
    }
    return event;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;the-front-end-application&quot;&gt;The Front End Application&lt;/h3&gt;
&lt;p&gt;Now that we’ve stepped through all the Lambdas, let’s create a custom Sign In page, in order to orchestrate and test our scenario. You can use AWS Amplify Framework to integrate your Sign In page to Amazon Cognito and the photo uploads to Amazon S3.&lt;/p&gt;

&lt;p&gt;The AWS Amplify Framework allows you to implement your application using your favourite framework (React, Angular, Vue, HTML/JavaScript, etc). You can customize the snippets below as per your requirements. The snippets below demonstrate how to import and initialize AWS Amplify Framework on React:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import Amplify from 'aws-amplify';

Amplify.configure({
  Auth: {
    region: 'your region',
    userPoolId: 'your userPoolId',
    userPoolWebClientId: 'your clientId',
  },
  Storage: { 
    region: 'your region', 
    bucket: 'your sign up bucket'
  }
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;signing-up&quot;&gt;Signing Up&lt;/h3&gt;

&lt;p&gt;For users to be able to sign themselves up, as mentioned above, we will “generate” a random password on their behalf since it is required by Amazon Cognito for user sign up. However, once we create our Cognito User Pool Client, we ensure that authentication only happens following the custom authentication flow – never using user and password.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import { Auth } from 'aws-amplify';

signUp = async event =&amp;gt; {
  const params = {
    username: this.state.email,
    password: getRandomString(30),
    attributes: {
      name: this.state.fullName
    }
  };
  await Auth.signUp(params);
};

function getRandomString(bytes) {
  const randomValues = new Uint8Array(bytes);
  window.crypto.getRandomValues(randomValues);
  return Array.from(randomValues).map(intToHex).join('');
}

function intToHex(nr) {
  return nr.toString(16).padStart(2, '0');
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;signing-in&quot;&gt;Signing in&lt;/h3&gt;
&lt;p&gt;Starts the custom authentication flow to the user.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import { Auth } from &quot;aws-amplify&quot;;

signIn = () =&amp;gt; { 
    try { 
        user = await Auth.signIn(this.state.email);
        this.setState({ user });
    } catch (e) { 
        console.log('Oops...');
    } 
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;answering-the-custom-challenge&quot;&gt;Answering the Custom Challenge&lt;/h3&gt;

&lt;p&gt;In this step, we open the camera through Browser to take a user photo and then upload it to Amazon S3, so we can start the face comparison.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import Webcam from &quot;react-webcam&quot;;

// Instantiate and set webcam to open and take a screenshot
// when user is presented with a custom challenge

/* Webcam implementation goes here */


// Retrieves file uploaded to S3 and sends as a File to Rekognition 
// as answer for the custom challenge
dataURLtoFile = (dataurl, filename) =&amp;gt; {
  var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],
      bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);
  while(n--){
      u8arr[n] = bstr.charCodeAt(n);
  }
  return new File([u8arr], filename, {type:mime});
};

sendChallengeAnswer = () =&amp;gt; {

    // Capture image from user camera and send it to S3
    const imageSrc = this.webcam.getScreenshot();
    const attachment = await s3UploadPub(dataURLtoFile(imageSrc, &quot;id.png&quot;));
    
    // Send the answer to the User Pool
    const answer = `public/${attachment}`;
    user = await Auth.sendCustomChallengeAnswer(cognitoUser, answer);
    this.setState({ user });
    
    try {
        // This will throw an error if the user is not yet authenticated:
        await Auth.currentSession();
    } catch {
        console.log('Apparently the user did not enter the right code');
    }
    
};

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In this blog post, we implemented an authentication mechanism using facial recognition using the custom authentication flows provided by Amazon Cognito combined with Amazon Rekognition. Depending on your organization and workload security criteria and requirements, this scenario might work from both security and user experience point of views. Additionally, we can enhance the security factor by chaining multiple Auth Challenges not only based on the user photo, but also a combination of Liveness Detection, a combination of their document numbers used for signing up and other additional MFA’s.&lt;/p&gt;

&lt;p&gt;Since this is an entirely Serverless-based solution, you can customize it as your requirements arise using AWS Lambda functions. You can read more on custom authentication in our developer guide.&lt;/p&gt;</content><author><name>Girish Godage</name></author><category term="learning" /><summary type="html">Authenticate applications through facial recognition with Amazon Cognito and Amazon Rekognition</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/img/aws_cloud.png" /></entry></feed>